<UserControl x:Class="CapFrameX.View.ComparisonView"
			 Name="ComparisonViewUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:ctrls="clr-namespace:CapFrameX.View.Controls"
             xmlns:vm="clr-namespace:CapFrameX.ViewModel;assembly=CapFrameX.ViewModel"
             xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
			 xmlns:attached="clr-namespace:CapFrameX.MVVM.AttachedProperties;assembly=CapFrameX.MVVM"
             xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:controls="clr-namespace:CapFrameX.View.Controls"
             xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
             xmlns:oxy="http://oxyplot.org/wpf"
             xmlns:dragdrop="urn:gong-wpf-dragdrop"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             Background="{DynamicResource MaterialDesignBackground}"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="Styles/CustomRangeSliderStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <mvvm:ZoomingModeConverter x:Key="ZoomingModeConverter"/>
            <mvvm:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToHiddenConverter" FalseValue="Hidden" TrueValue="Visible"/>
            <mvvm:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Collapsed" TrueValue="Visible"/>
            <mvvm:BoolToVisibilityConverter x:Key="TrueToCollapsedConverter" FalseValue="Visible" TrueValue="Collapsed"/>
            <mvvm:AddValueConverter x:Key="AddValueConverter" Offset="-111"/>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MaterialDesignNavigationRailTabItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="25" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="ComparisonAreaGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" MinWidth="695"></ColumnDefinition>
            <ColumnDefinition Width="285"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <materialDesign:DialogHost Margin="5 10 0 5"
								   IsOpen="{Binding MessageDialogContentIsOpen}"
								   DialogContent="{Binding MessageDialogContent}"
								   CloseOnClickAway="True">
            <TabControl Name="GraphTab" Grid.Row="0" Grid.Column="0" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}"
					SelectedItem="{Binding SelectedChartItem}" FocusVisualStyle="{x:Null}">
                <TabItem Width="75" Foreground="{DynamicResource MaterialDesignBody}">
                    <TabItem.Header>
                        <Label FontSize="12">Bar charts</Label>
                    </TabItem.Header>
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" Grid.Row="0" Margin="0 10 0 10" FontWeight="Bold" FontSize="16" Text="{Binding CurrentGameName}" HorizontalAlignment="Center"
							   Visibility="{Binding ShowGameNameTitle, Converter={StaticResource TrueToVisibleConverter}}"/>
                        <TextBox DockPanel.Dock="Top" Grid.Row="0" HorizontalAlignment="Center" Visibility="{Binding Path=IsChecked, ElementName=ShowCustomTitleToggleButton, Converter={StaticResource TrueToVisibleConverter}}"
                                 Text="Type your title here..." Height="30" MinWidth="50" 
                                 FontSize="18" PreviewKeyDown="CustomTitle_PreviewKeyDown" />
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <lvc:CartesianChart Grid.Row="0" VerticalAlignment="Top" MaxWidth="1000" Margin="10" Series="{Binding ComparisonRowChartSeriesCollection}" Height="{Binding BarChartHeight}"
											Visibility="{Binding HasComparisonItems, Converter={StaticResource TrueToVisibleConverter}}" DisableAnimations="True"
											Hoverable="False" DataTooltip="{x:Null}" LegendLocation="Top" UseRelativeMode="{Binding UseComparisonRelativeMode, Mode=TwoWay}">
                                <lvc:CartesianChart.AxisX>
                                    <lvc:Axis MinValue="{Binding BarMinValue}" MaxValue="{Binding BarMaxValue}" Foreground="Transparent">
                                        <lvc:Axis.Separator>
                                            <lvc:Separator StrokeThickness="0" IsEnabled="False"></lvc:Separator>
                                        </lvc:Axis.Separator>
                                    </lvc:Axis>
                                </lvc:CartesianChart.AxisX>
                                <lvc:CartesianChart.AxisY>
                                    <lvc:Axis Labels="{Binding ComparisonRowChartLabels}" FontSize="12" Foreground="{DynamicResource MaterialDesignBody}">
                                        <lvc:Axis.Separator>
                                            <!--step 1 forces the axis to display all labels, disabling it makes it invisible-->
                                            <lvc:Separator Step="1" IsEnabled="False"></lvc:Separator>
                                        </lvc:Axis.Separator>
                                    </lvc:Axis>
                                </lvc:CartesianChart.AxisY>
                            </lvc:CartesianChart>
                        </ScrollViewer>
                    </DockPanel>
                </TabItem>
                <TabItem Width="150" Foreground="{DynamicResource MaterialDesignBody}">
                    <TabItem.Header>
                        <Label FontSize="12">Line charts/ L-shapes</Label>
                    </TabItem.Header>
                    <Grid Name="ChartAndCuttingGrid">
                        <Grid.RowDefinitions>
                            <!--Edit box for custom title-->
                            <RowDefinition Height="Auto"></RowDefinition>
                            <!--frametimes/fps-->
                            <RowDefinition Height="2*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="1*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" HorizontalAlignment="Center" Visibility="{Binding Path=IsChecked, ElementName=ShowCustomTitleToggleButton, Converter={StaticResource TrueToVisibleConverter}}"
                                 Text="Type your title here..." Height="30" MinWidth="50" 
                                 FontSize="18" />
                        <Grid Grid.Row="1" Margin="0 0 0 0">
                            <Grid>
                                <Grid Margin="0 0 50 0" Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                    <ComboBox Grid.Column="5" Margin="45 0 0 15" HorizontalAlignment="Left" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Values"
					                    materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="80" Height="40">
                                        <ComboBoxItem IsSelected="True">Frametimes</ComboBoxItem>
                                        <ComboBoxItem>FPS</ComboBoxItem>
                                        <ComboBox.Text>
                                            <Binding Path="SelectedChartView"
						                    Mode="TwoWay"
						                    UpdateSourceTrigger="PropertyChanged">
                                            </Binding>
                                        </ComboBox.Text>
                                    </ComboBox>
                                </Grid>
                                <ContentPresenter x:Name="ChartsContentPresenter" Content="{Binding}">
                                    <ContentPresenter.Resources>
                                        <DataTemplate x:Key="FrametimeChartContent">
                                            <controls:PlotViewCustomZoom Background="Transparent" Model="{Binding DataContext.ComparisonFrametimesModel, ElementName=ComparisonViewUserControl}">
                                                <controls:PlotViewCustomZoom.DefaultTrackerTemplate>
                                                    <ControlTemplate>
                                                        <oxy:TrackerControl Position="{Binding Position}" Background="{DynamicResource MaterialDesignCardBackground}">
                                                            <oxy:TrackerControl.Content>
                                                                <TextBlock Text="{Binding}" Margin="5" />
                                                            </oxy:TrackerControl.Content>
                                                        </oxy:TrackerControl>
                                                    </ControlTemplate>
                                                </controls:PlotViewCustomZoom.DefaultTrackerTemplate>
                                                <controls:PlotViewCustomZoom.ContextMenu>
                                                    <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                        <MenuItem Header="Save plot as SVG" Command="{Binding SaveFrametimePlotAsSVG }"/>
                                                        <MenuItem Header="Save plot as PNG" Command="{Binding SaveFrametimePlotAsPNG }"/>
                                                    </ContextMenu>
                                                </controls:PlotViewCustomZoom.ContextMenu>
                                            </controls:PlotViewCustomZoom>
                                        </DataTemplate>
                                        <DataTemplate x:Key="FpsChartContent">
                                            <Grid>
                                                <Grid Margin="0 0 50 0" Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                                    <ComboBox  Width="100" Height="40" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="150 0 0 15" materialDesign:HintAssist.Hint="Filter mode"
										                      materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="240"
                                                              SelectedItem="{Binding SelectedFilterMode}" SelectedIndex="1" ItemsSource="{Binding FilterModes}">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                                </Grid>
                                                <controls:PlotViewCustomZoom Background="Transparent" Model="{Binding DataContext.ComparisonFpsModel, ElementName=ComparisonViewUserControl}">
                                                    <controls:PlotViewCustomZoom.DefaultTrackerTemplate>
                                                        <ControlTemplate>
                                                            <oxy:TrackerControl Position="{Binding Position}" Background="{DynamicResource MaterialDesignCardBackground}">
                                                                <oxy:TrackerControl.Content>
                                                                    <TextBlock Text="{Binding}" Margin="5" />
                                                                </oxy:TrackerControl.Content>
                                                            </oxy:TrackerControl>
                                                        </ControlTemplate>
                                                    </controls:PlotViewCustomZoom.DefaultTrackerTemplate>
                                                    <controls:PlotViewCustomZoom.ContextMenu>
                                                        <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                            <MenuItem Header="Save plot as SVG" Command="{Binding SaveFPSPlotAsSVG }"/>
                                                            <MenuItem Header="Save plot as PNG" Command="{Binding SaveFPSPlotAsPNG }"/>
                                                        </ContextMenu>
                                                    </controls:PlotViewCustomZoom.ContextMenu>
                                                </controls:PlotViewCustomZoom>
                                            </Grid>
                                        </DataTemplate>
                                    </ContentPresenter.Resources>
                                    <ContentPresenter.Style>
                                        <Style TargetType="{x:Type ContentPresenter}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DataContext.SelectedChartView, ElementName=ComparisonViewUserControl}" Value="Frametimes">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource FrametimeChartContent}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DataContext.SelectedChartView, ElementName=ComparisonViewUserControl}" Value="FPS">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource FpsChartContent}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentPresenter.Style>
                                </ContentPresenter>
                            </Grid>
                        </Grid>
                        <Grid Grid.Row="2" Margin="0 5 0 0" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" 
                              Visibility="{Binding ElementName=RangeSliderActiveToggleButton, Path=IsChecked, Converter={StaticResource TrueToCollapsedConverter}}">
                            <Border Grid.Row="2" BorderThickness="5" BorderBrush="Transparent">
                            </Border>
                        </Grid>
                        <Grid Grid.Row="2" Margin="0 5 0 0"  Visibility="{Binding ElementName=RangeSliderActiveToggleButton, Path=IsChecked, Converter={StaticResource TrueToVisibleConverter}}"
                              Background="{DynamicResource MaterialDesignTextFieldBoxBackground}">
                            <mahapps:RangeSlider Margin="45 10 10 30" LowerValue="{Binding FirstSeconds}" UpperValue="{Binding LastSeconds}" 
                                                 Maximum="{Binding MaxRecordingTime}"                                    
									             TickPlacement="BottomRight" TickFrequency="2.5"
                                                 MinRange="{Binding MinRangeSliderRange}"
									             Style="{StaticResource CustomRangeSlider}"/>
                            <StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Orientation="Horizontal" Margin="0 0 10 5" Height="22">
                                <TextBlock Text="Start and end points:" Margin="0 5 5 0"/>
                                <TextBox x:Name="FirsSecondsTextbox" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" Grid.Row="1" materialDesign:HintAssist.Hint="Start (s)" HorizontalAlignment="Center" Width="45"
                                         ToolTip="Range Slider start point" PreviewKeyDown="FirstSecondsTextBox_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" TextAlignment="Center">
                                    <TextBox.Text>
                                        <Binding Path="FirstSeconds"
                                                 StringFormat="F2"
								                 Mode="TwoWay"
								                 UpdateSourceTrigger="LostFocus">
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Text="-" Margin="3 3 3 0"/>
                                <TextBox x:Name="LastSecondsTextbox" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" Grid.Row="1" materialDesign:HintAssist.Hint="End (s)" HorizontalAlignment="Center" Width="45"
                                        ToolTip="Range Slider end point" PreviewKeyDown="LastSecondsTextBox_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" TextAlignment="Center">
                                    <TextBox.Text>
                                        <Binding Path="LastSeconds"
                                                 StringFormat="F2"
								                 Mode="TwoWay"
								                 UpdateSourceTrigger="LostFocus">
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Horizontal" Margin="45 0 0 10" Height="15">
                                <TextBlock Text="Time window:"/>
                                <TextBlock Text="{Binding RemainingRecordingTime}" Margin="5 0 0 0"/>
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="3" Margin="0 5 0 0" Background="Transparent">
                            <lvc:CartesianChart Foreground="{DynamicResource MaterialDesignBody}" MouseDoubleClick="ResetLShapeChart_MouseDoubleClick" Series="{Binding ComparisonLShapeCollection}" Zoom="Y"
                                                Margin="5 5 0 0" ToolTipService.IsEnabled="False">
                                <lvc:CartesianChart.DataTooltip>
                                    <lvc:DefaultTooltip BulletSize="20" Background="{DynamicResource MaterialDesignPaper}"/>
                                </lvc:CartesianChart.DataTooltip>
                                <lvc:CartesianChart.AxisX>
                                    <lvc:Axis Title="Percentiles (%)" Name="LShapeX" Foreground="{DynamicResource MaterialDesignBody}">
                                        <lvc:Axis.Separator >
                                            <lvc:Separator Step="1" StrokeThickness="0"></lvc:Separator>
                                        </lvc:Axis.Separator>
                                    </lvc:Axis>
                                </lvc:CartesianChart.AxisX>
                                <lvc:CartesianChart.AxisY>
                                    <lvc:Axis Title="{Binding ComparisonLShapeYAxisLabel}" Name="LShapeY" Foreground="{DynamicResource MaterialDesignBody}">
                                        <lvc:Axis.Separator>
                                            <lvc:Separator StrokeThickness="0.2" Stroke="{DynamicResource MaterialDesignBody}"></lvc:Separator>
                                        </lvc:Axis.Separator>
                                    </lvc:Axis>
                                </lvc:CartesianChart.AxisY>
                            </lvc:CartesianChart>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>
        </materialDesign:DialogHost>
        <!-- Toolbar-->
        <Grid Grid.Row="1" Grid.Column="0" Margin="5 0 0 5" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="10 0 10 0" Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}">Custom title:</TextBlock>
                <ToggleButton x:Name="ShowCustomTitleToggleButton" Margin="10 0 0 0" Style="{StaticResource MaterialDesignSwitchToggleButton}"
								  ToolTip="Show custom title edit box" IsChecked="{Binding ShowCustomTitle}"/>
            </StackPanel>

            <StackPanel Grid.Column="1" Margin="10 5 5 5" Orientation="Horizontal"
                        ToolTip="Select up to 2 contexts to be shown">
                <TextBlock Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}">Contexts</TextBlock>
                <materialDesign:PopupBox Foreground="{DynamicResource MaterialDesignBody}" StaysOpen="True" ToolTipService.ShowDuration="25000" PlacementMode="TopAndAlignCentres">
                    <materialDesign:Card Width="325" Margin="0 0 0 -10">
                        <StackPanel>
                            <Grid Margin="8 8 8 8">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox Grid.Column="0" Width="140" Height="40" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5 5 5 5" materialDesign:HintAssist.Hint="Context 1"
					                materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="150" materialDesign:HintAssist.HintOpacity=".8" materialDesign:ComboBoxAssist.ClassicMode="True"
					                ItemsSource="{Binding ComparisonContextItems}" SelectedItem="{Binding SelectedComparisonContext}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <ComboBox Grid.Column="1" Width="140" Height="40" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="15 5 5 5" materialDesign:HintAssist.Hint="Context 2"
					                materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="150" materialDesign:HintAssist.HintOpacity=".8" materialDesign:ComboBoxAssist.ClassicMode="True"
					                ItemsSource="{Binding ComparisonContextItems}" SelectedItem="{Binding SelectedSecondComparisonContext}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </Grid>
                        </StackPanel>
                    </materialDesign:Card>
                </materialDesign:PopupBox>
            </StackPanel>

            <StackPanel Grid.Column="2" Margin="10 5 5 5" Orientation="Horizontal" Visibility="{Binding IsBarChartTabActive, Converter={StaticResource TrueToVisibleConverter}}"
                        ToolTip="Select metrics to be shown">
                <TextBlock Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"> Metrics</TextBlock>
                <materialDesign:PopupBox Foreground="{DynamicResource MaterialDesignBody}" StaysOpen="True" ToolTipService.ShowDuration="25000" PlacementMode="TopAndAlignCentres">
                    <materialDesign:Card Width="450" Margin="0 0 0 -10">
                        <StackPanel>
                            <Grid Margin="8 8 8 8">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox Grid.Column="0" Width="125" Height="40" VerticalAlignment="Center" Margin="5 5 5 5" materialDesign:HintAssist.Hint="First metric"
					                Visibility="{Binding IsBarChartTabActive, Converter={StaticResource TrueToVisibleConverter}}"
					                materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="330" materialDesign:HintAssist.HintOpacity=".8" materialDesign:ComboBoxAssist.ClassicMode="True"
					                ItemsSource="{Binding FirstMetricItems}" SelectedItem="{Binding SelectedFirstMetric}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <ComboBox Grid.Column="1" Width="125" Height="40" VerticalAlignment="Center" Margin="15 5 5 5" materialDesign:HintAssist.Hint="Second metric"
					                Visibility="{Binding IsBarChartTabActive, Converter={StaticResource TrueToVisibleConverter}}"
					                materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="330" materialDesign:HintAssist.HintOpacity=".8" materialDesign:ComboBoxAssist.ClassicMode="True"
					                ItemsSource="{Binding SecondMetricItems}" SelectedItem="{Binding SelectedSecondMetric}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <ComboBox Grid.Column="2" Width="125" Height="40" VerticalAlignment="Center" Margin="15 5 5 5" materialDesign:HintAssist.Hint="Third metric"
					                materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="360" materialDesign:HintAssist.HintOpacity=".8" materialDesign:ComboBoxAssist.ClassicMode="True"
					                ItemsSource="{Binding ThirdMetricItems}" SelectedItem="{Binding SelectedThirdMetric}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </Grid>
                        </StackPanel>
                    </materialDesign:Card>
                </materialDesign:PopupBox>
            </StackPanel>

            <StackPanel Grid.Column="2" Margin="10 0 0 0" VerticalAlignment="Center" Orientation="Horizontal"
						Visibility="{Binding IsBarChartTabActive, Converter={StaticResource TrueToCollapsedConverter}}">
                <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}">Range slider:</TextBlock>
                <ToggleButton Name="RangeSliderActiveToggleButton" Margin="10 0 0 0" Style="{StaticResource MaterialDesignSwitchToggleButton}"
							  IsChecked="{Binding IsRangeSliderActive}"/>
            </StackPanel>

            <StackPanel Grid.Column="3" Margin="10 0 0 0" VerticalAlignment="Center" Orientation="Horizontal"
						Visibility="{Binding IsBarChartTabActive, Converter={StaticResource TrueToVisibleConverter}}">
                <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}">Grouping:</TextBlock>
                <ToggleButton Margin="10 0 0 0" Style="{StaticResource MaterialDesignSwitchToggleButton}"
							  ToolTip="Sort entries by game first" IsChecked="{Binding UseComparisonGrouping}"/>
            </StackPanel>

            <StackPanel Grid.Column="4" VerticalAlignment="Center" Margin="15 0 0 0" Orientation="Horizontal"
						Visibility="{Binding IsBarChartTabActive, Converter={StaticResource TrueToVisibleConverter}}">
                <ComboBox Width="80" Height="40" Margin="0 0 0 10" materialDesign:HintAssist.Hint="Sort metric" materialDesign:HintAssist.HintOpacity=".8" materialDesign:HintAssist.IsFloating="True"
                          ItemsSource="{Binding SortMetricItemsSource}" SelectedItem="{Binding SelectedSortMetric}" Foreground="{DynamicResource MaterialDesignBody}"> 
                </ComboBox>
                <ToggleButton Margin="5 0 0 0" Foreground="{DynamicResource MaterialDesignBody}" BorderThickness="1" Background="Transparent"
							  Style="{StaticResource MaterialDesignActionAccentToggleButton}" IsChecked="{Binding IsSortModeAscending}">
                    <ToggleButton.Content>
                        <materialDesign:PackIcon Kind="SortDescending" />
                    </ToggleButton.Content>
                    <materialDesign:ToggleButtonAssist.OnContent>
                        <materialDesign:PackIcon Kind="SortAscending" />
                    </materialDesign:ToggleButtonAssist.OnContent >
                </ToggleButton>
            </StackPanel>

            <StackPanel Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="20 0 10 0" Orientation="Horizontal"
						Visibility="{Binding IsBarChartTabActive, Converter={StaticResource TrueToCollapsedConverter}}">
                <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}">Legend:</TextBlock>
                <ToggleButton Name="ContextLegendActiveToggleButton" Margin="10 0 0 0" Style="{StaticResource MaterialDesignSwitchToggleButton}"
								  ToolTip="Show context legend" IsChecked="{Binding IsContextLegendActive}"/>
            </StackPanel>
            <StackPanel Grid.Column="5" Margin="10 0 0 0" VerticalAlignment="Center" Orientation="Horizontal"
						Visibility="{Binding IsBarChartTabActive, Converter={StaticResource TrueToVisibleConverter}}">
                <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}">Relative Mode:</TextBlock>
                <ToggleButton Margin="10 0 0 0" Style="{StaticResource MaterialDesignSwitchToggleButton}"
							  ToolTip="Toggle fixed relative mode. Target value selectable by mouse click." IsChecked="{Binding UseComparisonRelativeMode}"/>
            </StackPanel>

        </Grid>
        <!-- Copmparison List -->
        <StackPanel Margin="5 10 5 0" Grid.Column="1" Grid.RowSpan="2" Orientation="Vertical">
            <TextBox IsReadOnly="True" Foreground="{DynamicResource MaterialDesignBody}"
                     materialDesign:HintAssist.Hint="Comparisons" />
            <Border Margin="0 5 0 5" BorderThickness="1" BorderBrush="#CCC" VerticalAlignment="Stretch">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="50"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Border VerticalAlignment="Center" HorizontalAlignment="Center" Grid.ZIndex="1">
                            <TextBlock Visibility="{Binding HasComparisonItems, Converter={StaticResource TrueToCollapsedConverter}}"
                                   Text="Drop items here or double click them in the record list." Foreground="{DynamicResource MaterialDesignBody}"
                                   FontSize="18" Width="250" TextAlignment="Center" TextWrapping="Wrap"/>
                        </Border>
                        <DockPanel Height="{Binding ElementName=ComparisonAreaGrid, Path=ActualHeight, Converter={StaticResource AddValueConverter}}"
                                   	      x:Name="ComparisonRecordItemControl"										  
										  dragdrop:DragDrop.IsDropTarget="True"
										  dragdrop:DragDrop.IsDragSource="False"
										  dragdrop:DragDrop.DropHandler="{Binding}"
										  dragdrop:DragDrop.UseDefaultDragAdorner="True"
										  dragdrop:DragDrop.DefaultDragAdornerOpacity="0.5"
										  dragdrop:DragDrop.UseDefaultEffectDataTemplate="False">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                <ItemsControl ItemsSource="{Binding ComparisonRecords}" Foreground="{DynamicResource MaterialDesignBody}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type vm:ComparisonRecordInfoWrapper}">
                                            <Border x:Name="Border"
													BorderThickness="0 0 0 1"
													BorderBrush="{DynamicResource MaterialDesignDivider}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseDown" >
                                                        <i:InvokeCommandAction Command="{Binding MouseDownCommand}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <Trigger Property="Border.IsMouseOver" Value="True">
                                                                <Setter Property="attached:MouseHelper.IsMouseOver" Value="True"/>
                                                                <Setter Property="Border.Background" Value="{DynamicResource MaterialDesignSelection}" />
                                                            </Trigger>
                                                            <Trigger Property="Border.IsMouseOver" Value="False">
                                                                <Setter Property="attached:MouseHelper.IsMouseOver" Value="False"/>
                                                                <Setter Property="Border.Background" Value="Transparent" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <Grid Margin="5 5 0 5">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="18"/>
                                                        <RowDefinition Height="1*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="140"/>
                                                        <ColumnDefinition Width="80"/>
                                                        <ColumnDefinition Width="25"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Margin="3 0 0 0" Grid.Row="0"  Grid.Column="0" Grid.ColumnSpan="2" FontWeight="Bold" Text="{Binding WrappedRecordInfo.Game}" />
                                                    <TextBlock Text="{Binding WrappedRecordInfo.InfoText}" TextWrapping="Wrap"
																   Width="140" Margin="3 0 0 0" Grid.Row="1" Grid.Column="0"
																   LineStackingStrategy="BlockLineHeight"
																   FontSize="12"
																   LineHeight="14"
																   MaxHeight="52"/>
                                                    <ctrls:CXColorPicker Width="50" Height="25" Grid.Row="1" Grid.Column="1" Margin="0 0 0 0" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" SelectedColor="{Binding FrametimeGraphColor}" 
																      SelectedColorChanged="SelectedColorChanged" DisplayColorAndName="False" AvailableColorsSortingMode="HueSaturationBrightness" 
																	  Visibility="{Binding ElementName=ComparisonRecordItemControl, Path=DataContext.ColorPickerVisibility, Converter={StaticResource FalseToHiddenConverter}}">
                                                        <ctrls:CXColorPicker.ButtonStyle>
                                                            <Style TargetType="ToggleButton">
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="ToggleButton" xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.Wpf.Toolkit">
                                                                            <Grid SnapsToDevicePixels="True">
                                                                                <Grid>
                                                                                    <Border Background="{TemplateBinding Background}"
																							BorderBrush="{TemplateBinding BorderBrush}"
																							BorderThickness="1"																						
																							SnapsToDevicePixels="True">
                                                                                        <ContentPresenter Content="{TemplateBinding Content}"
																										  ContentTemplate="{TemplateBinding ContentTemplate}"
																										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
																										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                                                    </Border>
                                                                                </Grid>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ctrls:CXColorPicker.ButtonStyle>
                                                    </ctrls:CXColorPicker>
                                                    <Button Grid.Row="0" Grid.Column="2" Margin="0 -2 2 0" Padding="0" Width="12" Height="12" HorizontalAlignment="Right" VerticalAlignment="Top" BorderThickness="0" Background="Transparent" Foreground="{DynamicResource MaterialDesignBody}"
															Content="{materialDesign:PackIcon Close, Size=12}" Command="{Binding RemoveCommand}">
                                                    </Button>
                                                    <ToggleButton Grid.Row="1" Grid.Column="2" Margin="0 0 -2 6" Width="20" Height="20" HorizontalAlignment="Right" VerticalAlignment="Bottom" 
																  Style="{StaticResource MaterialDesignActionToggleButton}"
                                                                  Foreground="White"
																  Visibility="{Binding ElementName=ComparisonRecordItemControl, Path=DataContext.ColorPickerVisibility, Converter={StaticResource FalseToHiddenConverter}}"
																  IsChecked="{Binding IsHideModeSelected}">
                                                        <ToggleButton.Content>
                                                            <materialDesign:PackIcon Kind="EyeOutline" Width="15" Height="15"/>
                                                        </ToggleButton.Content>
                                                        <materialDesign:ToggleButtonAssist.OnContent>
                                                            <materialDesign:PackIcon Kind="HideOutline" Width="15" Height="15"/>
                                                        </materialDesign:ToggleButtonAssist.OnContent>
                                                    </ToggleButton>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </DockPanel>
                    </Grid>
                    <Separator Grid.Row="1" Margin="5 0 5 0" Style="{StaticResource MaterialDesignDarkSeparator}"/>
                    <Grid Grid.Row="2">
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
								Margin="0 0 0 5"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Width="35" Height="35"
								ToolTip="Remove all comparisons"
								Command="{Binding RemoveAllComparisonsCommand}"
                                Foreground="White"
                                Background="{DynamicResource MaterialDesignToolBackground}"
                                BorderBrush="Transparent">
                            <materialDesign:PackIcon Kind="PlaylistRemove" Height="25" Width="25" />
                        </Button>
                    </Grid>
                </Grid>
            </Border>
        </StackPanel>
    </Grid>
</UserControl>
