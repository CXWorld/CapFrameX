<UserControl x:Class="CapFrameX.View.ControlView"
             Name="ControlViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:prism="http://prismlibrary.com/"
			 xmlns:dragdrop="urn:gong-wpf-dragdrop"
             xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"	
			 xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
			 xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
			 Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{StaticResource MaterialDesignFont}"
             prism:ViewModelLocator.AutoWireViewModel="True"
             MouseLeave="Expander_MouseLeave">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <CollectionViewSource x:Key="RecordInfoListKey" Source="{Binding RecordInfoList}" Filter="RecordInfoListOnFilter"/>
            <mvvm:AddValueConverter x:Key="AddValueConverter" Offset="-315"/>
            <mvvm:AddValueConverter x:Key="AddValueConverterExpander" Offset="-78"/>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToVisibleConverter" FalseValue="Visible" TrueValue="Collapsed"/>
            <mvvm:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Collapsed" TrueValue="Visible"/>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" FalseValue="Collapsed" TrueValue="Visible"/>
        </ResourceDictionary>
    </UserControl.Resources>
         <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="270"></RowDefinition>
            </Grid.RowDefinitions>
            <!--Record folder management expander-->
            <Expander Name="Expander" Margin="0 10 0 0" MaxWidth="350" Background="#e6e6e6" Grid.Row="0" Panel.ZIndex="1" ExpandDirection="Right" HorizontalAlignment="Left">
                <Expander.Header>
                    <TextBlock  Text="Observed directory" RenderTransformOrigin=".5,.5">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>
                <materialDesign:DialogHost Margin="5 0 5 0"
									   IsOpen="{Binding CreateFolderDialogIsOpen}"
									   DialogContent="{Binding CreateFolderDialogContent}"
									   CloseOnClickAway="False">
                    <Grid Name="ExpanderGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" ></RowDefinition>
                            <RowDefinition Height="Auto" ></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" Margin="10 10 10 0" Width="275" IsReadOnly="True" HorizontalAlignment="Left" materialDesign:HintAssist.Hint="Root capture folder" materialDesign:HintAssist.IsFloating="True"
                             Text="{Binding DataContext.RootDirectory, ElementName=ControlViewControl, Mode=OneWay}" TextWrapping="Wrap" PreviewMouseDown="RootFolder_PreviewMouseDown"/>
                        <ScrollViewer Margin="0 20 0 0" Width="300" Grid.Row="1" Height="{Binding ElementName=ControlViewControl, Path=ActualHeight, Converter={StaticResource AddValueConverterExpander}}" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel" >
                            <TreeView Name="trvStructure" TreeViewItem.Selected="TreeViewItem_Selected" PreviewMouseRightButtonDown="TreeView_PreviewMouseRightButtonDown"
                                  Tag="{Binding ElementName=ControlViewControl, Path=DataContext}" FontSize="12" >
                                <TreeView.ContextMenu>
                                    <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Header="Open folder" Command="{Binding OpenObservedFolderCommand}"/>
                                        <MenuItem Header="Delete folder" Command="{Binding DeleteFolderCommand}"/>
                                        <MenuItem Header="Create new subfolder" Command="{Binding OpenCreateSubFolderDialogCommand}"/>
                                    </ContextMenu>
                                </TreeView.ContextMenu>
                            </TreeView>
                        </ScrollViewer>
                    </Grid>
                </materialDesign:DialogHost>
            </Expander>
            <!--Record list-->
            <Border Visibility="{Binding HasValidSource, Converter={StaticResource FalseToVisibleConverter}}" Margin="0 10 5 0" BorderBrush="#e6e6e6" BorderThickness="1" Background="#F5F5F5">
            <TextBlock Text="Observed directory missing.&#10;Open expander and select a folder." TextAlignment="Center"
                       TextWrapping="Wrap" Width="220" Margin="60 0 10 0" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource MaterialDesignHeadlineTextBlock}" />
            </Border>
            <StackPanel MouseEnter="Expander_MouseLeave" Margin="50 0 0 0" Grid.Row="0"  Orientation="Vertical" >
                <Grid  Visibility="{Binding HasValidSource, Converter={StaticResource FalseToCollapsedConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBox Grid.Row="0" Margin="5 10 5 0" Background="#e6e6e6" Name="RecordSearchBox" materialDesign:HintAssist.Hint="Search" />
                    <TextBlock Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Loading records..." FontSize="16" Panel.ZIndex="1" Visibility="{Binding DirectoryLoading, Converter={StaticResource TrueToVisibleConverter}}"/>
                    <TextBlock Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Directory doesn't contain any valid records..." TextWrapping="Wrap" Width="200" TextAlignment="Center" FontSize="16" Panel.ZIndex="1" Visibility="{Binding DirectoryIsEmpty, Converter={StaticResource TrueToVisibleConverter}}"/>
                    <DataGrid Grid.Row="1" Name="RecordDataGrid" Height="{Binding ElementName=ControlViewControl, Path=ActualHeight, Converter={StaticResource AddValueConverter}}" Background="#F5F5F5" Margin="0 10 5 0" 
					  Sorting="RecordDataGrid_Sorting" SelectedIndex="{Binding RecordDataGridSelectedIndex}"
					  Tag="{Binding ElementName=ControlViewControl, Path=DataContext}" FontSize="11"
					  ItemsSource="{Binding Source={StaticResource RecordInfoListKey}}" SelectedItem="{Binding SelectedRecordInfo}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
					  materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" IsSynchronizedWithCurrentItem="False"
					  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"
					  dragdrop:DragDrop.IsDragSource="True"
					  dragdrop:DragDrop.IsDropTarget="False"
					  dragdrop:DragDrop.UseDefaultDragAdorner="True"
					  dragdrop:DragDrop.DefaultDragAdornerOpacity="0.5"
					  dragdrop:DragDrop.UseDefaultEffectDataTemplate="False">
                    <DataGrid.Resources>
                        <Style TargetType="DataGridRow">
                            <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
                              <Setter Property="DataGrid.Height" Value="40" />
                            </Style>
                    </DataGrid.Resources>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectedRecordingsCommand}" 
                               CommandParameter="{Binding ElementName=RecordDataGrid, Path=SelectedItems}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding Path=DeleteRecordCommand}" />
                    </DataGrid.InputBindings>
                    <DataGrid.ContextMenu>
                        <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="Add to ignore list" Command="{Binding AddToIgnoreListCommand}"/>
                            <MenuItem Header="Delete recording file(s)" Command="{Binding DeleteRecordFileCommand}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="BorderThickness" Value="0, 0, 1, 0"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}" />
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="TextBlock.FontSize" Value="12" />
                                <Setter Property="TextBlock.FontWeight" Value="Medium" />
                                <Setter Property="Padding" Value="8, 5, 0, 0"/>
                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignColumnHeader}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="GoToVisible">
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortDirectionIndicator" Storyboard.TargetProperty="Width">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="12" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="GoToHidden">
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortDirectionIndicator" Storyboard.TargetProperty="Width">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="12" />
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Grid>
                                                <Border Margin="0 5 0 5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                    <Grid Background="Transparent">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <wpf:ListSortDirectionIndicator Grid.Column="0" Width="0" Height="14" 
                                                                x:Name="SortDirectionIndicator"
                                                                ListSortDirection="{TemplateBinding SortDirection}"/>
                                                        <ContentPresenter Height="20" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"/>
                                                    </Grid>
                                                </Border>
                                                <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignGridColumnHeaderGripper}"/>
                                                <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignGridColumnHeaderGripper}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                                </Trigger>
                                                <Trigger Property="SortDirection" Value="Ascending">
                                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                                </Trigger>
                                                <Trigger Property="SortDirection" Value="Descending">
                                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                                </Trigger>
                                                <Trigger SourceName="SortDirectionIndicator" Property="IsNeutral" Value="False">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource GoToVisible}" Name="GoToVisible" />
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <RemoveStoryboard BeginStoryboardName="GoToVisible" />
                                                        <BeginStoryboard Storyboard="{StaticResource GoToHidden}" />
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.Columns>
                        <DataGridTextColumn  Binding="{Binding GameName, Mode=OneWay}"
                                        Width="Auto"
                                        Header="Game"
                                        IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding CreationTimestamp, Mode=OneWay}"
                                        Width="Auto"
                                        MinWidth="95"
                                        Header="Date / Time"
                                        IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                    <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Comment, Mode=OneWay}"
										Width="100"
                                        Header="Comment"
                                        IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridCheckBoxColumn Binding="{Binding IsAggregated, Mode=OneWay}"
                                        Width="Auto"
                                        Header="Aggregated"
                                        IsReadOnly="True" MinWidth="55">
                            <DataGridCheckBoxColumn.ElementStyle>
                                <Style>
                                    <Setter Property="CheckBox.VerticalAlignment" Value="Center" />
                                    <Setter Property="CheckBox.HorizontalAlignment" Value="Center" />
                                </Style>
                            </DataGridCheckBoxColumn.ElementStyle>
                        </DataGridCheckBoxColumn>
                    </DataGrid.Columns>
                </DataGrid>
                </Grid>
                <Border Margin="0 5 5 0" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource MaterialDesignDivider}" />
            </StackPanel>
            <Grid Grid.Row="1" Grid.ColumnSpan="2" Margin="0 5 5 0" Background="#F5F5F5" MouseEnter="Expander_MouseLeave">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<!--CPU-->
				<TextBox Grid.Row="0" Grid.Column="0" wpf:HintAssist.Hint="Custom CPU description" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
						 Margin="5 6 5 0" FontSize="12" Text="{Binding CustomCpuDescription, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"
                         KeyDown="TextBox_KeyDown"/>
				<Button Grid.Row="0" Grid.Column="1" Margin="5 6 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
							VerticalAlignment="Bottom" HorizontalAlignment="Right"
							Width="20" Height="20"
							ToolTip="Update CPU info"
							Command="{Binding AddCpuInfoCommand}">
					<materialDesign:PackIcon Kind="Cached" Width="15" Height="15"/>
				</Button>
				<!--GPU-->
				<TextBox Grid.Row="1" Grid.Column="0" wpf:HintAssist.Hint="Custom GPU description" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
						 Margin="5 6 5 0" FontSize="12" Text="{Binding CustomGpuDescription, UpdateSourceTrigger=PropertyChanged}"
                         KeyDown="TextBox_KeyDown"/>
				<Button Grid.Row="1" Grid.Column="1" Margin="5 6 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
							VerticalAlignment="Bottom" HorizontalAlignment="Right"
							Width="20" Height="20"
							ToolTip="Update GPU info"
							Command="{Binding AddGpuInfoCommand}">
					<materialDesign:PackIcon Kind="Cached" Width="15" Height="15"/>
				</Button>
				<!--RAM-->	
				<TextBox Grid.Row="2" Grid.Column="0" wpf:HintAssist.Hint="Custom RAM description" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
						 Margin="5 6 5 0" FontSize="12" Text="{Binding CustomRamDescription, UpdateSourceTrigger=PropertyChanged}"
                         KeyDown="TextBox_KeyDown"/>
				<Button Grid.Row="2" Grid.Column="1" Margin="5 6 5 0" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
							VerticalAlignment="Bottom" HorizontalAlignment="Right"
							Width="20" Height="20"
							ToolTip="Update RAM info"
							Command="{Binding AddRamInfoCommand}">
					<materialDesign:PackIcon Kind="Cached" Width="15" Height="15"/>
				</Button>

				<TextBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" wpf:HintAssist.Hint="Game" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
						 Margin="5 6 5 0" FontSize="12" Text="{Binding CustomGameName, UpdateSourceTrigger=PropertyChanged}"
                         KeyDown="TextBox_KeyDown"/>
				<TextBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" wpf:HintAssist.Hint="Comment" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
						 Margin="5 6 5 0" FontSize="12" Text="{Binding CustomComment, UpdateSourceTrigger=PropertyChanged}"
                         KeyDown="TextBox_KeyDown"/>
				<StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Center"
							Grid.Column="0" Grid.ColumnSpan="2" Margin="0 16 0 5">
					<Button Style="{DynamicResource MaterialDesignFlatButton}"
							Command="{Binding AcceptEditingDialogCommand}">
						SAVE
					</Button>
					<Button Margin="8 0 0 0" Style="{DynamicResource MaterialDesignFlatButton}"
							Command="{Binding CancelEditingDialogCommand}">
						RESET
					</Button>
				</StackPanel>
			</Grid>
		</Grid>
    </UserControl>
