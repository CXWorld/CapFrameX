<UserControl x:Class="CapFrameX.View.SensorView"
             Name="SensorViewUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ctrls="clr-namespace:CapFrameX.View.Controls"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:dragdrop="urn:gong-wpf-dragdrop"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
			 xmlns:validation ="clr-namespace:CapFrameX.MVVM.Validation;assembly=CapFrameX.MVVM"
			 xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
			 xmlns:prism="http://prismlibrary.com/"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="1200"
			 prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.GridSplitter.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToVisibleConverter" TrueValue="Collapsed" FalseValue="Visible"/>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed"/>
            <mvvm:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Collapsed" TrueValue="Visible"/>
            <mvvm:InvertBoolConverter x:Key="InvertBoolConverter"/>
            <mvvm:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid HorizontalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="20*"></RowDefinition>
            <RowDefinition Height="0.5*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="460"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="460"/>
        </Grid.ColumnDefinitions>
        <Border BorderBrush="{DynamicResource MaterialDesignBody}" BorderThickness="0.3" Grid.Row="1" Grid.Column="0" >
            <DockPanel Margin="0 10 0 10">
                <Grid DockPanel.Dock="Top">
                    <TextBlock Margin="15 0 0 10" HorizontalAlignment="Left" Text="Sensor items" FontSize="14" VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"/>
                </Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="100"></RowDefinition>
                    </Grid.RowDefinitions>
                    <DataGrid Grid.Row="0" x:Name="SensorItemDataGrid" FocusVisualStyle="{x:Null}" Height="Auto" Width="440" FontSize="11"
					         SelectedIndex="{Binding SelectedSensorEntryIndex}" SelectedItem="{Binding SelectedSensorEntry}" ItemsSource="{Binding SensorEntries}"
					         CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False" IsEnabled="{Binding Path=UseSensorLogging}"
					         materialDesign:DataGridAssist.CellPadding="13 3 0 0" materialDesign:DataGridAssist.ColumnHeaderPadding="8" IsSynchronizedWithCurrentItem="False"
					         ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"
                             Style="{StaticResource MaterialDesignDataGrid}">
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="DataGrid.Height" Value="25" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="SnapsToDevicePixels" Value="true"/>
                                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                                <Setter Property="ValidationErrorTemplate">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <TextBlock Foreground="#d50000" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                                            <Border x:Name="DGR_Border"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"                                                                  
                                                SnapsToDevicePixels="True">
                                                <SelectiveScrollingGrid>
                                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                                    <SelectiveScrollingGrid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </SelectiveScrollingGrid.RowDefinitions>
                                                    <DataGridCellsPresenter Grid.Column="1"
                                                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    <DataGridDetailsPresenter Grid.Column="1"
                                                                        Grid.Row="1"
                                                                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                                        Visibility="{TemplateBinding DetailsVisibility}" />
                                                    <DataGridRowHeader Grid.Column="0"
                                                                    Grid.Row="0"
                                                                    Grid.RowSpan="2"
                                                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                </SelectiveScrollingGrid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignDataGridRowHoverBackground}" />
                                    </Trigger>
                                    <Trigger Property="IsNewItem" Value="True">
                                        <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name, Mode=TwoWay}"
                                                Header="Sensor" IsReadOnly="True" MinWidth="175"/>
                            <DataGridTextColumn Binding="{Binding SensorType, Mode=TwoWay}"
                                                Header="Type" IsReadOnly="True" MinWidth="100"/>
                            <DataGridCheckBoxColumn Binding="{Binding UseForLogging, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Use for logging">
                                <DataGridCheckBoxColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <!--<Setter Property="IsEnabled" Value="{Binding Path=UseSensorLogging, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" />-->
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                    <Grid Background="{TemplateBinding Background}">
                                                        <ContentPresenter VerticalAlignment="Center" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="DataGridCell.IsSelected" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridCheckBoxColumn.CellStyle>
                            </DataGridCheckBoxColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Grid.Row="1" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                        <StackPanel Height="75" Margin="15 5 0 0" Orientation="Horizontal" IsEnabled="{Binding AreButtonsActive}">
                            <StackPanel Margin="0 15 0 0" VerticalAlignment="Center" Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding UseSensorLogging, Mode=TwoWay}">
                                    <CheckBox.ToolTip>
                                        <ToolTip MaxWidth="250">
                                            <TextBlock Text="Logs selected sensor values during a capture"                            
										   TextWrapping="Wrap"/>
                                        </ToolTip>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <TextBlock Margin="10 0 20 0" VerticalAlignment="Center" Text="Log sensors" Foreground="{DynamicResource MaterialDesignBody}"/>
                            </StackPanel>
                            <ComboBox Margin="15 0 0 0" materialDesign:ComboBoxAssist.ClassicMode="True"
					              materialDesign:HintAssist.Hint="Sensor polling [ms]"
					              materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="200" Width="110"
					              MouseLeave="LoggingPeriodComboBox_MouseLeave" FontSize="14"
					              ItemsSource="{Binding Path=LoggingPeriodItemsSource}"
                                  IsEnabled="{Binding UseSensorLogging}"
                                  Foreground="{DynamicResource MaterialDesignBody}">
                                <ComboBox.Text>
                                    <Binding Path="LoggingPeriod"
							 Mode="TwoWay"
							 UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </ComboBox.Text>
                                <ComboBox.ToolTip>
                                    Polling period [ms] for sensor logging
                                </ComboBox.ToolTip>
                            </ComboBox>
                            <Grid Width="210">
                                <Button Width="28" Height="28" Margin="20 10 15 0" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                ToolTip="Reset to defaults" Command="{Binding ResetToDefaultCommand}" IsEnabled="{Binding Path=UseSensorLogging}"
                                materialDesign:RippleAssist.Feedback="#DD000000">
                                    <materialDesign:PackIcon Kind="Restore" Height="22" Width="22" />
                                </Button>
                                <Button Width="28" Height="28" Margin="0 10 20 0" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                    ToolTip="Save selected sensors for logging" Command="{Binding SaveConfigCommand}" IsEnabled="{Binding SaveButtonIsEnable}"
                                    materialDesign:RippleAssist.Feedback="#DD000000">
                                    <materialDesign:PackIcon Kind="ContentSaveSettings" Height="22" Width="22" />
                                </Button>
                            </Grid>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="5 0 0 0">
                            <materialDesign:PopupBox StaysOpen="True" ToolTipService.ShowDuration="25000" IsEnabled="{Binding Path=UseSensorLogging}" Foreground="{DynamicResource MaterialDesignBody}">
                                <materialDesign:PopupBox.ToolTip>
                                    <ToolTip MaxWidth="275" Placement="Top">
                                        <TextBlock Text="Sensor group control" 
										   TextWrapping="Wrap"/>
                                    </ToolTip>
                                </materialDesign:PopupBox.ToolTip>
                                <materialDesign:Card Width="220" Margin="0 0 0 -10">
                                    <StackPanel>
                                        <Grid Margin="8 8 8 8">
                                            <Grid.Resources>
                                                <Style TargetType="CheckBox"
											BasedOn="{StaticResource MaterialDesignCheckBox}">
                                                    <Setter Property="Margin" Value="8,8,10,8" />
                                                </Style>
                                                <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                                                    <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
                                                    <Setter Property="Margin" Value="8,8,8,8" />
                                                </Style>
                                            </Grid.Resources>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Margin="5" Grid.Row="0" Grid.Column="0" Text="CPU basics" VerticalAlignment="Center"/>
                                            <ToggleButton Margin="5" Grid.Row="0" Grid.Column="1" IsChecked="{Binding Path=SensorSubModelGroupControl.SensorGroupCpuBasics}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control CPU basics" />

                                            <TextBlock Margin="5" Grid.Row="1" Grid.Column="0" Text="GPU basics" VerticalAlignment="Center"/>
                                            <ToggleButton Margin="5" Grid.Row="1" Grid.Column="1" IsChecked="{Binding Path=SensorSubModelGroupControl.SensorGroupGpuBasics}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control GPU basics" />

                                            <TextBlock Margin="5" Grid.Row="2" Grid.Column="0" Text="CPU thread loads" VerticalAlignment="Center"/>
                                            <ToggleButton Margin="5" Grid.Row="2" Grid.Column="1" IsChecked="{Binding Path=SensorSubModelGroupControl.SensorGroupCpuThreadLoads}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control CPU loads" />

                                            <TextBlock Margin="5" Grid.Row="3" Grid.Column="0" Text="CPU core clocks" VerticalAlignment="Center"/>
                                            <ToggleButton Margin="5" Grid.Row="3" Grid.Column="1" IsChecked="{Binding Path=SensorSubModelGroupControl.SensorGroupCpuCoreClocks}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control CPU Clocks" />
                                            
                                            <TextBlock Margin="5" Grid.Row="4" Grid.Column="0" Text="All sensors" VerticalAlignment="Center"/>
                                            <ToggleButton Margin="5" Grid.Row="4" Grid.Column="1" IsChecked="{Binding Path=SensorSubModelGroupControl.SensorGroupAll}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control all sensors" />
                                        </Grid>
                                    </StackPanel>
                                </materialDesign:Card>
                            </materialDesign:PopupBox>
                            <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}">Group control</TextBlock>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </DockPanel>
        </Border>

        <Border BorderBrush="{DynamicResource MaterialDesignBody}" BorderThickness="0.3" Grid.Row="1" Grid.Column="2" >
            <DockPanel Margin="0 10 0 10">
                <Grid DockPanel.Dock="Top">
                    <TextBlock Margin="15 0 0 10" HorizontalAlignment="Left" Text="{Binding SensorStatisticsText}" FontSize="14" VerticalAlignment="Center"
                               Foreground="{DynamicResource MaterialDesignBody}"/>
                </Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="100"></RowDefinition>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="SensorStatisticsDataGrid" FocusVisualStyle="{x:Null}" Height="Auto" Width="440" FontSize="11"
                                ItemsSource="{Binding SensorReportItems}"
					            CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False"
					            materialDesign:DataGridAssist.CellPadding="13 3 0 0" materialDesign:DataGridAssist.ColumnHeaderPadding="8" IsSynchronizedWithCurrentItem="False"
					             ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"
                                Tag="{Binding ElementName=SensorViewUserControl, Path=DataContext}"
                              Style="{StaticResource MaterialDesignDataGrid}">
                        <DataGrid.ContextMenu>
                            <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                <MenuItem Header="Copy sensor data(min, avg, max)" Command="{Binding CopySensorInfoCommand}"/>
                                <MenuItem Header="Copy raw sensor data" Command="{Binding CopyRawSensorInfoCommand}" IsEnabled="{Binding CopyRawSensorsEnable}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="DataGrid.Height" Value="25" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="SnapsToDevicePixels" Value="true"/>
                                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                                <Setter Property="ValidationErrorTemplate">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <TextBlock Foreground="#d50000" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                                            <Border x:Name="DGR_Border"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"                                                                  
                                                SnapsToDevicePixels="True">
                                                <SelectiveScrollingGrid>
                                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                                    <SelectiveScrollingGrid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </SelectiveScrollingGrid.RowDefinitions>
                                                    <DataGridCellsPresenter Grid.Column="1"
                                                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    <DataGridDetailsPresenter Grid.Column="1"
                                                                        Grid.Row="1"
                                                                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                                        Visibility="{TemplateBinding DetailsVisibility}" />
                                                    <DataGridRowHeader Grid.Column="0"
                                                                    Grid.Row="0"
                                                                    Grid.RowSpan="2"
                                                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                </SelectiveScrollingGrid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignDataGridRowHoverBackground}" />
                                    </Trigger>
                                    <Trigger Property="IsNewItem" Value="True">
                                        <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="Margin" Value="10 0 0 0"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                                            <Grid>
                                                <Border
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    Background="{TemplateBinding Background}"
                                                                    SnapsToDevicePixels="True" />
                                                <ContentPresenter
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                    Margin="{TemplateBinding Padding}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name, Mode=OneWay}"                                                           
                                            Header="Sensor"                 
                                            MinWidth="180"
                                            IsReadOnly="True">
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding MinValue, Mode=OneWay}"
                                            Header="Min"
                                            Width="75"
                                            IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding AverageValue, Mode=OneWay}"
                                            Header="Average"
                                            Width="75"
                                            IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding MaxValue, Mode=OneWay}"
                                            Header="Max"
                                            Width="75"
                                            IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Grid.Row="1"  Width="150" Height="45"
					Command="{Binding AggregateSensorEntries}" IsEnabled="{Binding AggregateButtonIsEnable}"
                    ToolTipService.ShowDuration="25000" Foreground="White"> 
                        <TextBlock Text="{Binding AggregateButtonText}" TextWrapping="Wrap" TextAlignment="Center"/>
                        <Button.ToolTip>
                            <ToolTip MaxWidth="250">
                                <TextBlock
                             Text="Show sensor statistics for all entries currently selected in the record list." 
                             TextWrapping="Wrap"/>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <ComboBox Grid.Row="1" Margin="10 0 20 0" VerticalAlignment="Center" HorizontalAlignment="Right"
					              materialDesign:HintAssist.Hint="Evaluation"
					              materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="200" Width="105" Height="40"
                                  ToolTipService.ShowDuration="25000"
					              MouseLeave="EvaluationComboBox_MouseLeave" FontSize="14"
					              ItemsSource="{Binding Path=EvaluationMethodItemsSource}"
                                  Foreground="{DynamicResource MaterialDesignBody}">
                        <ComboBox.Text>
                            <Binding Path="EvaluationMethod"
							 Mode="TwoWay"
							 UpdateSourceTrigger="PropertyChanged">
                            </Binding>
                        </ComboBox.Text>
                        <ComboBox.ToolTip>
                            <TextBlock Text="Select the method for evaluating multiple entries.&#10;
                                           &#10;Aggregate: Generate the report based on the combined sensor data of all entries.&#10;
                                           &#10;Average: Generate the report based on the average of each individual report.
                                           &#10;(only includes sensors that are present in all entries)"
                                    TextWrapping="Wrap">

                            </TextBlock>
                        </ComboBox.ToolTip>
                    </ComboBox>
                </Grid>
            </DockPanel>
        </Border>
    </Grid>
</UserControl>
