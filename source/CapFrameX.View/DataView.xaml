<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
			 xmlns:controls="clr-namespace:CapFrameX.View.Controls"
			 xmlns:data="clr-namespace:CapFrameX.Data;assembly=CapFrameX.Data"
			 xmlns:prism="http://prismlibrary.com/"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             x:Class="CapFrameX.View.DataView"
			 x:Name="DataViewUserControl"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="{DynamicResource MaterialDesignBackground}"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/CustomRangeSliderStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <mvvm:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
            <mvvm:ZoomingModeConverter x:Key="ZoomingModeConverter"/>
            <mvvm:InvertBoolConverter x:Key="InvertBoolConverter"/>
            <mvvm:BoolToVisibilityConverter x:Key="TrueToCollapsedConverter" TrueValue="Collapsed" FalseValue="Visible"/>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed"/>
            <mvvm:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Collapsed" TrueValue="Visible"/>
            <Style x:Key="CleanSeparator" TargetType="{x:Type lvc:Separator}">
                <Setter Property="IsEnabled" Value="False"/>
            </Style>
            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignActionToggleButton}">
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="ToolTip" Value="Switch to control mode"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="False">
                        <Setter Property="ToolTip" Value="Switch to screenshot mode"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MaterialDesignNavigationRailTabItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="25" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="0 6 0 0">
        <!--Analysis main grid-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="65"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <!--Chart, range slider and statistics grid-->
            <Grid Grid.Row="0">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" FontWeight="Bold" FontSize="18" Text="{Binding CurrentGameName}" 
                       Visibility="{Binding IsChecked, Converter={StaticResource TrueToCollapsedConverter}, ElementName=ShowCustomTitleToggleButton}"
					   Foreground="{DynamicResource MaterialDesignBody}"/>
                <TextBox HorizontalAlignment="Center" VerticalAlignment="Bottom" Visibility="{Binding IsChecked, Converter={StaticResource TrueToVisibleConverter}, ElementName=ShowCustomTitleToggleButton}"
                                 Text="Type your title here..."  Height="30" MinWidth="50"                                
                                 FontWeight="Bold" FontSize="18" PreviewKeyDown="CustomTitle_PreviewKeyDown"
                                 Foreground="{DynamicResource MaterialDesignBody}"/>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="UpperRow" Height="4*" MinHeight="250"/>
                    <RowDefinition Height="15"/>
                    <RowDefinition x:Name="LowerRow" Height="2*" MinHeight="200"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" x:Name="DataColumn"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch"/>
                <!--Chart and range slider grid-->
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <materialDesign:DialogHost Margin="5 0 5 0"
									IsOpen="{Binding MessageDialogContentIsOpen}"
									DialogContent="{Binding MessageDialogContent}"
									CloseOnClickAway="True">
                        <TabControl x:Name="GraphTab" Grid.Row="0" SelectedItem="{Binding SelectedChartItem}" FocusVisualStyle="{x:Null}" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}">
                            <TabItem>
                                <TabItem.Header>
                                    <Label FontSize="12">Frametimes</Label>
                                </TabItem.Header>
                                <Grid>
                                    <Grid Margin="0 0 0 0" Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                        <ComboBox Width="85" Height="40" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10 0 0 10" materialDesign:HintAssist.Hint="Y-Axis scale"
										          materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="240" materialDesign:HintAssist.HintOpacity=".8"
										          ItemsSource="{Binding ChartYAxisSettings}" SelectedItem="{Binding SelecetedChartYAxisSetting}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </Grid>
                                    <controls:FrametimeGraphControl DataContext="{Binding FrametimeGraphDataContext}" Background="{DynamicResource MaterialDesignBackground}"/>
                                </Grid>
                            </TabItem>
                            <TabItem>
                                <TabItem.Header>
                                    <Label FontSize="12">FPS</Label>
                                </TabItem.Header>
                                <Grid>
                                    <Grid Margin="-15 0 0 1" Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                        <ComboBox Width="96" Height="40" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="25 8 0 8" materialDesign:HintAssist.Hint="Filter mode"
										      materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="240" materialDesign:HintAssist.HintOpacity=".8"
                                              SelectedItem="{Binding SelectedFilterMode}" SelectedIndex="1" ItemsSource="{Binding FilterModes}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </Grid>
                                    <controls:FpsGraphControl DataContext="{Binding FpsGraphDataContext}" Background="{DynamicResource MaterialDesignBackground}"/>
                                </Grid>
                            </TabItem>
                            <TabItem>
                                <TabItem.Header>
                                    <Label FontSize="12">L-shape</Label>
                                </TabItem.Header>
                                <Grid>
                                    <Grid Margin="-15 0 0 1" Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                        <ComboBox Width="96" Height="40" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="25 8 0 8" materialDesign:HintAssist.Hint="Metric"
										      materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="240" materialDesign:HintAssist.HintOpacity=".8"
                                              SelectedItem="{Binding SelectedLShapeMetric}" ItemsSource="{Binding LShapeMetrics}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </Grid>
                                    <lvc:CartesianChart Margin="20 10 10 40" MouseDoubleClick="ResetChart_MouseDoubleClick" Series="{Binding LShapeCollection}" Zoom="Y" 
										Tag="{Binding DataContext, ElementName=DataViewUserControl}" DataTooltip="{x:Null}">
                                        <lvc:CartesianChart.ContextMenu>
                                            <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                <MenuItem Header="Copy quantiles" Command="{Binding CopyLShapeQuantilesCommand}"/>
                                            </ContextMenu>
                                        </lvc:CartesianChart.ContextMenu>
                                        <lvc:CartesianChart.AxisX>
                                            <lvc:Axis Title="&#x0a;Percentiles (%)" x:Name="LShapeX" FontSize="14" Foreground="{DynamicResource MaterialDesignBody}">
                                                <lvc:Axis.Separator>
                                                    <lvc:Separator StrokeThickness="0" Step="1"/>
                                                </lvc:Axis.Separator>
                                            </lvc:Axis>
                                        </lvc:CartesianChart.AxisX>
                                        <lvc:CartesianChart.AxisY>
                                            <lvc:Axis Title="{Binding LShapeYaxisLabel}" x:Name="LShapeY" FontSize="14" Foreground="{DynamicResource MaterialDesignBody}">
                                                <lvc:Axis.Separator>
                                                    <lvc:Separator StrokeThickness="0.2" Stroke="{DynamicResource MaterialDesignBody}"/>
                                                </lvc:Axis.Separator>
                                            </lvc:Axis>
                                        </lvc:CartesianChart.AxisY>
                                    </lvc:CartesianChart>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </materialDesign:DialogHost>
                    <Grid Grid.Row="1" Margin="5 0 5 0" Visibility="{Binding IsChecked, Converter={StaticResource FalseToCollapsedConverter}, ElementName=RangeSliderActiveToggleButton}" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}">
                        <controls:CustomRangeSlider Margin="40 10 40 30" LowerValue="{Binding FirstSeconds}" UpperValue="{Binding LastSeconds}" Panel.ZIndex="1"
                                     Maximum="{Binding MaxRecordingTime}"
									 TickPlacement="BottomRight" TickFrequency="2.5"                                     
                                     MinRange="0.1"
                                     MinRangeWidth="0"
                                     TrackColor="OrangeRed"
									 Style="{StaticResource CustomRangeSlider}"
                                     Thumb.DragCompleted="RangeSlider_DragCompleted"/>
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Horizontal" Margin="0 0 10 0" Height="25">
                            <TextBlock Text="Range:" Margin="0 5 5 0" Foreground="{DynamicResource MaterialDesignBody}"/>
                            <TextBox Grid.Row="1" materialDesign:HintAssist.Hint="Start (s)" HorizontalAlignment="Center" Width="45" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}"
                                      ToolTip="Range Slider start point" PreviewKeyDown="FirstSecondsTextBox_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" TextAlignment="Center" Text="{Binding FirstSeconds, Mode=TwoWay, StringFormat=F2, UpdateSourceTrigger=LostFocus}"
                                     Foreground="{DynamicResource MaterialDesignBody}" materialDesign:HintAssist.HintOpacity=".8"/>
                            <TextBlock Text="-" Margin="3 5 3 0" Foreground="{DynamicResource MaterialDesignBody}"/>
                            <TextBox Grid.Row="1" materialDesign:HintAssist.Hint="End (s)" HorizontalAlignment="Center" Width="45" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}"
                                     ToolTip="Range Slider end point" PreviewKeyDown="LastSecondsTextBox_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" TextAlignment="Center" Text="{Binding LastSeconds, Mode=TwoWay, StringFormat=F2, UpdateSourceTrigger=LostFocus}"
                                     Foreground="{DynamicResource MaterialDesignBody}" materialDesign:HintAssist.HintOpacity=".8"/>
                            <TextBlock Grid.Row="1"  Text="{Binding RemainingRecordingTime}" FontSize="14" Margin="10 0 0 3" VerticalAlignment="Center" TextAlignment="Left" Foreground="{DynamicResource MaterialDesignBody}"/>
                        </StackPanel>


                        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Orientation="Horizontal" Margin="0 0 40 5" Height="20" >
                            <TextBlock Foreground="{DynamicResource MaterialDesignBody}" VerticalAlignment="Center">Cut outside</TextBlock>
                            <Button Margin="10 0 15 0" Height="20" Width="20" Command="{Binding CutRecordCommand}"  Foreground="White" Background="OrangeRed" BorderBrush="OrangeRed"
                                    Style="{StaticResource MaterialDesignFloatingActionMiniButton}"  ToolTipService.ShowDuration="25000" ToolTip="Remove data outside of range slider(red) and create a new file with the remaining data(blue)">
                                <materialDesign:PackIcon Kind="ContentCut" Height="15" Width="15" />
                            </Button>
                            <TextBlock Foreground="{DynamicResource MaterialDesignBody}" VerticalAlignment="Center">Cut inside</TextBlock>
                            <Button Margin="10 0 0 0" Height="20" Width="20" Command="{Binding CutRecordInverseCommand}"  Foreground="White" 
                                    Style="{StaticResource MaterialDesignFloatingActionMiniButton}"  ToolTipService.ShowDuration="25000" ToolTip="Remove data inside of range slider(blue) and create a new file with the remaining data(red)">
                                <materialDesign:PackIcon Kind="ContentCut" Height="15" Width="15" RenderTransformOrigin=".5,.5">
                                    <materialDesign:PackIcon.RenderTransform>
                                        <RotateTransform Angle="180"/>
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
                <!--Statistics grid-->
                <Grid Grid.Row="2" Margin="5 0 5 0" SizeChanged="Grid_SizeChanged">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="110*" MaxWidth="800"/>
                        <ColumnDefinition Width="1*" MinWidth="5"/>
                        <ColumnDefinition Width="Auto" MaxWidth="600"/>
                        <ColumnDefinition Width="Auto" MaxWidth="600"/>
                        <ColumnDefinition Width="100*" MaxWidth="600"/>
                    </Grid.ColumnDefinitions>
                    <!--FPS metrics-->
                    <Grid Grid.Column="0">
                        <lvc:CartesianChart Margin="15 10 10 5" Series="{Binding StatisticCollection}" LegendLocation="None"
									Tag="{Binding DataContext, ElementName=DataViewUserControl}" DataTooltip="{x:Null}" Foreground="{DynamicResource MaterialDesignBody}">
                            <lvc:CartesianChart.ContextMenu>
                                <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Copy statistical parameter" Command="{Binding CopyStatisticalParameterCommand}"/>
                                </ContextMenu>
                            </lvc:CartesianChart.ContextMenu>
                            <lvc:CartesianChart.AxisX>
                                <lvc:Axis Title="FPS" FontSize="14" MinValue="0" MaxValue="{Binding BarMaxValue}" 
								  LabelFormatter="{Binding ParameterFormatter}" Foreground="{DynamicResource MaterialDesignBody}">
                                    <lvc:Axis.Separator>
                                        <lvc:Separator  StrokeThickness=".2" Stroke="{DynamicResource MaterialDesignBody}" IsEnabled="True" Step="{Binding BarChartSeparators}"/>
                                    </lvc:Axis.Separator>
                                </lvc:Axis>
                            </lvc:CartesianChart.AxisX>
                            <lvc:CartesianChart.AxisY>
                                <lvc:Axis FontSize="14" Labels="{Binding ParameterLabels}"  Foreground="{DynamicResource MaterialDesignBody}">
                                    <lvc:Axis.Separator>
                                        <lvc:Separator Step="1" IsEnabled="False"/>
                                    </lvc:Axis.Separator>
                                </lvc:Axis>
                            </lvc:CartesianChart.AxisY>
                        </lvc:CartesianChart>
                    </Grid>
                    <!--FPS thresholds and stuttering analysis-->
                    <Grid Grid.Column="4" Margin="5 0 0 0" >
                        <TabControl Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" FocusVisualStyle="{x:Null}" x:Name="StatisticsTabControl" >
                            <TabItem Width="75">
                                <TabItem.Header>
                                    <Label FontSize="12">Stuttering</Label>
                                </TabItem.Header>
                                <Grid>
                                    <lvc:PieChart Margin="10 5 200 5" MaxHeight="250" Hoverable="False" Series="{Binding StutteringStatisticCollection}" 
								                  LegendLocation="Left" DataClick="Chart_OnDataClick" DataTooltip="{x:Null}" StartingRotationAngle="0">
                                        <lvc:PieChart.ChartLegend>
                                            <lvc:DefaultLegend FontSize="14" FontWeight="Medium"/>
                                        </lvc:PieChart.ChartLegend>
                                    </lvc:PieChart>
                                    <StackPanel Panel.ZIndex="1" Margin="2 5 0 0" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal">
                                        <materialDesign:PopupBox  StaysOpen="True" ToolTipService.ShowDuration="25000">
                                            <materialDesign:PopupBox.ToggleContent>
                                                <materialDesign:PackIcon Margin="10 0 10 0" Kind="Cog" Width="20" Height="20" Foreground="{DynamicResource MaterialDesignBody}"/>
                                            </materialDesign:PopupBox.ToggleContent>
                                            <materialDesign:PopupBox.ToolTip>
                                                <ToolTip MaxWidth="275" Placement="Top">
                                                    <TextBlock Text="Options for the stutter and low FPS values of the pie chart" 
										                        TextWrapping="Wrap"/>
                                                </ToolTip>
                                            </materialDesign:PopupBox.ToolTip>
                                            <Grid Margin="5" Width="110">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <TextBox Grid.Row="0" materialDesign:HintAssist.Hint="Low FPS threshold" materialDesign:HintAssist.IsFloating="True" Width="100"
                                                         HorizontalContentAlignment="Center" Text="{Binding StutteringLowFPSThreshold}" materialDesign:HintAssist.HintOpacity=".8"
                                                 PreviewKeyDown="StutteringThreshold_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" ToolTipService.ShowDuration="25000">
                                                    <TextBox.ToolTip>
                                                        <ToolTip Width="300">
                                                            <TextBlock Text="FPS threshold for the low FPS time.&#xA;Every frametime that isn't already counted as stutter and for which the converted FPS are lower than this threshold, is added to the low FPS time."
										            TextWrapping="Wrap"/>
                                                        </ToolTip>
                                                    </TextBox.ToolTip>
                                                </TextBox>
                                                <TextBox Grid.Row="1" Margin="0 20 0 0" materialDesign:HintAssist.Hint="Stuttering factor" materialDesign:HintAssist.IsFloating="True" Width="100"
                                                 HorizontalContentAlignment="Center" Text="{Binding StutteringFactor}" materialDesign:HintAssist.HintOpacity=".8" 
                                                 PreviewKeyDown="StutteringFactor_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" ToolTipService.ShowDuration="25000">
                                                    <TextBox.ToolTip>
                                                        <ToolTip Width="300">
                                                            <TextBlock Text="Factor for the stuttering time.&#xA;Every frametime that is higher than the average frametime x factor is added to the stuttering time."
										            TextWrapping="Wrap"/>
                                                        </ToolTip>
                                                    </TextBox.ToolTip>
                                                </TextBox>
                                                <StackPanel Grid.Row="2" Margin="0 10 0 0" HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Vertical">
                                                    <TextBlock Foreground="{DynamicResource MaterialDesignBody}"><Run Text="Show in charts"/></TextBlock>
                                                    <ToggleButton VerticalAlignment="Center" Margin="0 8 0 0" Style="{StaticResource MaterialDesignSwitchToggleButton}" IsChecked="{Binding ShowStutteringThresholds}"
								                                    ToolTip="Show threshold lines for stuttering and low FPS in the frametime and FPS charts"/>
                                                </StackPanel>
                                            </Grid>
                                        </materialDesign:PopupBox>
                                        <TextBlock VerticalAlignment="Center" Text="Options" FontSize="14"/>
                                    </StackPanel>
                                    <Label Margin="10 0 0 20" FontSize="16" VerticalAlignment="Bottom" Content="{Binding AvgPcLatency}" Visibility="{Binding IsPcLatencyAvailable, Converter={StaticResource TrueToVisibleConverter}}"/>
                                </Grid>
                            </TabItem>
                            <TabItem Width="75">
                                <TabItem.Header>
                                    <Label FontSize="12">Variances</Label>
                                </TabItem.Header>
                                <Grid>
                                    <TextBlock Margin="10 3 0 0" Text="Time differences between two&#xA;consecutive frametime values"></TextBlock>
                                    <lvc:PieChart Margin="10 5 115 5" MaxHeight="250" Hoverable="False" Series="{Binding VarianceStatisticCollection}" 
								        LegendLocation="Left" DataClick="Chart_OnDataClick" DataTooltip="{x:Null}" StartingRotationAngle="0">
                                        <lvc:PieChart.ChartLegend>
                                            <lvc:DefaultLegend FontSize="14" FontWeight="Medium" Margin="0 10 0 0"/>
                                        </lvc:PieChart.ChartLegend>
                                    </lvc:PieChart>
                                </Grid>
                            </TabItem>
                            <TabItem Width="105" x:Name="ThresholdTab">
                                <TabItem.Header>
                                    <Label FontSize="12">FPS thresholds</Label>
                                </TabItem.Header>
                                <Grid Margin="0 5 0 0">
                                    <RadioButton Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                 ToolTip="Show time above or below thresholds"
                                                 Style="{StaticResource MaterialDesignTabRadioButton}"
                                                 Margin="0 -5 0 0"
                                                 Width="80"
                                                 MinWidth="80"
                                                 Height="25"
                                                 IsChecked="{Binding ShowThresholdTimes}"
                                                 Content="Times"
                                                 Command="{Binding ThresholdTimesCommand}"/>
                                    <RadioButton Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                 ToolTip="Show number of frames above or below thresholds"
                                                 Style="{StaticResource MaterialDesignTabRadioButton}"
                                                 Margin="80 -5 0 0"
                                                 Width="80"
                                                 MinWidth="80"
                                                 Height="25"
                                                 IsChecked="{Binding ShowThresholdTimes, Converter={StaticResource InvertBoolConverter}}"
                                                 Content="Counts"
                                                 Command="{Binding ThresholdCountsCommand}"/>
                                    <Grid Margin="0 0 40 0" Panel.ZIndex="1" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <ToggleButton Width="25" Height="25" Style="{StaticResource MaterialDesignActionToggleButton}" Foreground="White" 
												  ToolTip="Toggle between absolute and relative values" IsChecked="{Binding ThresholdShowAbsoluteValues}">
                                            <materialDesign:ToggleButtonAssist.OnContent>#</materialDesign:ToggleButtonAssist.OnContent> %
                                        </ToggleButton>
                                    </Grid>
                                    <Grid Margin="0 0 5 0" Panel.ZIndex="1" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <ToggleButton Width="25" Height="25" Style="{StaticResource MaterialDesignActionToggleButton}" Foreground="White" 
												  ToolTip="Change fps thresholds direction" IsChecked="{Binding ThresholdToggleButtonIsChecked}">
                                            <materialDesign:ToggleButtonAssist.OnContent>
                                                <materialDesign:PackIcon Width="25" Margin="1 0 0 0"
												Kind="GreaterThan" />
                                            </materialDesign:ToggleButtonAssist.OnContent>
                                            <materialDesign:PackIcon Width="25" Margin="-1 0 0 0"
												Kind="LessThan" />
                                        </ToggleButton>
                                    </Grid>
                                    <lvc:CartesianChart Margin="5 10 5 5" Series="{Binding FPSThresholdCollection}" LegendLocation="None"
								                        Tag="{Binding DataContext, ElementName=DataViewUserControl}" DataTooltip="{x:Null}">
                                        <lvc:CartesianChart.ContextMenu>
                                            <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                <MenuItem Header="Copy threshold data" Command="{Binding CopyFPSThresholdDataCommand}"/>
                                            </ContextMenu>
                                        </lvc:CartesianChart.ContextMenu>
                                        <lvc:CartesianChart.AxisX>
                                            <lvc:Axis ShowLabels="True" BarUnit="1" Foreground="{DynamicResource MaterialDesignBody}"
                                                  Labels="{Binding FPSThresholdLabels}" LabelFormatter="{Binding XAxisFormatter}">
                                                <lvc:Axis.Separator>
                                                    <lvc:Separator Step="1" IsEnabled="False"/>
                                                </lvc:Axis.Separator>
                                            </lvc:Axis>
                                        </lvc:CartesianChart.AxisX>
                                        <lvc:CartesianChart.AxisY>
                                            <lvc:Axis Title="{Binding YAxisLabel}" MinValue="0" MaxValue="1.2" Foreground="{DynamicResource MaterialDesignBody}" LabelFormatter="{Binding YAxisFormatter}">
                                                <lvc:Axis.Separator>
                                                    <lvc:Separator Step="0.25" StrokeThickness="0.5" Stroke="Gray"/>
                                                </lvc:Axis.Separator>
                                            </lvc:Axis>
                                        </lvc:CartesianChart.AxisY>
                                    </lvc:CartesianChart>
                                </Grid>
                            </TabItem>
                            <TabItem Width="75" x:Name="SensorDataTab" IsEnabled="{Binding AdditionalGraphsEnabled}">
                                <TabItem.Header>
                                    <Label FontSize="12">Sensor data</Label>
                                </TabItem.Header>
                                <DataGrid FontSize="13" ItemsSource="{Binding SensorReportItems}" ColumnHeaderHeight="25" SelectionUnit="FullRow"
										CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False"
										materialDesign:DataGridAssist.CellPadding="13 3 0 0" materialDesign:DataGridAssist.ColumnHeaderPadding="8 0 0 0" IsSynchronizedWithCurrentItem="False"
										ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" Tag="{Binding DataContext, ElementName=DataViewUserControl}">
                                    <DataGrid.Resources>
                                        <Style TargetType="{x:Type DataGridRow}">
                                            <Setter Property="Height" Value="25" />
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
                                        </Style>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="Padding" Value="5 5 5 0" />
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                        <Grid>
                                                            <Border
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    Background="{TemplateBinding Background}"
                                                                    SnapsToDevicePixels="True" />
                                                            <ContentPresenter
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                    Margin="{TemplateBinding Padding}" />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.Resources>
                                    <DataGrid.Style>
                                        <StaticResource ResourceKey="MaterialDesignDataGrid"/>
                                    </DataGrid.Style>
                                    <DataGrid.ContextMenu>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="Copy sensor data(min, avg, max)" Command="{Binding Path=CopySensorInfoCommand}" CommandParameter="{Binding Path=SelectedIndex}"/>
                                            <MenuItem Header="Copy raw sensor data" Command="{Binding Path=CopyRawSensorInfoCommand}" CommandParameter="{Binding Path=SelectedIndex}"/>
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding Name, Mode=OneWay}"                                                           
                                            Header="Sensor"       
                                            MinWidth="175"
                                            IsReadOnly="True"/>
                                        <DataGridTextColumn Binding="{Binding MinValue, Mode=OneWay}"
                                            Header="Min"
                                            Width="72"
                                            IsReadOnly="True"/>
                                        <DataGridTextColumn Binding="{Binding AverageValue, Mode=OneWay}"
                                            Header="Avg"
                                            Width="72"
                                            IsReadOnly="True"/>
                                        <DataGridTextColumn Binding="{Binding MaxValue, Mode=OneWay}"
                                            Header="Max"
                                            Width="72"
                                            IsReadOnly="True"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </TabItem>
                        </TabControl>
                    </Grid>

                    <Grid Grid.Column="2" x:Name="SecondSensorTab" Margin="5 0 0 0" Width="450" Tag="{Binding DataContext, ElementName=DataViewUserControl}">
                        <TabControl Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" FocusVisualStyle="{x:Null}" >
                            <TabItem Width="75" IsEnabled="{Binding AdditionalGraphsEnabled}">
                                <TabItem.Header>
                                    <Label FontSize="12">Sensor data</Label>
                                </TabItem.Header>
                                <DataGrid FontSize="13" ItemsSource="{Binding SensorReportItems}" ColumnHeaderHeight="25" SelectionUnit="FullRow"
										CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False"
										materialDesign:DataGridAssist.CellPadding="13 3 0 0" materialDesign:DataGridAssist.ColumnHeaderPadding="8 0 0 0" IsSynchronizedWithCurrentItem="False"
										ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True"
                                        Tag="{Binding DataContext, ElementName=DataViewUserControl}">
                                    <DataGrid.Resources>
                                        <Style TargetType="{x:Type DataGridRow}">
                                            <Setter Property="Height" Value="25" />
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
                                        </Style>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="Padding" Value="5 5 5 0" />
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                        <Grid>
                                                            <Border
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    Background="{TemplateBinding Background}"
                                                                    SnapsToDevicePixels="True" />
                                                            <ContentPresenter
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                    Margin="{TemplateBinding Padding}" />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.Resources>
                                    <DataGrid.Style>
                                        <StaticResource ResourceKey="MaterialDesignDataGrid"/>
                                    </DataGrid.Style>
                                    <DataGrid.ContextMenu>
                                        <ContextMenu DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget}">
                                            <MenuItem Header="Copy sensor data(min, avg, max)" Command="{Binding Path=CopySensorInfoCommand}"/>
                                            <MenuItem Header="Copy raw sensor data" Command="{Binding Path=CopyRawSensorInfoCommand}"/>
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding Name, Mode=OneWay}"                                                           
                                            Header="Sensor"       
                                            MinWidth="175"
                                            IsReadOnly="True"/>
                                        <DataGridTextColumn Binding="{Binding MinValue, Mode=OneWay}"
                                            Header="Min"
                                            Width="72"
                                            IsReadOnly="True"/>
                                        <DataGridTextColumn Binding="{Binding AverageValue, Mode=OneWay}"
                                            Header="Average"
                                            Width="72"
                                            IsReadOnly="True"/>
                                        <DataGridTextColumn Binding="{Binding MaxValue, Mode=OneWay}"
                                            Header="Max"
                                            Width="72"
                                            IsReadOnly="True"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </TabItem>
                        </TabControl>
                    </Grid>

                    <Grid Grid.Column="3" x:Name="SecondThresholdTab" Margin="5 0 0 0" Width="500" >
                        <TabControl Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" FocusVisualStyle="{x:Null}" >
                            <TabItem Width="105">
                                <TabItem.Header>
                                    <Label FontSize="12">FPS thresholds</Label>
                                </TabItem.Header>
                                <Grid Margin="0 5 0 0">
                                    <RadioButton Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                 ToolTip="Show time above or below thresholds"
                                                 Style="{StaticResource MaterialDesignTabRadioButton}"
                                                 Margin="0 -5 0 0"
                                                 Width="80"
                                                 MinWidth="80"
                                                 Height="25"
                                                 IsChecked="{Binding ShowThresholdTimes}"
                                                 Content="Times"
                                                 Command="{Binding ThresholdTimesCommand}"/>
                                    <RadioButton Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                 ToolTip="Show number of frames above or below thresholds"
                                                 Style="{StaticResource MaterialDesignTabRadioButton}"
                                                 Margin="80 -5 0 0"
                                                 Width="80"
                                                 MinWidth="80"
                                                 Height="25"
                                                 IsChecked="{Binding ShowThresholdTimes, Converter={StaticResource InvertBoolConverter}}"
                                                 Content="Counts"
                                                 Command="{Binding ThresholdCountsCommand}"/>
                                    <Grid Margin="0 0 40 0" Panel.ZIndex="1" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <ToggleButton Width="25" Height="25" Style="{StaticResource MaterialDesignActionToggleButton}" Foreground="White" 
												  ToolTip="Toggle between absolute and relative values" IsChecked="{Binding ThresholdShowAbsoluteValues}">
                                            <materialDesign:ToggleButtonAssist.OnContent>#</materialDesign:ToggleButtonAssist.OnContent> %
                                        </ToggleButton>
                                    </Grid>
                                    <Grid Margin="0 0 5 0" Panel.ZIndex="1" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <ToggleButton Width="25" Height="25" Style="{StaticResource MaterialDesignActionToggleButton}" Foreground="White" 
												  ToolTip="Change fps thresholds direction" IsChecked="{Binding ThresholdToggleButtonIsChecked}">
                                            <materialDesign:ToggleButtonAssist.OnContent>
                                                <materialDesign:PackIcon Width="25" Margin="1 0 0 0"
												Kind="GreaterThan" />
                                            </materialDesign:ToggleButtonAssist.OnContent>
                                            <materialDesign:PackIcon Width="25" Margin="-1 0 0 0"
												Kind="LessThan" />
                                        </ToggleButton>
                                    </Grid>
                                    <lvc:CartesianChart Margin="5 10 5 5" Series="{Binding FPSThresholdCollectionCopy}" LegendLocation="None"
								                        Tag="{Binding DataContext, ElementName=DataViewUserControl}" DataTooltip="{x:Null}">
                                        <lvc:CartesianChart.ContextMenu>
                                            <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                <MenuItem Header="Copy threshold data" Command="{Binding CopyFPSThresholdDataCommand}"/>
                                            </ContextMenu>
                                        </lvc:CartesianChart.ContextMenu>
                                        <lvc:CartesianChart.AxisX>
                                            <lvc:Axis ShowLabels="True" BarUnit="1" Foreground="{DynamicResource MaterialDesignBody}"
                                                  Labels="{Binding FPSThresholdLabels}" LabelFormatter="{Binding XAxisFormatter}">
                                                <lvc:Axis.Separator>
                                                    <lvc:Separator Step="1" IsEnabled="False"/>
                                                </lvc:Axis.Separator>
                                            </lvc:Axis>
                                        </lvc:CartesianChart.AxisX>
                                        <lvc:CartesianChart.AxisY>
                                            <lvc:Axis Title="{Binding YAxisLabel}" MinValue="0" MaxValue="1.2" Foreground="{DynamicResource MaterialDesignBody}" LabelFormatter="{Binding YAxisFormatter}">
                                                <lvc:Axis.Separator>
                                                    <lvc:Separator Step="0.25" StrokeThickness="0.5" Stroke="Gray"/>
                                                </lvc:Axis.Separator>
                                            </lvc:Axis>
                                        </lvc:CartesianChart.AxisY>
                                    </lvc:CartesianChart>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </Grid>

                </Grid>
            </Grid>

            <!--Toolbar grid-->
            <Grid Grid.Row="2" Margin="5 5 5 5" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Margin="15 8 0 8" Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"><Run Text="Statistic parameter settings:"/></TextBlock>
                    <materialDesign:PopupBox StaysOpen="True" ToolTipService.ShowDuration="25000"
                                             Foreground="{DynamicResource MaterialDesignBody}">
                        <materialDesign:PopupBox.ToolTip>
                            <ToolTip MaxWidth="275" Placement="Top">
                                <TextBlock Text="Maximum:                                                &#xA;The single highest value                                                &#xA;                                                &#xA;Average:                                                &#xA;The average of all values                                                &#xA;                                                &#xA;Median:                                                &#xA;The middle of all values sorted from low to high                                                &#xA;                                                &#xA;Minimum:                                                &#xA;The single lowest value                                                &#xA;                                                &#xA;X% percentile:                                                &#xA;X% of all values are lower than this                                                &#xA;                                                &#xA;X% low integral:                                                &#xA;For X% of total benchmark time, values are lower than this                                                &#xA;                                                &#xA;Adaptive STDEV:                                                &#xA;The standard deviation of values compared to the moving average                                                          " 
										   TextWrapping="Wrap"/>
                            </ToolTip>
                        </materialDesign:PopupBox.ToolTip>
                        <materialDesign:Card Width="Auto" Margin="0 0 0 -10">
                            <Grid Margin="8 8 8 8">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type CheckBox}"
											BasedOn="{StaticResource MaterialDesignCheckBox}">
                                        <Setter Property="Margin" Value="8,8,10,8" />
                                    </Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                                        <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
                                        <Setter Property="Margin" Value="8,8,8,8" />
                                    </Style>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="5" Grid.Row="0" Grid.Column="0" Text="Maximum" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="0" Grid.Column="1" IsChecked="{Binding UseMaxStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="1" Grid.Column="0" Text="99% percentile" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="1" Grid.Column="1" IsChecked="{Binding UseP99QuantileStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="2" Grid.Column="0" Text="95% percentile" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="2" Grid.Column="1" IsChecked="{Binding UseP95QuantileStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}" />
                                <TextBlock Margin="5" Grid.Row="3" Grid.Column="0" Text="Average" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="3" Grid.Column="1" IsChecked="{Binding UseAverageStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="4" Grid.Column="0" Text="Median" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="4" Grid.Column="1" IsChecked="{Binding UseMedianStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="5" Grid.Column="0" Text="5% percentile" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="5" Grid.Column="1" IsChecked="{Binding UseP5QuantileStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="6" Grid.Column="0" Text="1% percentile" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="6" Grid.Column="1" IsChecked="{Binding UseP1QuantileStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="7" Grid.Column="0" Text="0.2% percentile" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="7" Grid.Column="1" IsChecked="{Binding UseP0Dot2QuantileStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="8" Grid.Column="0" Text="0.1% percentile" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="8" Grid.Column="1" IsChecked="{Binding UseP0Dot1QuantileStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="0" Grid.Column="3" Text="1% low average" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="0" Grid.Column="4" IsChecked="{Binding UseP1LowAverageStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="1" Grid.Column="3" Text="0.1% low average" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="1" Grid.Column="4" IsChecked="{Binding UseP0Dot1LowAverageStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="2" Grid.Column="3" Text="1% low integral" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="2" Grid.Column="4" IsChecked="{Binding UseP1LowIntegralStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="3" Grid.Column="3" Text="0.1% low integral" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="3" Grid.Column="4" IsChecked="{Binding UseP0Dot1LowIntegralStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="4" Grid.Column="3" Text="Minimum" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="4" Grid.Column="4" IsChecked="{Binding UseMinStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="5" Grid.Column="3" Text="Adaptive STDEV" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="5" Grid.Column="4" IsChecked="{Binding UseAdaptiveSTDStatisticParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="6" Grid.Column="3" Text="CPU FPS/10W" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="6" Grid.Column="4" IsChecked="{Binding UseCpuFpsPerWattParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                <TextBlock Margin="5" Grid.Row="7" Grid.Column="3" Text="GPU FPS/10W" VerticalAlignment="Center"/>
                                <ToggleButton Margin="5" Grid.Row="7" Grid.Column="4" IsChecked="{Binding UseGpuFpsPerWattParameter}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                            </Grid>
                        </materialDesign:Card>
                    </materialDesign:PopupBox>
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="30 8 0 8" Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"><Run Text="Additional graphs:"/></TextBlock>
                    <materialDesign:PopupBox StaysOpen="True" ToolTipService.ShowDuration="25000" IsEnabled= "{Binding AdditionalGraphsEnabled}"
                                             Foreground="{DynamicResource MaterialDesignBody}">
                        <materialDesign:PopupBox.ToolTip>
                            <ToolTip MaxWidth="275" Placement="Top">
                                <TextBlock Text="Show additional graphs for CPU and GPU load" 
										   TextWrapping="Wrap"/>
                            </ToolTip>
                        </materialDesign:PopupBox.ToolTip>
                        <materialDesign:Card Width="220" Margin="0 0 0 -10">
                            <StackPanel>
                                <Grid Margin="8 8 8 8">
                                    <Grid.Resources>
                                        <Style TargetType="{x:Type CheckBox}"
											BasedOn="{StaticResource MaterialDesignCheckBox}">
                                            <Setter Property="Margin" Value="8,8,10,8" />
                                        </Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                                            <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
                                            <Setter Property="Margin" Value="8,8,8,8" />
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBlock Margin="5" Grid.Row="0" Grid.Column="0" Text="Total CPU load" VerticalAlignment="Center"
                                               Visibility="{Binding IsCpuLoadAvailable, Converter={StaticResource FalseToCollapsedConverter}}"/>
                                    <ToggleButton Margin="5" Grid.Row="0" Grid.Column="1" IsChecked="{Binding ShowCpuLoad}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Show CPU usage graph" 
                                                  Visibility="{Binding IsCpuLoadAvailable, Converter={StaticResource FalseToCollapsedConverter}}"/>
                                    
                                    <TextBlock Margin="5" Grid.Row="1" Grid.Column="0" Text="Max. CPU thread load" VerticalAlignment="Center"
                                               Visibility="{Binding IsCpuMaxLoadAvailable, Converter={StaticResource FalseToCollapsedConverter}}"/>
                                    <ToggleButton Margin="5" Grid.Row="1" Grid.Column="1" IsChecked="{Binding ShowCpuMaxThreadLoad}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Show max CPU thread usage graph" 
                                                  Visibility="{Binding IsCpuMaxLoadAvailable, Converter={StaticResource FalseToCollapsedConverter}}"/>
                                    
                                    <TextBlock Margin="5" Grid.Row="2" Grid.Column="0" Text="GPU load" VerticalAlignment="Center"
                                               Visibility="{Binding IsGpuLoadAvailable, Converter={StaticResource FalseToCollapsedConverter}}"/>
                                    <ToggleButton Margin="5" Grid.Row="2" Grid.Column="1" IsChecked="{Binding ShowGpuLoad}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Show GPU usage graph" 
                                                  Visibility="{Binding IsGpuLoadAvailable, Converter={StaticResource FalseToCollapsedConverter}}"/>
                                    
                                    <TextBlock Visibility="{Binding IsGpuPowerLimitAvailable, Converter={StaticResource FalseToCollapsedConverter}}" Margin="5" Grid.Row="3" Grid.Column="0" Text="GPU power limit" VerticalAlignment="Center"/>
                                    <ToggleButton Visibility="{Binding IsGpuPowerLimitAvailable, Converter={StaticResource FalseToCollapsedConverter}}" Margin="5" Grid.Row="3" Grid.Column="1" IsChecked="{Binding ShowGpuPowerLimit}" 
                                                  Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Show GPU power limit" />

                                    <TextBlock Margin="5" Grid.Row="4" Grid.Column="0" Text="PC Latency" VerticalAlignment="Center"
                                               Visibility="{Binding IsPcLatencyAvailable, Converter={StaticResource FalseToCollapsedConverter}}"/>
                                    <ToggleButton Margin="5" Grid.Row="4" Grid.Column="1" IsChecked="{Binding ShowPcLatency}" Visibility="{Binding IsPcLatencyAvailable, Converter={StaticResource FalseToCollapsedConverter}}"
                                                  Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Show PC latency graph" />
                                </Grid>
                            </StackPanel>
                        </materialDesign:Card>
                    </materialDesign:PopupBox>
                </StackPanel>
                <StackPanel Grid.Column="3" HorizontalAlignment="Right" Orientation="Horizontal">
                    <StackPanel Margin="10 0 0 0" VerticalAlignment="Center"  Orientation="Horizontal">
                        <TextBlock Foreground="{DynamicResource MaterialDesignBody}"><Run Text="Show aggregation:"/></TextBlock>
                        <ToggleButton VerticalAlignment="Center" Margin="10 0 0 0" Style="{StaticResource MaterialDesignSwitchToggleButton}" IsChecked="{Binding ShowAggregationSeparators}"
								  ToolTip="Show separator lines for the different runs within the session"/>
                    </StackPanel>
                    <StackPanel Margin="10 0 0 0" VerticalAlignment="Center"  Orientation="Horizontal">
                        <TextBlock Foreground="{DynamicResource MaterialDesignBody}"><Run Text="Custom title:"/></TextBlock>
                        <ToggleButton x:Name="ShowCustomTitleToggleButton" VerticalAlignment="Center" Margin="10 0 0 0" Style="{StaticResource MaterialDesignSwitchToggleButton}"
								  ToolTip="Show custom title edit box"/>
                    </StackPanel>
                    <StackPanel  Margin="10 0 0 0" VerticalAlignment="Center" Orientation="Horizontal">
                        <TextBlock Foreground="{DynamicResource MaterialDesignBody}"><Run Text="Remove outliers:"/></TextBlock>
                        <ToggleButton Margin="10 0 0 0" VerticalAlignment="Center" IsChecked="{Binding RemoveOutliers}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                    </StackPanel>
                    <StackPanel Margin="10 0 5 0" VerticalAlignment="Center" Orientation="Horizontal">
                        <TextBlock Foreground="{DynamicResource MaterialDesignBody}"><Run Text="Range slider:"/></TextBlock>
                        <ToggleButton x:Name="RangeSliderActiveToggleButton" VerticalAlignment="Center" Margin="10 0 0 0" Style="{StaticResource MaterialDesignSwitchToggleButton}"
									  IsChecked="{Binding IsRangeSliderActive}"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
            <!--System info expander-->
            <Expander Margin="0 -6 0 0" Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" ExpandDirection="Left" materialDesign:ExpanderAssist.VerticalHeaderPadding="5"
                      Foreground="{DynamicResource MaterialDesignBody}" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}">
                <Expander.Header>
                    <TextBlock Text="System Info" RenderTransformOrigin=".5,.5" FontSize="14" HorizontalAlignment="Center">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>
                <ScrollViewer VerticalScrollBarVisibility="Hidden">
                    <ScrollViewer.Resources>
                        <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">3</sys:Double>
                    </ScrollViewer.Resources>
                    <ItemsControl ItemsSource="{Binding SystemInfos}" Grid.IsSharedSizeScope="True" 
										  Tag="{Binding DataContext, ElementName=DataViewUserControl}">
                        <ItemsControl.ContextMenu>
                            <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                <MenuItem Header="Copy system info" Command="{Binding CopySystemInfoCommand}"/>
                            </ContextMenu>
                        </ItemsControl.ContextMenu>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type data:SystemInfoEntry}">
                                <Border x:Name="Border"
										Padding="8"
										BorderThickness="0 0 0 1"
										BorderBrush="{DynamicResource MaterialDesignDivider}">
                                    <StackPanel Margin="8 0 0 0"
														Grid.Column="1">
                                        <TextBlock FontWeight="Bold"
															Text="{Binding Key}" 
															FontSize="14"
															LineHeight="18"/>
                                        <TextBlock Text="{Binding Value}" TextWrapping="Wrap"
															   Width="220"
															   LineStackingStrategy="BlockLineHeight"
															   FontSize="13"
															   LineHeight="15"
															   MaxHeight="60"/>
                                    </StackPanel>
                                </Border>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                        <Setter TargetName="Border"
													Property="Background"
													Value="{DynamicResource MaterialDesignSelection}" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Expander>
        </Grid>
    </Grid>
</UserControl>
