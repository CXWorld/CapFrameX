<UserControl x:Class="CapFrameX.View.ComparisonDataView"
			 x:Name="ComparisonDataControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:dragdrop="urn:gong-wpf-dragdrop"
			 xmlns:prism="http://prismlibrary.com/"
			 xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
			 xmlns:ocatinterface="clr-namespace:CapFrameX.OcatInterface;assembly=CapFrameX.OcatInterface"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:vm="clr-namespace:CapFrameX.ViewModel;assembly=CapFrameX.ViewModel"
			 xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
			 xmlns:oxy="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf"
			 xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             d:DesignHeight="450" d:DesignWidth="800"
			 Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{StaticResource MaterialDesignFont}"
             mc:Ignorable="d"
			 prism:ViewModelLocator.AutoWireViewModel="True">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<mvvm:ZoomingModeConverter x:Key="ZoomingModeConverter"></mvvm:ZoomingModeConverter>
			<mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" FalseValue="Collapsed" TrueValue="Visible"/>
			<mvvm:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Visible" TrueValue="Collapsed"/>
			<mvvm:AddValueConverter x:Key="AddValueConverter" Offset="-2"/>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="5*"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="3*"></RowDefinition>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="1*"></ColumnDefinition>
			<ColumnDefinition Width="320"></ColumnDefinition>
		</Grid.ColumnDefinitions>
		<StackPanel Margin="5 10 5 0" Grid.Row="0" Grid.Column="1" Orientation="Vertical">
			<TextBox IsReadOnly="True" Background="#e6e6e6" materialDesign:HintAssist.Hint="Comparisons" />
			<Border Margin="0 5 0 0" BorderThickness="1" BorderBrush="#CCC" MinHeight="300" Height="{Binding ElementName=ChartAndCuttingGrid, Path=ActualHeight, Converter={StaticResource AddValueConverter}}">
				<Grid Background="#e6e6e6">
					<Grid.RowDefinitions>
						<RowDefinition Height="40"></RowDefinition>
						<RowDefinition Height="Auto"></RowDefinition>
						<RowDefinition Height="1*"></RowDefinition>
						<RowDefinition Height="Auto"></RowDefinition>
					</Grid.RowDefinitions>
					<Grid Grid.Row="0">
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
							<materialDesign:PopupBox StaysOpen="True"
													 VerticalAlignment="Center"												 
													 Width="30" Height="30"
													 ToggleContent="{materialDesign:PackIcon BallotOutline, Size=24}"
													 Margin="10 0 0 0"
													 PlacementMode="BottomAndAlignCentres"
													 ToolTip="Set comparison context">
								<materialDesign:PopupBox.ToggleCheckedContent>
									<materialDesign:PackIcon Kind="Pencil" Width="24" Height="24" />
								</materialDesign:PopupBox.ToggleCheckedContent>
								<StackPanel>
									<Button Command="{Binding DateTimeContextCommand}" Content="{materialDesign:PackIcon TimeTable, Size=24}" ToolTip="Date and time"/>
									<Button Command="{Binding CpuContextCommand}" ToolTip="CPU">
										CPU
									</Button>
									<Button Command="{Binding GpuContextCommand}" ToolTip="GPU">
										GPU
									</Button>
									<Button Command="{Binding CustomContextCommand}" Content="{materialDesign:PackIcon CommentUser, Size=24}" ToolTip="Custom comments"/>
								</StackPanel>
							</materialDesign:PopupBox>
							<materialDesign:PopupBox StaysOpen="True"
													 VerticalAlignment="Center"												 
													 Width="30" Height="30"
													 ToggleContent="{materialDesign:PackIcon Compare, Size=24}"
													 Margin="20 0 0 0"
													 PlacementMode="BottomAndAlignCentres"
													 ToolTip="Set absolut/relative mode">
								<materialDesign:PopupBox.ToggleCheckedContent>
									<materialDesign:PackIcon Kind="Pencil" Width="24" Height="24" />
								</materialDesign:PopupBox.ToggleCheckedContent>
								<StackPanel>
									<Button FontSize="9" Command="{Binding AbsoluteModeCommand}" ToolTip="Absolute mode">
										Absolute
									</Button>
									<Button Command="{Binding RelativeModeCommand}" Content="{materialDesign:PackIcon FilePercent, Size=24}" ToolTip="Relative mode"/>
								</StackPanel>
							</materialDesign:PopupBox>
						</StackPanel>
						<Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
								Margin="0 0 10 0"
								HorizontalAlignment="Right"
								Width="30" Height="30"
								ToolTip="Remove all comparisons"
								Command="{Binding RemoveAllComparisonsCommand}">
							<materialDesign:PackIcon Kind="PlaylistRemove" Height="24" Width="24" />
						</Button>
					</Grid>
					<Separator Grid.Row="1" Margin="5 0 5 0" Style="{StaticResource MaterialDesignDarkSeparator}"/>
					<ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="2">
						<Grid>
							<Border VerticalAlignment="Center" HorizontalAlignment="Center">
								<Image Grid.Row="0" Visibility="{Binding InitialIconVisibility, Converter={StaticResource FalseToCollapsedConverter}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
									   Name="ComparisonImage"
									   dragdrop:DragDrop.IsDropTarget="True"
									   dragdrop:DragDrop.DropHandler="{Binding}"
									   dragdrop:DragDrop.UseDefaultDragAdorner="True"
									   dragdrop:DragDrop.DropTargetAdornerBrush="White"
									   dragdrop:DragDrop.DefaultDragAdornerOpacity="0.5"
									   dragdrop:DragDrop.UseDefaultEffectDataTemplate="False"
									   Source="/CapFrameX;component/Icons/CX_Icon.png"
									   Width="80" Height="80">
								</Image>
							</Border>
							<ItemsControl ItemsSource="{Binding ComparisonRecords}" Grid.IsSharedSizeScope="True" Background="#e6e6e6" 
										  Visibility="{Binding InitialIconVisibility, Converter={StaticResource TrueToVisibleConverter}}"
										  Name="ComparisonRecordItemControl"
										  dragdrop:DragDrop.IsDropTarget="True"
										  dragdrop:DragDrop.IsDragSource="True"
										  dragdrop:DragDrop.DropHandler="{Binding}"
										  dragdrop:DragDrop.UseDefaultDragAdorner="True"
										  dragdrop:DragDrop.DropTargetAdornerBrush="White"
										  dragdrop:DragDrop.DefaultDragAdornerOpacity="0.5"
										  dragdrop:DragDrop.UseDefaultEffectDataTemplate="False">
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="{x:Type vm:ComparisonRecordInfoWrapper}">
										<Grid>
											<i:Interaction.Triggers>
												<i:EventTrigger EventName="MouseEnter">
													<i:InvokeCommandAction Command="{Binding MouseEnterCommand}"/>
												</i:EventTrigger>
												<i:EventTrigger EventName="MouseLeave">
													<i:InvokeCommandAction Command="{Binding MouseLeaveCommand}"/>
												</i:EventTrigger>
											</i:Interaction.Triggers>
											<Border x:Name="Border"
													Padding="8"
													BorderThickness="0 0 0 1"
													BorderBrush="{DynamicResource MaterialDesignDivider}">
												<Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel Margin="8 0 0 0" Grid.Column="0">
														<TextBlock FontWeight="Bold" Text="{Binding WrappedRecordInfo.Game}" />
														<TextBlock Text="{Binding WrappedRecordInfo.InfoText}" TextWrapping="Wrap"
																   Width="150"
																   LineStackingStrategy="BlockLineHeight"
																   FontSize="12"
																   LineHeight="14"
																   MaxHeight="66"/>
													</StackPanel>
													<xctk:ColorPicker Width="120" Height="30" Grid.Column="1" Background="#e6e6e6" SelectedColor="{Binding FrametimeGraphColor}" 
																  SelectedColorChanged="SelectedColorChanged" DisplayColorAndName="True" AvailableColorsSortingMode="HueSaturationBrightness" />
												</Grid>
											</Border>
										</Grid>
										<DataTemplate.Triggers>
											<DataTrigger Binding="{Binding IsSelected}" Value="True">
												<Setter TargetName="Border"
														Property="Background"
														Value="{DynamicResource MaterialDesignSelection}" />
											</DataTrigger>
										</DataTemplate.Triggers>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Grid>
					</ScrollViewer>
					<ItemsControl Grid.Row="3"
                                  VerticalAlignment="Top"
								  Name="RemoveRecordItemControl"
								  dragdrop:DragDrop.IsDropTarget="True"
								  dragdrop:DragDrop.DropHandler="{Binding}"
								  dragdrop:DragDrop.UseDefaultEffectDataTemplate="False">
						<Border Background="#CCC" Height="50">
							<materialDesign:PackIcon Kind="DeleteForeverOutline" VerticalAlignment="Center" HorizontalAlignment="Center"
													 Width="32" Height="32" />
						</Border>
					</ItemsControl>
				</Grid>
			</Border>
		</StackPanel>
		<TabControl  Margin="0 10 0 0" Grid.Row="0" Grid.Column="0" Background="#F5F5F5" Visibility="{Binding InitialIconVisibility, Converter={StaticResource TrueToVisibleConverter}}" >
			<TabItem Header="Frametimes">
				<Grid Name="ChartAndCuttingGrid">
					<Grid.RowDefinitions>
						<RowDefinition Height="1*"></RowDefinition>
						<RowDefinition Height="Auto"></RowDefinition>
					</Grid.RowDefinitions>
					<Grid Grid.Row="0" Background="#F5F5F5">
						<oxy:PlotView Background="#F5F5F5" x:Name="ComparisonPlotView" Model="{Binding ComparisonModel}" MouseDoubleClick="ResetChart_MouseDoubleClick"/>
					</Grid>
					<Grid Grid.Row="1" Visibility="{Binding ElementName=CuttingModeActiveToggleButton, Path=IsChecked, Converter={StaticResource FalseToCollapsedConverter}}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="2*" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="2*" />
						</Grid.ColumnDefinitions>
						<Slider Grid.Column="0" Margin="20 0 0 10" Minimum="0"
								Maximum="{Binding CutLeftSliderMaximum}"
								TickFrequency="0.1"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Bottom"
								Value="{Binding FirstSeconds}"
								Style="{StaticResource MaterialDesignDiscreteSlider}"
								ToolTip="Cut first seconds"/>
						<TextBox Grid.Column="1" HorizontalAlignment="Center" IsReadOnly="True" Margin="20 0 20 3"
								 Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding RemainingRecordingTime}">
							<materialDesign:HintAssist.Hint>
								<StackPanel Orientation="Horizontal" Margin="-2 0 0 0">
									<materialDesign:PackIcon Kind="ChartLine" />
									<TextBlock Margin="3 0 0 0">
										remaining recording time
									</TextBlock>
								</StackPanel>
							</materialDesign:HintAssist.Hint>
						</TextBox>
						<Slider Grid.Column="2" Margin="0 0 10 10" Minimum="0"
								IsDirectionReversed="True"
								Maximum="{Binding CutRightSliderMaximum}"
								TickFrequency="0.1"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Bottom"
								Value="{Binding LastSeconds}"
								Style="{StaticResource MaterialDesignDiscreteSlider}"
								ToolTip="Cut last seconds"/>
					</Grid>
				</Grid>
			</TabItem>
			<TabItem Header="L-shape">
				<lvc:CartesianChart MouseDoubleClick="ResetChart_MouseDoubleClick" Series="{Binding ComparisonLShapeCollection}" Zoom="Y" >
					<lvc:CartesianChart.AxisX>
						<lvc:Axis Title="Quantiles (%)" Name="LShapeX" Foreground="Black">
							<lvc:Axis.Separator >
								<lvc:Separator Step="1"></lvc:Separator>
							</lvc:Axis.Separator>
						</lvc:Axis>
					</lvc:CartesianChart.AxisX>
					<lvc:CartesianChart.AxisY>
						<lvc:Axis Title="Frametime (ms)" Name="LShapeY" Foreground="Black"/>
					</lvc:CartesianChart.AxisY>
				</lvc:CartesianChart>
			</TabItem>
		</TabControl>
		<Expander Grid.Row="1" Grid.ColumnSpan="2" Name="SettingsExpander" Background="#F5F5F5" Margin="0 5 0 5" Header="Data/Chart Settings" HorizontalAlignment="Stretch"
                  Visibility="{Binding InitialIconVisibility, Converter={StaticResource TrueToVisibleConverter}}" >
			<Grid Height="60">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="1*" />
				</Grid.ColumnDefinitions>
				<StackPanel VerticalAlignment="Top" Grid.Column="0" Margin="25 10 0 10" Orientation="Horizontal">
					<TextBlock VerticalAlignment="Center">Cutting mode:</TextBlock>
					<ToggleButton Name="CuttingModeActiveToggleButton" Margin="10 0 0 0" Style="{StaticResource MaterialDesignSwitchToggleButton}"
								  ToolTip="Cutting mode" IsChecked="{Binding IsCuttingModeActive}"/>
				</StackPanel>
				<StackPanel VerticalAlignment="Top" Grid.Column="1" Margin="25 10 0 10" Orientation="Horizontal">
					<TextBlock VerticalAlignment="Center">Show context legend:</TextBlock>
					<ToggleButton Name="ContextLegendActiveToggleButton" Margin="10 0 0 0" Style="{StaticResource MaterialDesignSwitchToggleButton}"
								  ToolTip="Show context legend" IsChecked="{Binding IsContextLegendActive}"/>
				</StackPanel>
			</Grid>
		</Expander>
		<lvc:CartesianChart Margin="0 0 5 0" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Series="{Binding ComparisonColumnChartSeriesCollection}" LegendLocation="Top"
                            Visibility="{Binding InitialIconVisibility, Converter={StaticResource TrueToVisibleConverter}}" Background="#F5F5F5">
			<lvc:CartesianChart.AxisX>
				<lvc:Axis Title="Comparisons" FontSize="11" Labels="{Binding ComparisonColumnChartLabels}" Foreground="Black"></lvc:Axis>
			</lvc:CartesianChart.AxisX>
			<lvc:CartesianChart.AxisY>
				<lvc:Axis MinValue="0" FontSize="11" Title="{Binding ColumnChartYAxisTitle}" LabelFormatter="{Binding ComparisonColumnChartFormatter}" Foreground="Black"></lvc:Axis>
			</lvc:CartesianChart.AxisY>
		</lvc:CartesianChart>
	</Grid>
</UserControl>
