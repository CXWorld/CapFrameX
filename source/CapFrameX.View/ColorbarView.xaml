<UserControl x:Class="CapFrameX.View.ColorbarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:prism="http://prismlibrary.com/"
             xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
             xmlns:controls="clr-namespace:CapFrameX.View.Controls"
			 xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d"
			 x:Name="ColorbarViewName"
             d:DesignHeight="450" d:DesignWidth="800"
			 prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed"/>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToVisibleConverter" TrueValue="Hidden" FalseValue="Visible"/>
            <mvvm:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" TrueValue="Visible" FalseValue="Collapsed"/>
            <mvvm:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
            <mvvm:AddValueConverter x:Key="AddValueConverter" Offset="-320"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <StackPanel Panel.ZIndex="1" Orientation="Horizontal" Visibility="{Binding ShowNotification, Converter={StaticResource FalseToCollapsedConverter}}" Background="Orange">
            <TextBlock VerticalAlignment="Center" Margin="10" FontWeight="Bold" FontSize="18" Text="Important Message:"></TextBlock>
            <controls:MarkupTextBlock VerticalAlignment="Center" Margin="5" FontWeight="Bold" FontSize="14" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" MaxHeight="60"
                       Width="{Binding ElementName=ColorbarViewName, Path=ActualWidth, Converter={StaticResource AddValueConverter}}"
                       MarkupText="{Binding AppNotification}" Hyperlink.RequestNavigate="Hyperlink_RequestNavigate">
            </controls:MarkupTextBlock>
            <Button Margin="10" BorderThickness="0" Width="100" Height="25"
					Command="{Binding CloseNotificationCommand}" Foreground="White" Background="LimeGreen" ToolTip="Close this message and not show it again until there's a new one">
                <TextBlock Text="Close" TextWrapping="Wrap" TextAlignment="Center"/>
            </Button>
        </StackPanel>
        <materialDesign:ColorZone Mode="PrimaryMid" Foreground="White" Background="{DynamicResource MaterialDesignToolBackground}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="2">
                    <Image Width="50" Height="50" Margin="5 0 5 0" Source="/Icons/CapFrameXLogoOnly.png"/>
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
							 Margin="4"
							 IsChecked="{Binding CaptureIsChecked}"
							 Content="CAPTURE" 
                             Visibility="{Binding IsCompatibleWithRunningOS, Converter={StaticResource FalseToCollapsedConverter}}"/>
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
							 Margin="4"
							 IsChecked="{Binding SingleRecordIsChecked}"
							 Content="ANALYSIS" />
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
							 Margin="4"
							 IsChecked="{Binding OverlayIsChecked}"
							 Content="OVERLAY" />
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
							 Margin="4"
							 IsChecked="{Binding RecordComparisonIsChecked}"
							 Content="COMPARISON" />
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
							 Margin="4"
							 IsChecked="{Binding AggregationIsChecked}"
							 Content="AGGREGATION" />
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                             Margin="4"
                             IsChecked="{Binding SensorIsChecked}"
                             Content="SENSOR" />
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
							 Margin="4"
							 IsChecked="{Binding PmdIsChecked}"
							 Content="PMD" />
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
							 Margin="4"
							 IsChecked="{Binding ReportIsChecked}"
							 Content="REPORT" />
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
							 Margin="4"
							 IsChecked="{Binding SynchronizationIsChecked}"
							 Content="SYNC" />
					<RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                             Margin="4"
                             IsChecked="{Binding CloudIsChecked}"
                             Content="CLOUD" />
				</StackPanel>

                <materialDesign:PopupBox Grid.Column="1" Margin="0 0 235 0" DataContext="{Binding Path=DataContext, ElementName=ColorbarViewName}"
                                         RequestBringIntoView="PopupBox_RequestBringIntoView" StaysOpen="False" 
                                         PlacementMode="BottomAndAlignRightEdges" HorizontalAlignment="Right" x:Name="ScreenshotPopupBox">
                    <materialDesign:PopupBox.ToggleContent>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
						        VerticalAlignment="Center"
						        HorizontalAlignment="Right"
						        ToolTip="Take a screenshot"
						        materialDesign:RippleAssist.Feedback="#DD000000"
                                Background="{DynamicResource MaterialDesignToolBackground}"
                                BorderBrush="Transparent"
						        Width="32" Height="32" Click="ScreenshotPopupBox_Open">
                            <materialDesign:PackIcon Kind="PhotoLibrary" Foreground="White"/>
                        </Button>
                    </materialDesign:PopupBox.ToggleContent>
                    <UniformGrid Columns="2" Width="180" Height="50">
                        <Button Width="70" Height="40" VerticalContentAlignment="Center"
                                Style="{StaticResource MaterialDesignRaisedButton}"
                                Background="{DynamicResource MaterialDesignToolBackground}" Foreground="White"
                                BorderBrush="Transparent"
                                HorizontalContentAlignment="Center" Padding="0"
                                Content="Save" Click="SaveScreenShotButton_Click"/>
                        <Button Width="70" Height="40" VerticalContentAlignment="Center"
                                Style="{StaticResource MaterialDesignRaisedButton}"
                                Background="{DynamicResource MaterialDesignToolBackground}" Foreground="White" 
                                BorderBrush="Transparent"
                                HorizontalContentAlignment="Center" Padding="0"
                                Content="Copy" Click="CopyScreenShotButton_Click"/>
                    </UniformGrid>
                </materialDesign:PopupBox>

                <Button Grid.Column="1" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                            Margin="0 0 190 0"
						    ToolTip="Login"
                            HorizontalAlignment="Right"
						    materialDesign:RippleAssist.Feedback="#DD000000"
						    Width="32" Height="32" Click="Login_Click"
                            Background="{DynamicResource MaterialDesignToolBackground}" BorderBrush="Transparent"
							Visibility="{Binding Path=DataContext.IsLoggedIn, ElementName=ColorbarViewName, Converter={StaticResource FalseToVisibleConverter}}">
                    <materialDesign:PackIcon Kind="Login" Foreground="GreenYellow"/>
				</Button>
                
				<Button Grid.Column="1" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                            Margin="0 0 190 0"
						    ToolTip="Logout"
                            HorizontalAlignment="Right"
						    materialDesign:RippleAssist.Feedback="#DD000000"
						    Width="32" Height="32" Click="Logout_Click"
                            Background="{DynamicResource MaterialDesignToolBackground}" BorderBrush="Transparent"
							Visibility="{Binding Path=DataContext.IsLoggedIn, ElementName=ColorbarViewName, Converter={StaticResource TrueToVisibleConverter}}">
                    <materialDesign:PackIcon Kind="Logout" Foreground="DarkRed"/>
				</Button>

				<TextBlock Grid.Column="1" Margin="0 0 60 2" HorizontalAlignment="Right" VerticalAlignment="Center">           
			        <Hyperlink NavigateUri="https://capframex.com/" RequestNavigate="Hyperlink_RequestNavigate" TextDecorations="None">
				        <TextBlock FontSize="16" Text="CapFrameX.com" Foreground="White"/>
			        </Hyperlink>	
		        </TextBlock>

                <materialDesign:PopupBox Grid.Column="1" DataContext="{Binding Path=DataContext, ElementName=ColorbarViewName}"
                                         materialDesign:Closed="PopupBox_Closed" RequestBringIntoView="PopupBox_RequestBringIntoView"
                                         Margin="16,0,16,0" StaysOpen="True" PlacementMode="BottomAndAlignRightEdges" HorizontalAlignment="Right">
                    <materialDesign:PopupBox.ToggleContent>
                        <materialDesign:PackIcon Kind="Cog" Width="30" Height="30" Foreground="White"/>
                    </materialDesign:PopupBox.ToggleContent>
                    <DockPanel Width="550">
                        <StackPanel Margin="10" DockPanel.Dock="Top" Orientation="Horizontal">
                            <RadioButton Margin="18 0 0 0" Style="{StaticResource MaterialDesignTabRadioButton}"
										 IsChecked="{Binding OptionsViewSelected}"
										 Content="OPTIONS" />
                            <RadioButton Margin="18 0 0 0" Style="{StaticResource MaterialDesignTabRadioButton}"
										 IsChecked="{Binding AppViewSelected}"
										 Content="APP" />
                            <RadioButton Margin="18 0 0 0" Style="{StaticResource MaterialDesignTabRadioButton}"
										 IsChecked="{Binding RemoteViewSelected}"
										 Content="REMOTE" />
                            <RadioButton Margin="20 0 0 0" Style="{StaticResource MaterialDesignTabRadioButton}"
										 IsChecked="{Binding HelpViewSelected}"
										 Content="HELP" />
                        </StackPanel>
                        <ContentPresenter x:Name="ContentPresenterSwitchView" Content="{Binding}">
                            <ContentPresenter.Resources>
                                <DataTemplate x:Name="OptionsDataTemplate" x:Key="OptionsContent">
                                    <Grid Margin="10">
                                        <Grid.Resources>
                                            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                                <Setter Property="Margin" Value="8,8,10,8" />
                                            </Style>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                                                <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
                                                <Setter Property="Margin" Value="8" />
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ComboBox Grid.Row="0" Grid.Column="0" materialDesign:HintAssist.Hint="FPS graph filter(ms)" HorizontalAlignment="Left"
                                                  ToolTip="Sets the time window for the interval of the average FPS graphs"
												  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="145" Height="40" Margin="20 15 10 15"
												  ItemsSource="{Binding Path=DataContext.AverageTimeWindows, ElementName=ColorbarViewName}">
                                            <ComboBox.Text>
                                                <Binding Path="SelectedAverageTimeWindow"
														 Mode="TwoWay"
														 UpdateSourceTrigger="PropertyChanged">
                                                </Binding>
                                            </ComboBox.Text>
                                        </ComboBox>
                                        <ComboBox Grid.Row="0" Grid.Column="1" materialDesign:HintAssist.Hint="FPS values decimals" HorizontalAlignment="Center"
                                                  ToolTip="Sets the number of decimal points for displayed FPS values"
												  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120" Height="40" Margin="0 15 15 15"
												  ItemsSource="{Binding Path=DataContext.RoundingDigits, ElementName=ColorbarViewName}">
                                            <ComboBox.Text>
                                                <Binding Path="FpsValuesRoundingDigits"
														 Mode="TwoWay"
														 UpdateSourceTrigger="PropertyChanged">
                                                </Binding>
                                            </ComboBox.Text>
                                        </ComboBox>

                                        <StackPanel Grid.Row="0" Grid.Column="2" Margin="0 5 0 5" Orientation="Horizontal"
                                            ToolTip="Select resolution for graph export(via context menu)">
                                            <TextBlock Margin="0 0 10 0" VerticalAlignment="Center" HorizontalAlignment="Center"> Graph export res.</TextBlock>
                                            <materialDesign:PopupBox StaysOpen="True" ToolTipService.ShowDuration="25000" PlacementMode="TopAndAlignCentres">
                                                <materialDesign:Card Width="270" Margin="0 0 0 -10">
                                                    <StackPanel>
                                                        <Grid Margin="8 8 8 8">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*" />
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBox Grid.Row="0" Grid.Column="0" Width="110" Margin="5 0 10 0" Text="{Binding HorizontalGraphExportRes, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                                     HorizontalContentAlignment="Center" materialDesign:HintAssist.Hint="Horizontal resolution" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                                                     PreviewKeyDown="ResolutionTextBox_PreviewKeyDown" MouseLeave="TextBox_MouseLeave" PreviewTextInput="NumberValidationTextBox"></TextBox>
                                                            <TextBox Grid.Row="0" Grid.Column="1" Width="110" Margin="10 0 5 0" Text="{Binding VerticalGraphExportRes, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                                     HorizontalContentAlignment="Center" materialDesign:HintAssist.Hint="Vertical resolution" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                                                     PreviewKeyDown="ResolutionTextBox_PreviewKeyDown" MouseLeave="TextBox_MouseLeave" PreviewTextInput="NumberValidationTextBox"></TextBox>
                                                        </Grid>
                                                    </StackPanel>
                                                </materialDesign:Card>
                                            </materialDesign:PopupBox>
                                        </StackPanel>

                                        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Left" Margin="10 0 0 0">
                                            <CheckBox IsChecked="{Binding UseTBPSim, Mode=TwoWay}" ToolTipService.ShowDuration="25000">
                                                <CheckBox.ToolTip>
                                                    <ToolTip MaxWidth="400">
                                                        <TextBlock TextWrapping="Wrap" Text="If sensor data of a record contains &quot;TBP Sim&quot; values (RDNA GPUs only), use these for analysis like FPS/W instead of &quot;GPU Total&quot;
                                                                   &#10;For changes to take effect the analysis and comparison pages have to be reloaded and already inserted records on report page need to be added again"></TextBlock>
                                                    </ToolTip>
                                                    </CheckBox.ToolTip>
                                            </CheckBox>
                                            <TextBlock Text="Use &quot;TBP Sim&quot; values for analysis if available" VerticalAlignment="Center"></TextBlock>
                                        </StackPanel>

                                        <StackPanel Grid.Row="2" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Left"  Margin="10 5 0 5">
                                            <TextBox Width="350" IsReadOnly="True" materialDesign:HintAssist.Hint="Screenshot directory" Text="{Binding ScreenshotDirectory, Mode=OneWay}" />
                                            <Button Margin="15 0 0 0" Height="35" Width="35" Command="{Binding Path=DataContext.SelectScreenshotFolderCommand, ElementName=ColorbarViewName}" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="Select screenshot folder">
                                                <materialDesign:PackIcon Kind="Folder" Height="25" Width="25" />
                                            </Button>
                                            <Button Margin="15 0 0 0" Height="35" Width="35" Command="{Binding Path=DataContext.OpenScreenshotFolderCommand, ElementName=ColorbarViewName}" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="Open screenshot folder">
                                                <materialDesign:PackIcon Kind="Forward" Height="25" Width="25" />
                                            </Button>
                                        </StackPanel>

                                        <ComboBox Grid.Row="3" Grid.Column="0" materialDesign:HintAssist.Hint="Hardware info source"
												  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Margin="0 10 0 0" Width="145" Height="40"
												  ItemsSource="{Binding Path=DataContext.HardwareInfoSourceItems, ElementName=ColorbarViewName}" 
												  SelectedItem="{Binding Path=DataContext.SelectedHardwareInfoSource, ElementName=ColorbarViewName}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <ComboBox Grid.Row="3" Grid.Column="1" materialDesign:HintAssist.Hint="Capture file mode" ToolTipService.ShowDuration="25000"
												  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Margin="0 15 0 0" Width="120" Height="40"
												  ItemsSource="{Binding Path=DataContext.CaptureFileModeItems, ElementName=ColorbarViewName}" 
												  SelectedItem="{Binding Path=DataContext.SelectedCaptureFileMode, ElementName=ColorbarViewName}">
                                            <ComboBox.ToolTip>
                                                <ToolTip MaxWidth="400" Placement="Top">
                                                    <TextBlock Text="JSON:
                                               &#10;Records are saves as json files with all needed data
                                               &#10;
                                               &#10;JSON + CSV:
                                               &#10;For each record a csv file is created in addition to the json file. The csv file includes all PresentMon data. CX will only use the json files, the csv files are only for special analysis of PresentMon data" 
										   TextWrapping="Wrap"/>
                                                </ToolTip>
                                            </ComboBox.ToolTip>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <TextBox Grid.Row="4" Grid.ColumnSpan="2" Margin="18 15 0 0" materialDesign:HintAssist.Hint="CPU" materialDesign:HintAssist.HintOpacity="1"
												Visibility="{Binding Path=DataContext.HasCustomInfo, ElementName=ColorbarViewName, Converter={StaticResource FalseToCollapsedConverter}}" PreviewKeyDown="HardwareDescription_PreviewKeyDown">
                                            <TextBox.Text>
                                                <Binding Path="DataContext.CustomCpuDescription"
														 ElementName="ColorbarViewName"
														 Mode="TwoWay"
														 UpdateSourceTrigger="LostFocus">
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <TextBox Grid.Row="5" Grid.ColumnSpan="2" materialDesign:HintAssist.Hint="GPU" Margin="18 10 0 0"
												Visibility="{Binding Path=DataContext.HasCustomInfo, ElementName=ColorbarViewName, Converter={StaticResource FalseToCollapsedConverter}}" PreviewKeyDown="HardwareDescription_PreviewKeyDown">
                                            <TextBox.Text>
                                                <Binding Path="DataContext.CustomGpuDescription"
														 ElementName="ColorbarViewName"
														 Mode="TwoWay"
														 UpdateSourceTrigger="LostFocus">
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <TextBox Grid.Row="6" Grid.ColumnSpan="2" materialDesign:HintAssist.Hint="RAM" Margin="18 10 0 0"
												Visibility="{Binding Path=DataContext.HasCustomInfo, ElementName=ColorbarViewName, Converter={StaticResource FalseToCollapsedConverter}}" PreviewKeyDown="HardwareDescription_PreviewKeyDown">
                                            <TextBox.Text>
                                                <Binding Path="DataContext.CustomRamDescription"
														 ElementName="ColorbarViewName"
														 Mode="TwoWay"
														 UpdateSourceTrigger="LostFocus">
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate x:Key="AppContent">
                                    <Grid Margin="10">
                                        <Grid.Resources>
                                            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                                <Setter Property="Margin" Value="8,8,10,8" />
                                            </Style>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                                                <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
                                                <Setter Property="Margin" Value="8,8,8,8" />
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="15 5 0 5">
                                            <TextBlock Text="Dark mode"/>
                                            <ToggleButton Margin="68 0 0 0" Click="MenuDarkModeButton_Click" IsChecked="{Binding IsDarkModeToggleChecked}"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="15 5 0 5" ToolTip="Allow to recieve important messages from CX Team on app start">
                                            <TextBlock Text="Recieve notifications"/>
                                            <ToggleButton Margin="15 0 0 0" IsChecked="{Binding AppNotificationsActive, Mode=TwoWay}"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="20 5 0 5">
                                            <TextBlock Margin="0 0 0 0" Text="Start with Windows" TextAlignment="Left" TextWrapping="Wrap" Width="80"/>
                                            <CheckBox Margin="0 0 0 0" IsChecked="{Binding Autostart, Mode=TwoWay}">
                                            </CheckBox>
                                        </StackPanel>
                                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="20 5 0 5" >
                                            <TextBlock Margin="0 0 0 0" Text="Start minimized" TextAlignment="Left" TextWrapping="Wrap" Width="80"/>
                                            <CheckBox Margin="0 0 0 0" IsChecked="{Binding StartMinimized, Mode=TwoWay}">
                                            </CheckBox>
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate x:Key="RemoteContent">
                                    <Grid Margin="10">
                                        <Grid.Resources>
                                            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                                <Setter Property="Margin" Value="8,8,10,8" />
                                            </Style>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                                                <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
                                                <Setter Property="Margin" Value="8,8,8,8" />
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Margin="15 5 0 5" Text="{Binding OsdHttpUrl, Mode=OneWay}" Width="215" IsReadOnly="True"
                                                 Foreground="DarkGray" materialDesign:HintAssist.Hint="OSD http URL" ToolTip="http URL to access the current overlay output (Overlay needs to be active)"></TextBox>
                                        <TextBox Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Margin="15 5 0 5" Text="{Binding OsdWSUrl, Mode=OneWay}" Width="215" IsReadOnly="True"
                                                 Foreground="DarkGray" materialDesign:HintAssist.Hint="OSD websocket URL" ToolTip="Websocket URL to access the current overlay output (Overlay needs to be active)"></TextBox>
                                        <TextBox Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Margin="15 5 0 5" Text="{Binding SensorsWSUrl, Mode=OneWay}" Width="215" Height="45" IsReadOnly="True"
                                                 Foreground="DarkGray" materialDesign:HintAssist.Hint="Sensor snapshot stream websocket URL" ToolTip="Websocket URL to access the complete sensor stream"></TextBox>
                                        <TextBox Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" Margin="15 5 0 5" Text="{Binding ActiveSensorsWSUrl, Mode=OneWay}" Width="215" IsReadOnly="True"
                                                 Foreground="DarkGray" materialDesign:HintAssist.Hint="Active sensors websocket URL" ToolTip="Websocket URL to access all sensors currently selected in the &quot;Sensors&quot; tab "></TextBox>
                                        
                                        <TextBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Margin="15 5 0 5" Text="https://app.swaggerhub.com/apis/CapFrameX/cx-remote/1.0.0" TextWrapping="Wrap" Width="200" IsReadOnly="True"
                                                 Foreground="DarkGray" materialDesign:HintAssist.Hint="CX Remote Service info URL"></TextBox>

                                        <TextBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" Margin="15 5 0 5" Text="{Binding WebservicePort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="175" PreviewTextInput="IntegerValidationTextBox"
                                                 materialDesign:HintAssist.Hint="Webservice port (restart CX)"></TextBox>
                                        <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Margin="15 5 0 5" VerticalAlignment="Center" Orientation="Horizontal">
                                            <TextBlock Text="Hide OSD on RTSS"></TextBlock>
                                            <CheckBox IsChecked="{Binding HideOverlay, Mode=TwoWay}" Margin="10 -3 0 0">
                                                <CheckBox.ToolTip>
                                                    <ToolTip StaysOpen="True" MaxWidth="275">
                                                        <TextBlock Text="If checked, the overlay will not be shown on RTSS but will still be accessible through remote API." TextWrapping="Wrap"/>
                                                    </ToolTip>
                                                </CheckBox.ToolTip>
                                            </CheckBox>
                                            </StackPanel>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate x:Key="HelpContent">
                                    <xctk:RichTextBox Margin="10" Width="475" Height="300" IsHitTestVisible="False" IsReadOnly="True"  Foreground="{DynamicResource MaterialDesignBody}"
                                                      Background="{DynamicResource MaterialDesignPaper}"
													  Text="{Binding Path=DataContext.HelpText, ElementName=ColorbarViewName, Mode=OneWay}"></xctk:RichTextBox>
                                </DataTemplate>
                            </ContentPresenter.Resources>
                            <ContentPresenter.Style>
                                <Style TargetType="{x:Type ContentPresenter}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataContext.SelectedView, ElementName=ColorbarViewName}" Value="Options">
                                            <Setter Property="ContentTemplate" Value="{StaticResource OptionsContent}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DataContext.SelectedView, ElementName=ColorbarViewName}" Value="App">
                                            <Setter Property="ContentTemplate" Value="{StaticResource AppContent}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DataContext.SelectedView, ElementName=ColorbarViewName}" Value="Remote">
                                            <Setter Property="ContentTemplate" Value="{StaticResource RemoteContent}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DataContext.SelectedView, ElementName=ColorbarViewName}" Value="Help">
                                            <Setter Property="ContentTemplate" Value="{StaticResource HelpContent}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Style>
                        </ContentPresenter>
                    </DockPanel>
                </materialDesign:PopupBox>
            </Grid>
        </materialDesign:ColorZone>
    </Grid>
</UserControl>
