<UserControl x:Class="CapFrameX.View.OverlayView"
			 x:Name="OverlayViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ctrls="clr-namespace:CapFrameX.View.Controls"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:dragdrop="urn:gong-wpf-dragdrop"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
			 xmlns:validation ="clr-namespace:CapFrameX.MVVM.Validation;assembly=CapFrameX.MVVM"
			 xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
			 xmlns:prism="http://prismlibrary.com/"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="1200"
             Background="{DynamicResource MaterialDesignBackground}"
			 prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToVisibleConverter" TrueValue="Collapsed" FalseValue="Visible"/>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed"/>
            <mvvm:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Collapsed" TrueValue="Visible"/>
            <mvvm:InvertBoolConverter x:Key="InvertBoolConverter"/>
            <mvvm:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
            <mvvm:StringColorConverter x:Key="StringColorConverter"/>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MaterialDesignNavigationRailTabItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="25" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid HorizontalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="20*"></RowDefinition>
            <RowDefinition Height="0.5*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="460"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="450"/>
        </Grid.ColumnDefinitions>
        <TextBlock Margin="0" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"
				    FontSize="18" Visibility="{Binding IsRTSSInstalled, Converter={StaticResource FalseToVisibleConverter}}">             
			<Hyperlink NavigateUri="https://www.guru3d.com/files-details/rtss-rivatuner-statistics-server-download.html" 
					   RequestNavigate="Hyperlink_RequestNavigate">
				<TextBlock Text="{Binding Path=UpdateHpyerlinkText}" TextAlignment="Center"/>
			</Hyperlink>
		</TextBlock>
        <Border BorderBrush="{DynamicResource MaterialDesignBody}" BorderThickness="0.3" Grid.Row="1" Grid.Column="0" >
		   <materialDesign:DialogHost IsOpen="{Binding ResetOverlayConfigContentIsOpen}"
								        DialogContent="{Binding ResetOverlayConfigContent}"
								        CloseOnClickAway="True">
            <DockPanel Margin="0 10 0 10"
                   Visibility="{Binding  IsRTSSInstalled, Converter={StaticResource TrueToVisibleConverter}}">				   
                <!--DataGrid and Overlay hotkey-->
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="45"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="50"></RowDefinition>
                        <RowDefinition Height="60"></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Margin="10 0 0 10" HorizontalAlignment="Left" Text="Overlay items" FontSize="14" VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"/>
                    <StackPanel Grid.Row="0" Margin="0 0 0 10" Orientation="Horizontal" HorizontalAlignment="Right">
                        
                        <Button Width="28" Height="28" Margin="0 0 10 0" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                            ToolTip="Save selection to other configs" Click="CopyButton_Click" 
                            materialDesign:RippleAssist.Feedback="#DD000000">
                            <materialDesign:PackIcon Kind="ContentCopy" Height="22" Width="22"/>
                        </Button>
                        <Popup x:Name="CopyButtonPopup" Placement="Mouse" StaysOpen="False" >
                            <materialDesign:Card Background="{DynamicResource MaterialDesignTextFieldBoxBackground}">
                                <Grid Margin="8 8 8 8">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="0 5 25 5" Text="Config  1" Foreground="{DynamicResource MaterialDesignBody}"></TextBlock>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="0 5 25 5" Text="Config  2" Foreground="{DynamicResource MaterialDesignBody}"></TextBlock>
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="0 5 25 5" Text="Config  3" Foreground="{DynamicResource MaterialDesignBody}"></TextBlock>
                                    <Button Grid.Row="0" Grid.Column="1" Width="20" Height="20" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        Command="{Binding SaveConfigCommand}" CommandParameter="0"
                                        materialDesign:RippleAssist.Feedback="#DD000000">
                                        <materialDesign:PackIcon Kind="ArrowRight" Height="15" Width="15" />
                                    </Button>
                                    <Button Grid.Row="1" Grid.Column="1" Width="20" Height="20" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        Command="{Binding SaveConfigCommand}" CommandParameter="1"
                                        materialDesign:RippleAssist.Feedback="#DD000000">
                                        <materialDesign:PackIcon Kind="ArrowRight" Height="15" Width="15" />
                                    </Button>
                                    <Button Grid.Row="2" Grid.Column="1" Width="20" Height="20" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        Command="{Binding SaveConfigCommand}" CommandParameter="2"
                                        materialDesign:RippleAssist.Feedback="#DD000000">
                                        <materialDesign:PackIcon Kind="ArrowRight" Height="15" Width="15" />
                                    </Button>
                                </Grid>
                            </materialDesign:Card>
                        </Popup>
                        
                        <Button Width="28" Height="28" Margin="0 0 10 0" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                            ToolTip="Save selection to current config" Command="{Binding SaveConfigCommand}" CommandParameter="3" IsEnabled="{Binding SaveButtonIsEnable}"
                            materialDesign:RippleAssist.Feedback="#DD000000">
                            <materialDesign:PackIcon Kind="ContentSaveSettings" Height="22" Width="22" />
                        </Button>
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                                 Padding="0 0 0 0"
                                 Width="30"
                                 MinWidth="30"
                                 IsChecked="{Binding IsConfig0Checked}"
                                 Content="1"
                                 Foreground="{DynamicResource MaterialDesignBody}"
                                 Command="{Binding ConfigSwitchCommand}" CommandParameter="0"/>
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                                 Padding="0 0 0 0"
                                 Width="30"
                                 MinWidth="30"
                                 IsChecked="{Binding IsConfig1Checked}"
                                 Content="2" 
                                 Foreground="{DynamicResource MaterialDesignBody}"
                                 Command="{Binding ConfigSwitchCommand}" CommandParameter="1"/>
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                                 Padding="0 0 0 0"
                                 Width="30"
                                 MinWidth="30"
                                 IsChecked="{Binding IsConfig2Checked}"
                                 Content="3" 
                                 Foreground="{DynamicResource MaterialDesignBody}"
                                 Command="{Binding ConfigSwitchCommand}" CommandParameter="2"/>
                        <Button Width="28" Height="28" Margin="7 0 10 0" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                            ToolTip="Reset to defaults" Command="{Binding OpenResetDialogCommand}"
                            materialDesign:RippleAssist.Feedback="#DD000000">
                            <materialDesign:PackIcon Kind="Restore" Height="22" Width="22" />
                        </Button>
                    </StackPanel>
                    <DataGrid Grid.Row="1" x:Name="OverlayItemDataGrid" FocusVisualStyle="{x:Null}" Height="Auto" Width="440" FontSize="11"
					          SelectedIndex="{Binding SelectedOverlayEntryIndex}" SelectedItem="{Binding SelectedOverlayEntry}" ItemsSource="{Binding OverlayEntries}"
					          CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False" ColumnHeaderHeight="17"
					          materialDesign:DataGridAssist.CellPadding="13 5 0 0" materialDesign:DataGridAssist.ColumnHeaderPadding="14 0 0 2" IsSynchronizedWithCurrentItem="False"
					          ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"
					          dragdrop:DragDrop.IsDragSource="True"
					          dragdrop:DragDrop.IsDropTarget="True"
						      dragdrop:DragDrop.DropHandler="{Binding}"
					          dragdrop:DragDrop.UseDefaultDragAdorner="True"
					          dragdrop:DragDrop.DefaultDragAdornerOpacity="0.5"
					          dragdrop:DragDrop.UseDefaultEffectDataTemplate="False"
                              ToolTip="Drag &amp; Drop to change order"
                              ToolTipService.VerticalOffset="-6"
                              Style="{StaticResource MaterialDesignDataGrid}"
                              Background="{DynamicResource MaterialDesignBackground}">
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="DataGrid.Height" Value="25" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="SnapsToDevicePixels" Value="true"/>
                                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                                <Setter Property="ValidationErrorTemplate">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <TextBlock Foreground="#d50000" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                                            <Border x:Name="DGR_Border"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"                                                                  
                                                SnapsToDevicePixels="True">
                                                <SelectiveScrollingGrid>
                                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                                    <SelectiveScrollingGrid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </SelectiveScrollingGrid.RowDefinitions>
                                                    <DataGridCellsPresenter Grid.Column="1"
                                                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    <DataGridDetailsPresenter Grid.Column="1"
                                                                        Grid.Row="1"
                                                                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                                        Visibility="{TemplateBinding DetailsVisibility}" />
                                                    <DataGridRowHeader Grid.Column="0"
                                                                    Grid.Row="0"
                                                                    Grid.RowSpan="2"
                                                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                </SelectiveScrollingGrid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignDataGridRowHoverBackground}" />
                                    </Trigger>
                                    <Trigger Property="IsNewItem" Value="True">
                                        <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Binding="{Binding ShowOnOverlay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="OSD">
                                <DataGridCheckBoxColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="IsEnabled" 
                                        Value="{Binding Path=ShowOnOverlayIsEnabled}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                    <Grid Background="{TemplateBinding Background}">
                                                        <ContentPresenter VerticalAlignment="Center" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="DataGridCell.IsSelected" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridCheckBoxColumn.CellStyle>
                            </DataGridCheckBoxColumn>
                            <DataGridTextColumn Binding="{Binding Description, Mode=TwoWay}"
                                            Header="Description"
                                            IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding GroupName, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                            Header="Group name"
                                            IsReadOnly="False"/>
                            <DataGridCheckBoxColumn Binding="{Binding ShowGraph, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Header="Graph">
                                <DataGridCheckBoxColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Visibility" 
                                        Value="{Binding Path=ShowGraphIsEnabled, Converter={StaticResource FalseToCollapsedConverter}}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                    <Grid Background="{TemplateBinding Background}">
                                                        <ContentPresenter VerticalAlignment="Center" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="DataGridCell.IsSelected" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"  />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridCheckBoxColumn.CellStyle>
                            </DataGridCheckBoxColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Grid.Row="2" Orientation="Vertical">
                        <Border Margin="10 5 10 0" BorderThickness="0.4" BorderBrush="{DynamicResource MaterialDesignBody}">
                            <StackPanel Margin="5 5 0 5" Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}">Group control:</TextBlock>
                                <materialDesign:PopupBox StaysOpen="True" ToolTipService.ShowDuration="25000" Foreground="{DynamicResource MaterialDesignBody}">
                                    <materialDesign:PopupBox.ToolTip>
                                        <ToolTip MaxWidth="275" Placement="Top">
                                            <TextBlock Text="OSD parameter group control" 
										   TextWrapping="Wrap"/>
                                        </ToolTip>
                                    </materialDesign:PopupBox.ToolTip>
                                    <materialDesign:Card Width="220" Margin="0 0 0 -10">
                                        <StackPanel>
                                            <Grid Margin="8 8 8 8">
                                                <Grid.Resources>
                                                    <Style TargetType="CheckBox"
											BasedOn="{StaticResource MaterialDesignCheckBox}">
                                                        <Setter Property="Margin" Value="8,8,10,8" />
                                                    </Style>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                                                        <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
                                                        <Setter Property="materialDesign:HintAssist.HintOpacity" Value=".8"/>
                                                        <Setter Property="Margin" Value="8,8,8,8" />
                                                    </Style>
                                                </Grid.Resources>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="3*"/>
                                                    <ColumnDefinition Width="1*"/>
                                                    <ColumnDefinition Width="1*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Margin="5" Grid.Row="0" Grid.Column="0" Text="Capture items" VerticalAlignment="Center"/>
                                                <Button Margin="5" Grid.Row="0" Grid.Column="1" Command="{Binding Path=OverlaySubModelGroupControl.CheckCaptureItems}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"  
                                                    Width="20" Height="20" ToolTip="Check capture items" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Done" Height="15" Width="15" />
                                                </Button>
                                                <Button Margin="5" Grid.Row="0" Grid.Column="2" Command="{Binding Path=OverlaySubModelGroupControl.UncheckCaptureItems}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                                                    Width="20" Height="20" ToolTip="Uncheck capture items" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Remove"  Height="15" Width="15" />
                                                </Button>

                                                <TextBlock Margin="5" Grid.Row="1" Grid.Column="0" Text="System infos" VerticalAlignment="Center"/>
                                                <Button Margin="5" Grid.Row="1" Grid.Column="1" Command="{Binding Path=OverlaySubModelGroupControl.CheckSystemInfo}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"  
                                                    Width="20" Height="20" ToolTip="Check system info" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Done" Height="15" Width="15" />
                                                </Button>
                                                <Button Margin="5" Grid.Row="1" Grid.Column="2" Command="{Binding Path=OverlaySubModelGroupControl.UncheckSystemInfo}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                                                    Width="20" Height="20" ToolTip="Uncheck system info" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Remove"  Height="15" Width="15" />
                                                </Button>

                                                <TextBlock Margin="5" Grid.Row="2" Grid.Column="0" Text="Real-time metrics" VerticalAlignment="Center"/>
                                                <Button Margin="5" Grid.Row="2" Grid.Column="1" Command="{Binding Path=OverlaySubModelGroupControl.CheckOnlineMetrics}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"  
                                                    Width="20" Height="20" ToolTip="Check real-time metrics" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Done" Height="15" Width="15" />
                                                </Button>
                                                <Button Margin="5" Grid.Row="2" Grid.Column="2" Command="{Binding Path=OverlaySubModelGroupControl.UncheckOnlineMetrics}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                                                    Width="20" Height="20" ToolTip="Uncheck real-time metrics" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Remove"  Height="15" Width="15" />
                                                </Button>

                                                <TextBlock Margin="5" Grid.Row="3" Grid.Column="0" Text="GPU basics" VerticalAlignment="Center"/>
                                                <Button Margin="5" Grid.Row="3" Grid.Column="1" Command="{Binding Path=OverlaySubModelGroupControl.CheckGpuBasics}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"  
                                                    Width="20" Height="20" ToolTip="Check GPU basics" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Done" Height="15" Width="15" />
                                                </Button>
                                                <Button Margin="5" Grid.Row="3" Grid.Column="2" Command="{Binding Path=OverlaySubModelGroupControl.UncheckGpuBasics}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                                                    Width="20" Height="20" ToolTip="Uncheck GPU basics" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Remove"  Height="15" Width="15" />
                                                </Button>

                                                <TextBlock Margin="5" Grid.Row="4" Grid.Column="0" Text="CPU loads" VerticalAlignment="Center"/>
                                                <Button Margin="5" Grid.Row="4" Grid.Column="1" Command="{Binding Path=OverlaySubModelGroupControl.CheckCpuLoads}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"  
                                                    Width="20" Height="20" ToolTip="Check CPU loads" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Done" Height="15" Width="15" />
                                                </Button>
                                                <Button Margin="5" Grid.Row="4" Grid.Column="2" Command="{Binding Path=OverlaySubModelGroupControl.UncheckCpuLoads}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                                                    Width="20" Height="20" ToolTip="Uncheck CPU loads" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Remove"  Height="15" Width="15" />
                                                </Button>

                                                <TextBlock Margin="5" Grid.Row="5" Grid.Column="0" Text="CPU clocks" VerticalAlignment="Center"/>
                                                <Button Margin="5" Grid.Row="5" Grid.Column="1" Command="{Binding Path=OverlaySubModelGroupControl.CheckCpuClocks}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"  
                                                    Width="20" Height="20" ToolTip="Check CPU clocks" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Done" Height="15" Width="15" />
                                                </Button>
                                                <Button Margin="5" Grid.Row="5" Grid.Column="2" Command="{Binding Path=OverlaySubModelGroupControl.UncheckCpuClocks}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                                                    Width="20" Height="20" ToolTip="Uncheck CPU clocks" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Remove"  Height="15" Width="15" />
                                                </Button>

                                                <TextBlock Margin="5" Grid.Row="6" Grid.Column="0" Text="CPU Core temps" VerticalAlignment="Center"/>
                                                <Button Margin="5" Grid.Row="6" Grid.Column="1" Command="{Binding Path=OverlaySubModelGroupControl.CheckCpuTemps}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"  
                                                    Width="20" Height="20" ToolTip="Check CPU Core temps" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Done" Height="15" Width="15" />
                                                </Button>
                                                <Button Margin="5" Grid.Row="6" Grid.Column="2" Command="{Binding Path=OverlaySubModelGroupControl.UncheckCpuTemps}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                                                    Width="20" Height="20" ToolTip="Uncheck CPU Core temps" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Remove"  Height="15" Width="15" />
                                                </Button>

                                                <TextBlock Margin="5" Grid.Row="7" Grid.Column="0" Text="RAM items" VerticalAlignment="Center"/>
                                                <Button Margin="5" Grid.Row="7" Grid.Column="1" Command="{Binding Path=OverlaySubModelGroupControl.CheckRamItems}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"  
                                                    Width="20" Height="20" ToolTip="Check RAM items" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Done" Height="15" Width="15" />
                                                </Button>
                                                <Button Margin="5" Grid.Row="7" Grid.Column="2" Command="{Binding Path=OverlaySubModelGroupControl.UncheckRamItems}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                                                    Width="20" Height="20" ToolTip="Uncheck RAM items" materialDesign:RippleAssist.Feedback="#DD000000" Foreground="White">
                                                    <materialDesign:PackIcon Kind="Remove"  Height="15" Width="15" />
                                                </Button>
                                            </Grid>
                                        </StackPanel>
                                    </materialDesign:Card>
                                </materialDesign:PopupBox>
                                <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}">Min OSD</TextBlock>
                                <Button Margin="10 0 0 0" Width="20" Height="20" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                Command="{Binding SetToMinOsdCommand}" materialDesign:RippleAssist.Feedback="#DD000000">
                                    <materialDesign:PackIcon Kind="FlipToFront" Height="15" Width="15" />
                                </Button>
                                <StackPanel Margin="125 0 0 0" Orientation="Horizontal">
                                    <TextBlock Text="OSD options" VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"/>
                                    <materialDesign:PopupBox StaysOpen="True" Foreground="{DynamicResource MaterialDesignBody}">
                                        <materialDesign:Card  Margin="0 0 0 -10">
                                            <StackPanel>
                                                <Grid Margin="8 8 8 8">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="30" />
                                                        <RowDefinition Height="30" />
                                                        <RowDefinition Height="30" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="110"/>
                                                        <ColumnDefinition Width="85"/>
                                                    </Grid.ColumnDefinitions>

                                                    <TextBlock Margin="5" Grid.Row="0" Grid.Column="0" Text="CX overlay toggle" VerticalAlignment="Center"/>
                                                    <ToggleButton Margin="0 0 0 0" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" IsChecked="{Binding IsOverlayActive, Mode=TwoWay}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTipService.ShowDuration="25000">
                                                        <ToggleButton.ToolTip>
                                                            <ToolTip>
                                                                <TextBlock Width="275" Text="Activates or deactivates the CX overlay, same funtionality as the overlay hotkey." TextWrapping="Wrap">
                                                                </TextBlock>
                                                            </ToolTip>
                                                        </ToggleButton.ToolTip>
                                                    </ToggleButton>

                                                    <!--<TextBlock Margin="5" Grid.Row="1" Grid.Column="0" Text="Link global OSD" VerticalAlignment="Center"/>
                                                    <CheckBox Margin="5 0 0 0" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" IsChecked="{Binding ToggleGlobalRTSSOSD, Mode=TwoWay}" Style="{StaticResource MaterialDesignCheckBox}" ToolTipService.ShowDuration="25000">
                                                        <CheckBox.ToolTip>
                                                            <ToolTip>
                                                                <TextBlock Width="275" Text="If checked, the overlay hotkey will also toggle the global RTSS OSD instead of only the CX items." TextWrapping="Wrap">
                                                                </TextBlock>
                                                            </ToolTip>
                                                        </CheckBox.ToolTip>
                                                    </CheckBox>-->

                                                    <TextBlock Margin="5" Grid.Row="1" Grid.Column="0" Text="Auto-disable OSD" VerticalAlignment="Center"/>
                                                    <CheckBox Margin="5 0 0 0" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" IsChecked="{Binding AutoDisableOverlay, Mode=TwoWay}" Style="{StaticResource MaterialDesignCheckBox}" ToolTipService.ShowDuration="25000">
                                                        <CheckBox.ToolTip>
                                                            <ToolTip>
                                                                <TextBlock Width="275" Text="If checked, the global RTSS OSD will be disabled while running a benchmark. For 32bit applications, only the CX overlay items will be disabled." TextWrapping="Wrap">
                                                                </TextBlock>
                                                            </ToolTip>
                                                        </CheckBox.ToolTip>
                                                    </CheckBox>

                                                    <TextBlock Margin="5" Grid.Row="2" Grid.Column="0" Text="Custom position" VerticalAlignment="Center"/>
                                                    <CheckBox Margin="5 0 0 0" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" IsChecked="{Binding OSDCustomPosition, Mode=TwoWay}" Style="{StaticResource MaterialDesignCheckBox}" ToolTipService.ShowDuration="25000">
                                                        <CheckBox.ToolTip>
                                                            <ToolTip>
                                                                <TextBlock Width="275" Text="Adds options to manually set the position of the CX overlay items (not of the global OSD)" TextWrapping="Wrap">
                                                                </TextBlock>
                                                            </ToolTip>
                                                        </CheckBox.ToolTip>
                                                    </CheckBox>

                                                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5 0 0 0" VerticalAlignment="Center" Text="CX overlay position" Visibility="{Binding OSDCustomPosition, Converter={StaticResource TrueToVisibleConverter}}"></TextBlock>
                                                    <StackPanel Grid.Row="3" Grid.Column="1" Margin="8 0 0 0" Orientation="Horizontal" ToolTip="Changes position of the CX overlay items (not of the global OSD)" Visibility="{Binding OSDCustomPosition, Converter={StaticResource TrueToVisibleConverter}}">
                                                        <TextBox Width="30" Height="25" Text="{Binding OSDPositionX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" PreviewTextInput="IntegerNumberValidationTextBox"></TextBox>
                                                        <TextBlock VerticalAlignment="Center" Margin="5 0 5 0" Text="x"></TextBlock>
                                                        <TextBox Width="30" Height="25" Text="{Binding OSDPositionY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" PreviewTextInput="IntegerNumberValidationTextBox"></TextBox>
                                                    </StackPanel>
                                                </Grid>
                                            </StackPanel>
                                        </materialDesign:Card>
                                    </materialDesign:PopupBox>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                    <!--Global overlay toggle-->
                    <StackPanel Grid.Row="3" Margin="20 0 0 0" DockPanel.Dock="Bottom" Orientation="Horizontal">
                        <TextBox Margin="0 0 0 0" materialDesign:HintAssist.Hint="Toggle Overlay hotkey" Width="140" Height="45" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="14"
					         IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="OverlayHotkeyTextBox_PreviewKeyDown" materialDesign:HintAssist.HintOpacity=".8"
					         ToolTip="Hotkey combinable with up to two modifier keys (Ctrl, Shift or Alt)" Foreground="{DynamicResource MaterialDesignBody}">
                            <Binding Path="OverlayHotkey"
						    ElementName="OverlayViewControl"
						    Mode="OneWay"
						    TargetNullValue="&lt; not set &gt;">
                                <Binding.ValidationRules>
                                    <validation:HotkeyValidationRule
                            ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <TextBox Margin="25 0 0 0" materialDesign:HintAssist.Hint="Toggle Config hotkey" Width="132" Height="45" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="14"
					        IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="ConfigHotkeyTextBox_PreviewKeyDown" materialDesign:HintAssist.HintOpacity=".8"
					        ToolTip="Hotkey combinable with up to two modifier keys (Ctrl, Shift or Alt)" Foreground="{DynamicResource MaterialDesignBody}">
                            <Binding Path="OverlayConfigHotkey"
						    ElementName="OverlayViewControl"
						    Mode="OneWay"
						    TargetNullValue="&lt; not set &gt;">
                                <Binding.ValidationRules>
                                    <validation:HotkeyValidationRule
                            ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <ComboBox Margin="25 0 0 0" 
					        materialDesign:ComboBoxAssist.ClassicMode="True"
					        materialDesign:HintAssist.Hint="Refresh period (ms)" materialDesign:HintAssist.HintOpacity=".8"
					        materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="200" Width="110" Height="40"
					        MouseLeave="OSDRefreshPeriodComboBox_MouseLeave" FontSize="14"
                            Foreground="{DynamicResource MaterialDesignBody}"
					        ItemsSource="{Binding Path=RefreshPeriodItemsSource}">
                            <ComboBox.Text>
                                <Binding Path="OSDRefreshPeriod"
							     Mode="TwoWay"
							     UpdateSourceTrigger="PropertyChanged">
                                </Binding>
                            </ComboBox.Text>
                        </ComboBox>
                    </StackPanel>
                </Grid>
            </DockPanel>
		</materialDesign:DialogHost>
		</Border>
        <TabControl Grid.Row="1" Grid.Column="2" Margin="0 0 0 0" Background="Transparent" BorderThickness="0.3" BorderBrush="{DynamicResource MaterialDesignBody}">
            <TabItem Width="150" Foreground="{DynamicResource MaterialDesignBody}">
                <TabItem.Header>
                    <Label FontSize="12">Overlay items options</Label>
                </TabItem.Header>
                <Grid HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"></RowDefinition>
                        <RowDefinition Height="200"></RowDefinition>
                        <RowDefinition Height="215"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="220"/>
                        <ColumnDefinition Width="220"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2"  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" Text="{Binding SelectedOverlayItemName}"/>
                    <Border Grid.Row="1" Grid.Column="0" Margin="5" Background="Transparent" BorderThickness="0.3" BorderBrush="{DynamicResource MaterialDesignBody}">
                        <StackPanel Margin="5" IsEnabled="{Binding OverlayItemsOptionsEnabled}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Colors and limits" FontSize="16"/>
                                <Button Grid.Row="0" Grid.Column="2" Width="20" Height="20" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        ToolTip="Reset to defaults" Command="{Binding ResetColorAndLimitDefaultsCommand}"
                                        materialDesign:RippleAssist.Feedback="#DD000000">
                                    <materialDesign:PackIcon Kind="Restore" Height="15" Width="15" />
                                </Button>
                                <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="Group color:"/>
                                <ctrls:CXColorPicker Grid.Row="1" Grid.Column="2" Width="25" Height="25" Margin="0 0 0 0" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" SelectedColor="{Binding SelectedOverlayEntry.GroupColor, Converter={StaticResource StringColorConverter}}" 
										SelectedColorChanged="SelectedColorChanged" DisplayColorAndName="False" AvailableColorsSortingMode="HueSaturationBrightness">
                                    <ctrls:CXColorPicker.ButtonStyle>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton" xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.Wpf.Toolkit">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <Grid>
                                                                <Border Background="{TemplateBinding Background}"
																		BorderBrush="{TemplateBinding BorderBrush}"
																		BorderThickness="1"																						
																		SnapsToDevicePixels="True">
                                                                    <ContentPresenter Content="{TemplateBinding Content}"
																					  ContentTemplate="{TemplateBinding ContentTemplate}"
																					  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
																					  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																					  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                                </Border>
                                                            </Grid>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ctrls:CXColorPicker.ButtonStyle>
                                </ctrls:CXColorPicker>
                                <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Text="Standard value color:"/>
                                <ctrls:CXColorPicker Grid.Row="2" Grid.Column="2" Width="25" Height="25" Margin="0 0 0 0" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" SelectedColor="{Binding SelectedOverlayEntry.Color, Converter={StaticResource StringColorConverter}}" 
										SelectedColorChanged="SelectedColorChanged" DisplayColorAndName="False" AvailableColorsSortingMode="HueSaturationBrightness">
                                    <ctrls:CXColorPicker.ButtonStyle>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton" xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.Wpf.Toolkit">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <Grid>
                                                                <Border Background="{TemplateBinding Background}"
																							BorderBrush="{TemplateBinding BorderBrush}"
																							BorderThickness="1"																						
																							SnapsToDevicePixels="True">
                                                                    <ContentPresenter Content="{TemplateBinding Content}"
																										  ContentTemplate="{TemplateBinding ContentTemplate}"
																										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
																										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                                </Border>
                                                            </Grid>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ctrls:CXColorPicker.ButtonStyle>
                                </ctrls:CXColorPicker>
                                <StackPanel Grid.Row="3" Grid.ColumnSpan="3" Orientation="Horizontal" Visibility="{Binding SelectedOverlayEntry.IsNumeric, Converter={StaticResource FalseToCollapsedConverter}}">
                                <TextBlock VerticalAlignment="Center" Text="Upper limit + color:"></TextBlock>
                                <TextBox Margin="20 0 2 0" Width="40" VerticalAlignment="Center" PreviewKeyDown="LostFocus_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" 
                                         ToolTip="Changes value color if value is equal or higher&#10;Clear this box to deactivate limit"
                                         Text="{Binding SelectedOverlayEntry.UpperLimitValue, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding SelectedOverlayEntry.IsNumeric}">
                                </TextBox>
                                <ctrls:CXColorPicker Width="25" Height="25" Margin="5 0 0 0" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" SelectedColor="{Binding SelectedOverlayEntry.UpperLimitColor, Converter={StaticResource StringColorConverter}}" 
										          SelectedColorChanged="SelectedColorChanged" DisplayColorAndName="False" AvailableColorsSortingMode="HueSaturationBrightness"
                                                  >
                                    <ctrls:CXColorPicker.ButtonStyle>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton" xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.Wpf.Toolkit">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <Grid>
                                                                <Border Background="{TemplateBinding Background}"
																							BorderBrush="{TemplateBinding BorderBrush}"
																							BorderThickness="1"																						
																							SnapsToDevicePixels="True">
                                                                    <ContentPresenter Content="{TemplateBinding Content}"
																										  ContentTemplate="{TemplateBinding ContentTemplate}"
																										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
																										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                                </Border>
                                                            </Grid>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ctrls:CXColorPicker.ButtonStyle>
                                </ctrls:CXColorPicker>
                                </StackPanel>
                                <StackPanel Grid.Row="4" Grid.ColumnSpan="3" Orientation="Horizontal" Visibility="{Binding SelectedOverlayEntry.IsNumeric, Converter={StaticResource FalseToCollapsedConverter}}">
                                    <TextBlock Grid.Row="4" Grid.Column="0"  VerticalAlignment="Center" Text="Lower limit + color:"></TextBlock>
                                    <TextBox Margin="20 0 2 0" Grid.Row="4" Grid.Column="1" Width="40" VerticalAlignment="Center" PreviewKeyDown="LostFocus_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" 
                                         ToolTip="Changes value color if value is equal or lower&#10;Clear this box to deactivate limit"
                                         Text="{Binding SelectedOverlayEntry.LowerLimitValue, UpdateSourceTrigger=LostFocus}"
                                         IsEnabled="{Binding SelectedOverlayEntry.IsNumeric}">
                                    </TextBox>
                                    <ctrls:CXColorPicker Width="25" Height="25" Margin="5 0 0 0" Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" SelectedColor="{Binding SelectedOverlayEntry.LowerLimitColor, Converter={StaticResource StringColorConverter}}" 
										          SelectedColorChanged="SelectedColorChanged" DisplayColorAndName="False" AvailableColorsSortingMode="HueSaturationBrightness"
                                                  IsEnabled="{Binding SelectedOverlayEntry.IsNumeric}">
                                        <ctrls:CXColorPicker.ButtonStyle>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton" xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.Wpf.Toolkit">
                                                            <Grid SnapsToDevicePixels="True">
                                                                <Grid>
                                                                    <Border Background="{TemplateBinding Background}"
																							BorderBrush="{TemplateBinding BorderBrush}"
																							BorderThickness="1"																						
																							SnapsToDevicePixels="True">
                                                                        <ContentPresenter Content="{TemplateBinding Content}"
																										  ContentTemplate="{TemplateBinding ContentTemplate}"
																										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
																										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                                    </Border>
                                                                </Grid>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ctrls:CXColorPicker.ButtonStyle>
                                    </ctrls:CXColorPicker>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Border>
                    <!-- Format options -->
                    <Border Grid.Row="1" Grid.Column="1" Margin="5" Background="Transparent" BorderThickness="0.3" BorderBrush="{DynamicResource MaterialDesignBody}">
                        <StackPanel Margin="5" IsEnabled="{Binding OverlayItemsOptionsEnabled}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="130"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Format options" FontSize="16"/>
                                <TextBlock Grid.Row="1" Grid.Column="0"  VerticalAlignment="Center" Text="Group name font size"></TextBlock>
                                <TextBox Grid.Row="1" Grid.Column="1" Width="25" VerticalAlignment="Center" PreviewKeyDown="LostFocus_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" 
                                         ToolTip="Positive percentage = superscript&#10;Negative percentage = subscript"
                                         Text="{Binding SelectedOverlayEntry.GroupFontSize, UpdateSourceTrigger=LostFocus}">
                                </TextBox>
                                <Label Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Content="%"/>
                                <TextBlock Grid.Row="2" Grid.Column="0"  VerticalAlignment="Center" Text="Value font size"></TextBlock>
                                <TextBox Grid.Row="2" Grid.Column="1" Width="25" VerticalAlignment="Center" PreviewKeyDown="LostFocus_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" 
                                         ToolTip="Positive percentage = superscript&#10;Negative percentage = subscript"
                                         Text="{Binding SelectedOverlayEntry.ValueFontSize, UpdateSourceTrigger=LostFocus}">
                                </TextBox>
                                <Label Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" Content="%"/>
                            </Grid>
                        </StackPanel>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="0" Margin="5" BorderThickness="0.3" BorderBrush="{DynamicResource MaterialDesignBody}">
                        <DataGrid x:Name="SeparatorDataGrid" FontSize="11"
					              SelectedIndex="{Binding Path=OverlaySubModelGroupSeparating.SelectedOverlayGroupIndex}" 
                                  ItemsSource="{Binding Path=OverlaySubModelGroupSeparating.OverlayGroupNameSeparatorEntries}"
					              CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False"
					              materialDesign:DataGridAssist.CellPadding="13 3 0 0" materialDesign:DataGridAssist.ColumnHeaderPadding="8" IsSynchronizedWithCurrentItem="False"
					              ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"
                                  Style="{StaticResource MaterialDesignDataGrid}"
                                  Background="{DynamicResource MaterialDesignBackground}">
                            <DataGrid.Resources>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="DataGrid.Height" Value="25" />
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                                    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                                    <Setter Property="ValidationErrorTemplate">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Foreground="#d50000" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridRow}">
                                                <Border x:Name="DGR_Border"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"                                                                  
                                                SnapsToDevicePixels="True">
                                                    <SelectiveScrollingGrid>
                                                        <SelectiveScrollingGrid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </SelectiveScrollingGrid.ColumnDefinitions>
                                                        <SelectiveScrollingGrid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </SelectiveScrollingGrid.RowDefinitions>
                                                        <DataGridCellsPresenter Grid.Column="1"
                                                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        <DataGridDetailsPresenter Grid.Column="1"
                                                                        Grid.Row="1"
                                                                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                                        Visibility="{TemplateBinding DetailsVisibility}" />
                                                        <DataGridRowHeader Grid.Column="0"
                                                                    Grid.Row="0"
                                                                    Grid.RowSpan="2"
                                                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    </SelectiveScrollingGrid>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignDataGridRowHoverBackground}" />
                                        </Trigger>
                                        <Trigger Property="IsNewItem" Value="True">
                                            <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True"/>
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.Setters>
                                                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                            </MultiTrigger.Setters>
                                        </MultiTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding GroupName, Mode=OneWay}"
                                            Header="Group name"
                                            IsReadOnly="True"/>
                                <DataGridTextColumn Binding="{Binding GroupSeparators, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                            Header="Separators"
                                            IsReadOnly="False"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="1" Margin="5" Background="Transparent" BorderThickness="0.3" BorderBrush="{DynamicResource MaterialDesignBody}">
                        <Grid IsEnabled="{Binding OverlayItemsOptionsEnabled}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="40"></RowDefinition>
                                <RowDefinition Height="20"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                                <RowDefinition Height="20"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Margin="5" HorizontalAlignment="Center" Text="Apply to multiple entries" Width="180" 
                                       TextWrapping="Wrap" TextAlignment="Center" FontSize="16">
                            </TextBlock>
                            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                                <CheckBox IsChecked="{Binding Checkboxes.Colors}" Margin="5">
                                    <TextBlock>Colors</TextBlock>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding Checkboxes.Limits}" Margin="5">
                                    <TextBlock>Limits</TextBlock>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding Checkboxes.Format}" Margin="5">
                                    <TextBlock>Format</TextBlock>
                                </CheckBox>
                            </StackPanel>
                            <TextBlock Grid.Row="2"  Text="Group name" TextAlignment="Left" Margin="10 5 0 0">
                            </TextBlock>
                            <StackPanel Grid.Row="3" Margin="10 0 0 0" Orientation="Horizontal" VerticalAlignment="Center">
                                <Button Width="28" Height="28" Margin="5 0 10 0" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        IsEnabled="{Binding SetGroupButtonEnabled}" Command="{Binding SetFormatForGroupNameCommand}" ToolTip="Set selected variables for all entries with this group name"
                                        materialDesign:RippleAssist.Feedback="#DD000000">
                                    <materialDesign:PackIcon Kind="BallotRecountOutline" Height="22" Width="22" />
                                </Button>
                                <TextBlock Margin="0 7 0 0" Text="{Binding SelectedOverlayItemGroupName}" Width="140" TextAlignment="Left" TextWrapping="Wrap" FontWeight="Bold"/>
                            </StackPanel>
                            <TextBlock Grid.Row="4" TextAlignment="Left" Text="Sensor type" Margin="10 5 0 0">
                            </TextBlock>
                            <StackPanel Grid.Row="5" Margin="10 0 0 0" Orientation="Horizontal" VerticalAlignment="Center">
                                <Button Width="28" Height="28" Margin="5 0 10 0" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        IsEnabled="{Binding SetSensorTypeButtonEnabled}" Command="{Binding SetFormatForSensorTypeCommand}" ToolTip="Set selected variables for all entries with this sensor type"
                                        materialDesign:RippleAssist.Feedback="#DD000000">
                                    <materialDesign:PackIcon Kind="BallotRecountOutline" Height="22" Width="22" />
                                </Button>
                                <TextBlock Margin="0 7 0 0" Text="{Binding SelectedOverlayItemSensorType}" Width="140" TextAlignment="Left" TextWrapping="Wrap" FontWeight="Bold"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem Width="220" Foreground="{DynamicResource MaterialDesignBody}">
                <TabItem.Header>
                    <Label FontSize="12">Run history and aggregation options</Label>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"></RowDefinition>
                        <RowDefinition Height="140"></RowDefinition>
                        <RowDefinition Height="80"></RowDefinition>
                        <RowDefinition Height="140"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <!--Global history toogle-->
                    <StackPanel Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Vertical">
                        <TextBlock Text="Run history" Margin="5"/>
                        <ToggleButton IsChecked="{Binding UseRunHistory}" Style="{StaticResource MaterialDesignSwitchToggleButton}" 
								  ToolTipService.ShowDuration="25000">
                            <ToggleButton.ToolTip>
                                <ToolTip MaxWidth="250">
                                    <TextBlock Text="Saves a set number of runs into a history which can be displayed in the overlay"                               
										   TextWrapping="Wrap"/>
                                </ToolTip>
                            </ToggleButton.ToolTip>
                        </ToggleButton>
                    </StackPanel>
                    <!--Run controls-->
                    <Grid Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Center" IsEnabled="{Binding UseRunHistory}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"></RowDefinition>
                            <RowDefinition Height="1*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="225"/>
                            <ColumnDefinition Width="225"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Grid.Row="0" Grid.Column="0" materialDesign:HintAssist.Hint="Number of runs" VerticalAlignment="Bottom" materialDesign:HintAssist.HintOpacity=".8"
					              materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120" Height="40" materialDesign:ComboBoxAssist.ClassicMode="True"
					              ItemsSource="{Binding Path=NumberOfRunsItemsSource}" ToolTipService.ShowDuration="25000">
                            <ComboBox.ToolTip>
                                <ToolTip StaysOpen="True" MaxWidth="275">
                                    <TextBlock Text="The number of runs written into the history.
											When not using aggregation, any additional run will replace the oldest one." 
										   TextWrapping="Wrap"/>
                                </ToolTip>
                            </ComboBox.ToolTip>
                            <ComboBox.Text>
                                <Binding Path="SelectedNumberOfRuns"
							Mode="TwoWay"
							UpdateSourceTrigger="PropertyChanged">
                                </Binding>
                            </ComboBox.Text>
                        </ComboBox>
                        <!--Reset run history hotkey-->
                        <TextBox Grid.Row="0" Grid.Column="1" Width="120" Height="45" Margin="0 20 0 0" materialDesign:HintAssist.Hint="Reset run history" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="14"
					             IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="ResetHistoryHotkeyTextBox_PreviewKeyDown" 
					             ToolTip="Hotkey combinable with up to two modifier keys (Ctrl, Shift or Alt)" materialDesign:HintAssist.HintOpacity=".8">
                            <Binding Path="ResetHistoryHotkey"
						             ElementName="OverlayViewControl"
						             Mode="OneWay"
						             TargetNullValue="&lt; not set &gt;">
                                <Binding.ValidationRules>
                                    <validation:HotkeyValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <!--Metrics shown on overlay-->
                        <ComboBox  Grid.Row="1" Grid.Column="0" Width="120" Height="40" materialDesign:HintAssist.Hint="Second metric" materialDesign:HintAssist.HintOpacity=".8"
					              materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="330" materialDesign:ComboBoxAssist.ClassicMode="True"
					              ItemsSource="{Binding SecondMetricItems}" SelectedItem="{Binding SelectedSecondMetric}"
                                  ToolTip="Second metric shown in history entries">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <ComboBox Grid.Row="1" Grid.Column="1" Width="120" Height="40" materialDesign:HintAssist.Hint="Third metric" materialDesign:HintAssist.HintOpacity=".8"
					              materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="360" materialDesign:ComboBoxAssist.ClassicMode="True"
					              ItemsSource="{Binding ThirdMetricItems}" SelectedItem="{Binding SelectedThirdMetric}"
                                  ToolTip="Third metric shown in history entries">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                    <!--Aggregation of run history toogle-->
                    <StackPanel Margin="0 -20 0 0" Grid.Row="23" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <TextBlock Text="Aggregation of run history" Margin="5"/>
                        <ToggleButton IsChecked="{Binding UseAggregation}" Style="{StaticResource MaterialDesignSwitchToggleButton}" IsEnabled="{Binding AggregationButtonEnabled}" 
                                  ToolTipService.ShowDuration="25000">
                            <ToggleButton.ToolTip>
                                <ToolTip MaxWidth="350">
                                    <TextBlock 
                             Text="Once the run history is full, combines its frametime data to a single record file and shows it below the run history.
                                &#10;&#10;This is NOT the same as calculating average parameters from multiple single record files. It simulates running the same scene multiple times in one single benchmark. 
                                Performance parameters are calculated using all of the frametime data." 
                             TextWrapping="Wrap"/>
                                </ToolTip>
                            </ToggleButton.ToolTip>
                        </ToggleButton>
                    </StackPanel>
                    <StackPanel Margin="0 40 0 0" Grid.Row="3" Grid.ColumnSpan="2" HorizontalAlignment="Center"
                  IsEnabled="{Binding UseAggregation}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="60"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="225"/>
                                <ColumnDefinition Width="225"/>
                            </Grid.ColumnDefinitions>
                            <!--Outlier handling-->
                            <ComboBox Grid.Row="0" Grid.Column="0" materialDesign:HintAssist.Hint="Outlier handling" materialDesign:ComboBoxAssist.ClassicMode="True"
					                  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120" Height="40" materialDesign:HintAssist.HintOpacity=".8"
					                  ItemsSource="{Binding OutlierHandlingItems}" SelectedItem="{Binding SelectedOutlierHandling}" 
                                      ToolTipService.ShowDuration="25000">
                                <ComboBox.ToolTip>
                                    <ToolTip MaxWidth="350">
                                        <TextBlock
                             Text="If the selected metric of a run differs more than X% from the median of all runs, the run will be marked as an outlier.
                                    &#10;&#10;Mark &amp; use&#10;All runs will be aggregated once the history is full.
                                   
                                   &#10;&#10;Mark &amp; replace&#10;Marked runs have to be replaced by additional runs.
                                   &#10;Runs will be aggregated once the history contains no more outliers."
                             TextWrapping="Wrap"/>
                                    </ToolTip>
                                </ComboBox.ToolTip>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <!--History items save option-->
                            <CheckBox Grid.Row="0" Grid.Column="1"  Width="120" IsChecked="{Binding SaveAggregationOnly}" ToolTipService.ShowDuration="25000">
                                <CheckBox.ToolTip>
                                    <ToolTip StaysOpen="True" MaxWidth="275">
                                        <TextBlock 
                             Text="If checked, the independent history items will not be saved in addition to the aggregated result." 
                                  TextWrapping="Wrap"/>
                                    </ToolTip>
                                </CheckBox.ToolTip>
                                <TextBlock Padding="5 0 0 0" TextWrapping="WrapWithOverflow">
  					     Save aggregated result only
                                </TextBlock>
                            </CheckBox>
                            <!--Outlier metric-->
                            <ComboBox Grid.Row="1" Grid.Column="0"  materialDesign:HintAssist.Hint="Outlier metric" materialDesign:ComboBoxAssist.ClassicMode="True"
					                  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120" Height="40" materialDesign:HintAssist.HintOpacity=".8"
					                  ItemsSource="{Binding RelatedMetricItemsSource}" SelectedItem="{Binding SelectedRelatedMetric}" 
                              ToolTipService.ShowDuration="25000">
                                <ComboBox.ToolTip>
                                    <ToolTip MaxWidth="350">
                                        <TextBlock
                             Text="Metric used to determine outliers" 
                             TextWrapping="Wrap"/>
                                    </ToolTip>
                                </ComboBox.ToolTip>
                            </ComboBox>
                            <!--Outlier percentage-->
                            <ComboBox Grid.Row="1" Grid.Column="1" materialDesign:HintAssist.Hint="Outlier percentage" materialDesign:ComboBoxAssist.ClassicMode="True"
					                  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="200" Width="120" Height="40" materialDesign:HintAssist.HintOpacity=".8"
					                  ItemsSource="{Binding OutlierPercentageItemsSource}" SelectedItem="{Binding SelectedOutlierPercentage}" 
                                      ToolTipService.ShowDuration="25000">
                                <ComboBox.ToolTip>
                                    <ToolTip MaxWidth="350">
                                        <TextBlock
                             Text="The percentage the FPS of a run can differ from the median of all runs before being counted as an outlier" 
                             TextWrapping="Wrap"/>
                                    </ToolTip>
                                </ComboBox.ToolTip>
                            </ComboBox>
                        </Grid>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>