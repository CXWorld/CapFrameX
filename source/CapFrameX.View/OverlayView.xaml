<UserControl x:Class="CapFrameX.View.OverlayView"
			 x:Name="OverlayViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ctrls="clr-namespace:CapFrameX.View.Controls"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:dragdrop="urn:gong-wpf-dragdrop"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
			 xmlns:validation ="clr-namespace:CapFrameX.MVVM.Validation;assembly=CapFrameX.MVVM"
			 xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
			 xmlns:prism="http://prismlibrary.com/"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="1200"
			 Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{StaticResource MaterialDesignFont}"
			 prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.GridSplitter.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToVisibleConverter" TrueValue="Collapsed" FalseValue="Visible"/>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed"/>
            <mvvm:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Collapsed" TrueValue="Visible"/>
            <mvvm:InvertBoolConverter x:Key="InvertBoolConverter"/>
            <mvvm:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
            <mvvm:StringColorConverter x:Key="StringColorConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid HorizontalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="510"></RowDefinition>
            <RowDefinition Height="100"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="450"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="450"/>
        </Grid.ColumnDefinitions>
        <TextBlock Margin="0 0 0 0" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"
				    FontSize="18" Visibility="{Binding IsRTSSInstalled, Converter={StaticResource FalseToVisibleConverter}}">             
			<Hyperlink NavigateUri="https://www.guru3d.com/files-details/rtss-rivatuner-statistics-server-download.html" 
					   RequestNavigate="Hyperlink_RequestNavigate">
				<TextBlock Text="{Binding Path=UpdateHpyerlinkText}" TextAlignment="Center"/>
			</Hyperlink>
		</TextBlock>
        <StackPanel Margin="-15 30 0 0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Orientation="Horizontal">
            <Separator Width="1" BorderBrush="Black" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
        </StackPanel>
        <DockPanel Grid.Row="1" Grid.Column="0" Margin="0 0 10 0" 
                   Visibility="{Binding  IsRTSSInstalled, Converter={StaticResource TrueToVisibleConverter}}">
            <!--DataGrid and Overlay hotkey-->
            <Grid DockPanel.Dock="Top">
                <TextBlock Margin="20 0 0 10" HorizontalAlignment="Left" Text="Overlay items" FontSize="14" VerticalAlignment="Center"/>
                <StackPanel Margin="0 0 10 10" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Width="28" Height="28" Margin="0 0 10 0" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                            ToolTip="Save current config" Command="{Binding SaveConfigCommand}"
                            materialDesign:RippleAssist.Feedback="#DD000000">
                        <materialDesign:PackIcon Kind="ContentSaveSettings" Height="22" Width="22" />
                    </Button>
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                                 Padding="0 0 0 0"
                                 Width="30"
                                 MinWidth="30"
                                 IsChecked="{Binding IsConfig0Checked}"
                                 Content="1"
                                 Command="{Binding ConfigSwitchCommand}" CommandParameter="0"/>
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                                 Padding="0 0 0 0"
                                 Width="30"
                                 MinWidth="30"
                                 IsChecked="{Binding IsConfig1Checked}"
                                 Content="2" 
                                 Command="{Binding ConfigSwitchCommand}" CommandParameter="1"/>
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                                 Padding="0 0 0 0"
                                 Width="30"
                                 MinWidth="30"
                                 IsChecked="{Binding IsConfig2Checked}"
                                 Content="3" 
                                 Command="{Binding ConfigSwitchCommand}" CommandParameter="2"/>
                    <Button Width="28" Height="28" Margin="7 0 10 0" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                            ToolTip="Reset to defaults" Command="{Binding ResetDefaultsCommand}"
                            materialDesign:RippleAssist.Feedback="#DD000000">
                        <materialDesign:PackIcon Kind="Restore" Height="22" Width="22" />
                    </Button>
                </StackPanel>
            </Grid>
            <StackPanel DockPanel.Dock="Top" Orientation="Vertical" HorizontalAlignment="Center">
                <DataGrid x:Name="OverlayItemDataGrid" FocusVisualStyle="{x:Null}" Height="350" Width="400" Background="#F5F5F5" FontSize="11"
					      SelectedIndex="{Binding SelectedOverlayEntryIndex}" SelectedItem="{Binding SelectedOverlayEntry}" ItemsSource="{Binding OverlayEntries}"
					      CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False"
					      materialDesign:DataGridAssist.CellPadding="13 3 0 0" materialDesign:DataGridAssist.ColumnHeaderPadding="8" IsSynchronizedWithCurrentItem="False"
					      ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"
					      dragdrop:DragDrop.IsDragSource="True"
					      dragdrop:DragDrop.IsDropTarget="True"
						  dragdrop:DragDrop.DropHandler="{Binding}"
					      dragdrop:DragDrop.UseDefaultDragAdorner="True"
					      dragdrop:DragDrop.DefaultDragAdornerOpacity="0.5"
					      dragdrop:DragDrop.UseDefaultEffectDataTemplate="False"
                          ToolTip="Drag &amp; Drop to change order"
                          ToolTipService.VerticalOffset="-6">
                    <DataGrid.Resources>
                        <Style TargetType="DataGridRow">
                            <Setter Property="DataGrid.Height" Value="25" />
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding ShowOnOverlay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="OSD">
                            <DataGridCheckBoxColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="IsEnabled" 
                                        Value="{Binding Path=ShowOnOverlayIsEnabled}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <ContentPresenter VerticalAlignment="Center" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                                            <Setter Property="Background" Value="#DCDCDC" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>

                            </DataGridCheckBoxColumn.CellStyle>
                        </DataGridCheckBoxColumn>
                        <DataGridTextColumn Binding="{Binding Description, Mode=TwoWay}"
                                            Header="Description"
                                            IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding GroupName, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                            Header="Group name"
                                            IsReadOnly="False"/>
                        <DataGridCheckBoxColumn Binding="{Binding ShowGraph, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Header="Graph">
                            <DataGridCheckBoxColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="IsEnabled" 
                                        Value="{Binding Path=ShowGraphIsEnabled}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <ContentPresenter VerticalAlignment="Center" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                                            <Setter Property="Background" Value="#DCDCDC" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridCheckBoxColumn.CellStyle>
                        </DataGridCheckBoxColumn>
                        <!--<DataGridTextColumn Binding="{Binding Color, Mode=TwoWay}"
										    Width="100"
                                            Header="Hex-color"
                                            IsReadOnly="False"/>-->
                    </DataGrid.Columns>
                </DataGrid>
                <Border Margin="0 5 0 0"  BorderThickness="0.2" BorderBrush="Black">
                    <StackPanel Margin="5 5 0 5"  Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center">Group control:</TextBlock>
                        <materialDesign:PopupBox StaysOpen="True" ToolTipService.ShowDuration="25000">
                            <materialDesign:PopupBox.ToolTip>
                                <ToolTip MaxWidth="275" Placement="Top">
                                    <TextBlock Text="OSD parameter group control" 
										   TextWrapping="Wrap"/>
                                </ToolTip>
                            </materialDesign:PopupBox.ToolTip>
                            <materialDesign:Card Width="220" Margin="0 0 0 -10">
                                <StackPanel>
                                    <Grid Margin="8 8 8 8">
                                        <Grid.Resources>
                                            <Style TargetType="CheckBox"
											BasedOn="{StaticResource MaterialDesignCheckBox}">
                                                <Setter Property="Margin" Value="8,8,10,8" />
                                            </Style>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                                                <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
                                                <Setter Property="Margin" Value="8,8,8,8" />
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Margin="5" Grid.Row="0" Grid.Column="0" Text="Capture items" VerticalAlignment="Center"/>
                                        <ToggleButton Margin="5" Grid.Row="0" Grid.Column="1" IsChecked="{Binding Path=OverlaySubModelGroupControl.OverlayGroupCaptureItems}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control capture items" />

                                        <TextBlock Margin="5" Grid.Row="1" Grid.Column="0" Text="System infos" VerticalAlignment="Center"/>
                                        <ToggleButton Margin="5" Grid.Row="1" Grid.Column="1" IsChecked="{Binding Path=OverlaySubModelGroupControl.OverlayGroupSystemInfo}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control system info" />

                                        <TextBlock Margin="5" Grid.Row="2" Grid.Column="0" Text="Real-time metrics" VerticalAlignment="Center"/>
                                        <ToggleButton Margin="5" Grid.Row="2" Grid.Column="1" IsChecked="{Binding Path=OverlaySubModelGroupControl.OverlayGroupOnlineMetrics}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control online metrics" />

                                        <TextBlock Margin="5" Grid.Row="3" Grid.Column="0" Text="GPU basics" VerticalAlignment="Center"/>
                                        <ToggleButton Margin="5" Grid.Row="3" Grid.Column="1" IsChecked="{Binding Path=OverlaySubModelGroupControl.OverlayGroupGpuBasics}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control GPU basic sensors" />

                                        <TextBlock Margin="5" Grid.Row="4" Grid.Column="0" Text="CPU loads" VerticalAlignment="Center"/>
                                        <ToggleButton Margin="5" Grid.Row="4" Grid.Column="1" IsChecked="{Binding Path=OverlaySubModelGroupControl.OverlayGroupCPULoads}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control CPU loads" />

                                        <TextBlock Margin="5" Grid.Row="5" Grid.Column="0" Text="CPU clocks" VerticalAlignment="Center"/>
                                        <ToggleButton Margin="5" Grid.Row="5" Grid.Column="1" IsChecked="{Binding Path=OverlaySubModelGroupControl.OverlayGroupCPUClocks}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control CPU Clocks" />

                                        <TextBlock Margin="5" Grid.Row="6" Grid.Column="0" Text="CPU temps" VerticalAlignment="Center"/>
                                        <ToggleButton Margin="5" Grid.Row="6" Grid.Column="1" IsChecked="{Binding Path=OverlaySubModelGroupControl.OverlayGroupCPUTemps}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control CPU temps" />

                                        <TextBlock Margin="5" Grid.Row="7" Grid.Column="0" Text="RAM items" VerticalAlignment="Center"/>
                                        <ToggleButton Margin="5" Grid.Row="7" Grid.Column="1" IsChecked="{Binding Path=OverlaySubModelGroupControl.OverlayGroupRAMItems}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="Group control RAM items" />
                                    </Grid>
                                </StackPanel>
                            </materialDesign:Card>
                        </materialDesign:PopupBox>
                    </StackPanel>
                </Border>
            </StackPanel>
            <!--Global overlay toggle-->
            <StackPanel Margin="0 10 0 0" DockPanel.Dock="Bottom">
                <TextBox Margin="-225 0 0 -20" DockPanel.Dock="Bottom" materialDesign:HintAssist.Hint="Overlay hotkey" Width="132" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="14"
					 IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="OverlayHotkeyTextBox_PreviewKeyDown"
					 ToolTip="combinable with Ctrl/Shift/Alt">
                    <Binding Path="OverlayHotkey"
						 ElementName="OverlayViewControl"
						 Mode="OneWay"
						 TargetNullValue="&lt; not set &gt;">
                        <Binding.ValidationRules>
                            <validation:HotkeyValidationRule
                          ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <ComboBox Margin="225 -20 0 0" DockPanel.Dock="Bottom"
					  materialDesign:ComboBoxAssist.ClassicMode="True"
					  materialDesign:HintAssist.Hint="Refresh period (ms)"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="200" Width="132"
					  MouseLeave="OSDRefreshPeriodComboBox_MouseLeave" FontSize="14"
					  ItemsSource="{Binding Path=RefreshPeriodItemsSource}">
                    <ComboBox.Text>
                        <Binding Path="OSDRefreshPeriod"
							     Mode="TwoWay"
							     UpdateSourceTrigger="PropertyChanged">
                        </Binding>
                    </ComboBox.Text>
                </ComboBox>
                <StackPanel Margin="40 10 0 0" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Orientation="Horizontal">
                    <TextBlock Text="Overlay toggle"/>
                    <ToggleButton Margin="15 0 0 0" IsChecked="{Binding IsOverlayActive, Mode=TwoWay}" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                    <StackPanel.ToolTip>
                        <ToolTip MaxWidth="250">
                            <TextBlock Text="Shows the CX overlay items in RTSS. Make sure global RTSS OSD is ON" TextWrapping="Wrap"/>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>
            </StackPanel>
        </DockPanel>
        <TabControl Grid.Row="1" Grid.Column="2" Margin="0 0 0 20" Background="Transparent" BorderThickness=".2" BorderBrush="Black" >
            <TabItem Header="Run history and aggregation options">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"></RowDefinition>
                        <RowDefinition Height="140"></RowDefinition>
                        <RowDefinition Height="80"></RowDefinition>
                        <RowDefinition Height="140"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <!--Global history toogle-->
                    <StackPanel Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Vertical">
                        <TextBlock Text="Run history" Margin="5"/>
                        <ToggleButton IsChecked="{Binding UseRunHistory}" Style="{StaticResource MaterialDesignSwitchToggleButton}" 
								  ToolTipService.ShowDuration="25000">
                            <ToggleButton.ToolTip>
                                <ToolTip MaxWidth="250">
                                    <TextBlock Text="Saves a set number of runs into a history which can be displayed in the overlay"                               
										   TextWrapping="Wrap"/>
                                </ToolTip>
                            </ToggleButton.ToolTip>
                        </ToggleButton>
                    </StackPanel>
                    <!--Run controls-->
                    <Grid Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Center"
                  IsEnabled="{Binding UseRunHistory}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"></RowDefinition>
                            <RowDefinition Height="1*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="225"/>
                            <ColumnDefinition Width="225"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Grid.Row="0" Grid.Column="0" materialDesign:HintAssist.Hint="Number of runs" VerticalAlignment="Bottom"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120" materialDesign:ComboBoxAssist.ClassicMode="True"
					  ItemsSource="{Binding Path=NumberOfRunsItemsSource}" ToolTipService.ShowDuration="25000">
                            <ComboBox.ToolTip>
                                <ToolTip StaysOpen="True" MaxWidth="275">
                                    <TextBlock Text="The number of runs written into the history.
											When not using aggregation, any additional run will replace the oldest one." 
										   TextWrapping="Wrap"/>
                                </ToolTip>
                            </ComboBox.ToolTip>
                            <ComboBox.Text>
                                <Binding Path="SelectedNumberOfRuns"
							Mode="TwoWay"
							UpdateSourceTrigger="PropertyChanged">
                                </Binding>
                            </ComboBox.Text>
                        </ComboBox>
                        <!--Reset run history hotkey-->
                        <TextBox Grid.Row="0" Grid.Column="1" Width="120" wpf:HintAssist.Hint="Reset run history hotkey" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="14"
					 IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="ResetHistoryHotkeyTextBox_PreviewKeyDown"
					 ToolTip="combinable with Ctrl/Shift/Alt">
                            <Binding Path="ResetHistoryHotkey"
						 ElementName="OverlayViewControl"
						 Mode="OneWay"
						 TargetNullValue="&lt; not set &gt;">
                                <Binding.ValidationRules>
                                    <validation:HotkeyValidationRule
                          ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <!--Metrics shown on overlay-->
                        <ComboBox  Grid.Row="1" Grid.Column="0" Width="120" materialDesign:HintAssist.Hint="Second metric" 
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="330" materialDesign:ComboBoxAssist.ClassicMode="True"
					  ItemsSource="{Binding SecondMetricItems}" SelectedItem="{Binding SelectedSecondMetric}"
                      ToolTip="Second metric shown in history entries">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <ComboBox Grid.Row="1" Grid.Column="1" Width="120" materialDesign:HintAssist.Hint="Third metric"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="360" materialDesign:ComboBoxAssist.ClassicMode="True"
					  ItemsSource="{Binding ThirdMetricItems}" SelectedItem="{Binding SelectedThirdMetric}"
                      ToolTip="Third metric shown in history entries">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                    <!--Aggregation of run history toogle-->
                    <StackPanel Margin="0 -20 0 0" Grid.Row="23" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <TextBlock Text="Aggregation of run history" Margin="5"/>
                        <ToggleButton IsChecked="{Binding UseAggregation}" Style="{StaticResource MaterialDesignSwitchToggleButton}" IsEnabled="{Binding UseRunHistory}" 
                                  ToolTipService.ShowDuration="25000">
                            <ToggleButton.ToolTip>
                                <ToolTip MaxWidth="350">
                                    <TextBlock 
                             Text="Once the run history is full, combines its frametime data to a single record file and shows it below the run history.
                                &#10;&#10;This is NOT the same as calculating average parameters from multiple single record files. It simulates running the same scene multiple times in one single benchmark. 
                                Performance parameters are calculated using all of the frametime data." 
                             TextWrapping="Wrap"/>
                                </ToolTip>
                            </ToggleButton.ToolTip>
                        </ToggleButton>
                    </StackPanel>
                    <StackPanel Margin="0 40 0 0" Grid.Row="3" Grid.ColumnSpan="2" HorizontalAlignment="Center"
                  IsEnabled="{Binding UseAggregation}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="60"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="225"/>
                                <ColumnDefinition Width="225"/>
                            </Grid.ColumnDefinitions>
                            <!--Outlier handling-->
                            <ComboBox Grid.Row="0" Grid.Column="0" materialDesign:HintAssist.Hint="Outlier handling" materialDesign:ComboBoxAssist.ClassicMode="True"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120"
					  ItemsSource="{Binding OutlierHandlingItems}" SelectedItem="{Binding SelectedOutlierHandling}" 
                              ToolTipService.ShowDuration="25000">
                                <ComboBox.ToolTip>
                                    <ToolTip MaxWidth="350">
                                        <TextBlock
                             Text="If the selected metric of a run differs more than X% from the median of all runs, the run will be marked as an outlier.
                                    &#10;&#10;Mark &amp; use&#10;All runs will be aggregated once the history is full.
                                   
                                   &#10;&#10;Mark &amp; replace&#10;Marked runs have to be replaced by additional runs.
                                   &#10;Runs will be aggregated once the history contains no more outliers."
                             TextWrapping="Wrap"/>
                                    </ToolTip>
                                </ComboBox.ToolTip>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <!--History items save option-->
                            <CheckBox Grid.Row="0" Grid.Column="1"  Width="120" IsChecked="{Binding SaveAggregationOnly}" ToolTipService.ShowDuration="25000">
                                <CheckBox.ToolTip>
                                    <ToolTip StaysOpen="True" MaxWidth="275">
                                        <TextBlock 
                             Text="If checked, the independent history items will not be saved in addition to the aggregated result." 
                                  TextWrapping="Wrap"/>
                                    </ToolTip>
                                </CheckBox.ToolTip>
                                <TextBlock Padding="5 0 0 0" TextWrapping="WrapWithOverflow">
  					     Save aggregated result only
                                </TextBlock>
                            </CheckBox>
                            <!--Outlier metric-->
                            <ComboBox Grid.Row="1" Grid.Column="0"  materialDesign:HintAssist.Hint="Outlier metric" materialDesign:ComboBoxAssist.ClassicMode="True"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120" 
					  ItemsSource="{Binding RelatedMetricItemsSource}" SelectedItem="{Binding SelectedRelatedMetric}" 
                              ToolTipService.ShowDuration="25000">
                                <ComboBox.ToolTip>
                                    <ToolTip MaxWidth="350">
                                        <TextBlock
                             Text="Metric used to determine outliers" 
                             TextWrapping="Wrap"/>
                                    </ToolTip>
                                </ComboBox.ToolTip>
                            </ComboBox>
                            <!--Outlier percentage-->
                            <ComboBox Grid.Row="1" Grid.Column="1" materialDesign:HintAssist.Hint="Outlier percentage" materialDesign:ComboBoxAssist.ClassicMode="True"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="200" Width="120" 
					  ItemsSource="{Binding OutlierPercentageItemsSource}" SelectedItem="{Binding SelectedOutlierPercentage}" 
                              ToolTipService.ShowDuration="25000">
                                <ComboBox.ToolTip>
                                    <ToolTip MaxWidth="350">
                                        <TextBlock
                             Text="The percentage the FPS of a run can differ from the median of all runs before being counted as an outlier" 
                             TextWrapping="Wrap"/>
                                    </ToolTip>
                                </ComboBox.ToolTip>
                            </ComboBox>
                        </Grid>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Overlay items options">
                <Grid HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"></RowDefinition>
                        <RowDefinition Height="200"></RowDefinition>
                        <RowDefinition Height="215"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="220"/>
                        <ColumnDefinition Width="220"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2"  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" Text="{Binding SelectedOverlayItemName}"/>
                    <Border Grid.Row="1" Grid.Column="0" Margin="5" Background="Transparent" BorderThickness=".2" BorderBrush="Black">
                        <StackPanel Margin="5" IsEnabled="{Binding OverlayItemsOptionsEnabled}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Colors and limits" FontSize="16"/>
                                <Button Grid.Row="0" Grid.Column="2" Width="20" Height="20" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        ToolTip="Reset to defaults" Command="{Binding ResetColorAndLimitDefaultsCommand}"
                                        materialDesign:RippleAssist.Feedback="#DD000000">
                                    <materialDesign:PackIcon Kind="Restore" Height="15" Width="15" />
                                </Button>
                                <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="Group color:"/>
                                <ctrls:CXColorPicker Grid.Row="1" Grid.Column="2" Width="25" Height="25" Margin="0 0 0 0" Background="#e6e6e6" SelectedColor="{Binding SelectedOverlayEntry.GroupColor, Converter={StaticResource StringColorConverter}}" 
										SelectedColorChanged="SelectedColorChanged" DisplayColorAndName="False" AvailableColorsSortingMode="HueSaturationBrightness">
                                    <ctrls:CXColorPicker.ButtonStyle>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton" xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.Wpf.Toolkit">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <Grid>
                                                                <Border Background="{TemplateBinding Background}"
																		BorderBrush="{TemplateBinding BorderBrush}"
																		BorderThickness="1"																						
																		SnapsToDevicePixels="True">
                                                                    <ContentPresenter Content="{TemplateBinding Content}"
																					  ContentTemplate="{TemplateBinding ContentTemplate}"
																					  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
																					  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																					  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                                </Border>
                                                            </Grid>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ctrls:CXColorPicker.ButtonStyle>
                                </ctrls:CXColorPicker>
                                <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Text="Standard value color:"/>
                                <ctrls:CXColorPicker Grid.Row="2" Grid.Column="2" Width="25" Height="25" Margin="0 0 0 0" Background="#e6e6e6" SelectedColor="{Binding SelectedOverlayEntry.Color, Converter={StaticResource StringColorConverter}}" 
										SelectedColorChanged="SelectedColorChanged" DisplayColorAndName="False" AvailableColorsSortingMode="HueSaturationBrightness">
                                    <ctrls:CXColorPicker.ButtonStyle>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton" xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.Wpf.Toolkit">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <Grid>
                                                                <Border Background="{TemplateBinding Background}"
																							BorderBrush="{TemplateBinding BorderBrush}"
																							BorderThickness="1"																						
																							SnapsToDevicePixels="True">
                                                                    <ContentPresenter Content="{TemplateBinding Content}"
																										  ContentTemplate="{TemplateBinding ContentTemplate}"
																										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
																										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                                </Border>
                                                            </Grid>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ctrls:CXColorPicker.ButtonStyle>
                                </ctrls:CXColorPicker>
                                <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Text="Upper limit + color:"></TextBlock>
                                <TextBox Grid.Row="3" Grid.Column="1" Width="40" VerticalAlignment="Center" PreviewKeyDown="LostFocus_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" 
                                         ToolTip="Clear this box to deactivate limit"
                                         Text="{Binding SelectedOverlayEntry.UpperLimitValue, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding SelectedOverlayEntry.IsNumeric}">
                                </TextBox>
                                <ctrls:CXColorPicker Grid.Row="3" Grid.Column="2" Width="25" Height="25" Margin="0 0 0 0" Background="#e6e6e6" SelectedColor="{Binding SelectedOverlayEntry.UpperLimitColor, Converter={StaticResource StringColorConverter}}" 
										          SelectedColorChanged="SelectedColorChanged" DisplayColorAndName="False" AvailableColorsSortingMode="HueSaturationBrightness"
                                                  IsEnabled="{Binding SelectedOverlayEntry.IsNumeric}">
                                    <ctrls:CXColorPicker.ButtonStyle>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton" xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.Wpf.Toolkit">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <Grid>
                                                                <Border Background="{TemplateBinding Background}"
																							BorderBrush="{TemplateBinding BorderBrush}"
																							BorderThickness="1"																						
																							SnapsToDevicePixels="True">
                                                                    <ContentPresenter Content="{TemplateBinding Content}"
																										  ContentTemplate="{TemplateBinding ContentTemplate}"
																										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
																										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                                </Border>
                                                            </Grid>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ctrls:CXColorPicker.ButtonStyle>
                                </ctrls:CXColorPicker>
                                <TextBlock Grid.Row="4" Grid.Column="0"  VerticalAlignment="Center" Text="Lower limit + color:"></TextBlock>
                                <TextBox Grid.Row="4" Grid.Column="1" Width="40" VerticalAlignment="Center" PreviewKeyDown="LostFocus_PreviewKeyDown" PreviewTextInput="NumberValidationTextBox" 
                                         ToolTip="Clear this box to deactivate limit"
                                         Text="{Binding SelectedOverlayEntry.LowerLimitValue, UpdateSourceTrigger=LostFocus}"
                                         IsEnabled="{Binding SelectedOverlayEntry.IsNumeric}">
                                </TextBox>
                                <ctrls:CXColorPicker Grid.Row="4" Grid.Column="2" Width="25" Height="25" Margin="0 0 0 0" Background="#e6e6e6" SelectedColor="{Binding SelectedOverlayEntry.LowerLimitColor, Converter={StaticResource StringColorConverter}}" 
										          SelectedColorChanged="SelectedColorChanged" DisplayColorAndName="False" AvailableColorsSortingMode="HueSaturationBrightness"
                                                  IsEnabled="{Binding SelectedOverlayEntry.IsNumeric}">
                                    <ctrls:CXColorPicker.ButtonStyle>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton" xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.Wpf.Toolkit">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <Grid>
                                                                <Border Background="{TemplateBinding Background}"
																							BorderBrush="{TemplateBinding BorderBrush}"
																							BorderThickness="1"																						
																							SnapsToDevicePixels="True">
                                                                    <ContentPresenter Content="{TemplateBinding Content}"
																										  ContentTemplate="{TemplateBinding ContentTemplate}"
																										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
																										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                                </Border>
                                                            </Grid>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ctrls:CXColorPicker.ButtonStyle>
                                </ctrls:CXColorPicker>
                            </Grid>
                        </StackPanel>
                    </Border>
                    <!-- Format options -->
                    <Border Grid.Row="1" Grid.Column="1" Margin="5" Background="Transparent" BorderThickness=".2" BorderBrush="Black">
                        <StackPanel Margin="5" IsEnabled="{Binding OverlayItemsOptionsEnabled}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="130"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Format options" FontSize="16"/>
                                <TextBlock Grid.Row="1" Grid.Column="0"  VerticalAlignment="Center" Text="Group name font size"></TextBlock>
                                <TextBox Grid.Row="1" Grid.Column="1" Width="25" VerticalAlignment="Center" PreviewKeyDown="LostFocus_PreviewKeyDown"
                                     Text="{Binding SelectedOverlayEntry.GroupFontSize, UpdateSourceTrigger=LostFocus}">
                                </TextBox>
                                <Label Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Content="%"/>
                                <TextBlock Grid.Row="2" Grid.Column="0"  VerticalAlignment="Center" Text="Value font size"></TextBlock>
                                <TextBox Grid.Row="2" Grid.Column="1" Width="25" VerticalAlignment="Center" PreviewKeyDown="LostFocus_PreviewKeyDown"
                                     Text="{Binding SelectedOverlayEntry.ValueFontSize, UpdateSourceTrigger=LostFocus}">
                                </TextBox>
                                <Label Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" Content="%"/>
                            </Grid>
                        </StackPanel>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="0" Margin="5" Background="Transparent" BorderThickness=".2" BorderBrush="Black">
                        <DataGrid x:Name="SeparatorDataGrid" Background="#F5F5F5" FontSize="11"
					              SelectedIndex="{Binding Path=OverlaySubModelGroupSeparating.SelectedOverlayGroupIndex}" 
                                  ItemsSource="{Binding Path=OverlaySubModelGroupSeparating.OverlayGroupNameSeparatorEntries}"
					              CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False"
					              materialDesign:DataGridAssist.CellPadding="13 3 0 0" materialDesign:DataGridAssist.ColumnHeaderPadding="8" IsSynchronizedWithCurrentItem="False"
					              ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True">
                            <DataGrid.Resources>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="DataGrid.Height" Value="25" />
                                </Style>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="DataGrid.Height" Value="25" />
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding GroupName, Mode=OneWay}"
                                            Header="Group name"
                                            IsReadOnly="True"/>
                                <DataGridTextColumn Binding="{Binding GroupSeparators, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                            Header="Separators"
                                            IsReadOnly="False"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="1" Margin="5" Background="Transparent" BorderThickness=".2" BorderBrush="Black">
                        <Grid IsEnabled="{Binding OverlayItemsOptionsEnabled}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="40"></RowDefinition>
                                <RowDefinition Height="20"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                                <RowDefinition Height="20"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Margin="5" HorizontalAlignment="Center" Text="Apply to multiple entries" Width="180" 
                                       TextWrapping="Wrap" TextAlignment="Center" FontSize="16">
                            </TextBlock>
                            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                                <CheckBox IsChecked="{Binding Checkboxes.Colors}" Margin="5">
                                    <TextBlock>Colors</TextBlock>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding Checkboxes.Limits}" Margin="5">
                                    <TextBlock>Limits</TextBlock>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding Checkboxes.Format}" Margin="5">
                                    <TextBlock>Format</TextBlock>
                                </CheckBox>
                            </StackPanel>
                            <TextBlock Grid.Row="2"  Text="Group name" TextAlignment="Left" Margin="10 5 0 0">
                            </TextBlock>
                            <StackPanel Grid.Row="3" Margin="10 0 0 0" Orientation="Horizontal" VerticalAlignment="Center">
                                <Button Width="28" Height="28" Margin="5 0 10 0" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        IsEnabled="{Binding SetGroupButtonEnabled}" Command="{Binding SetFormatForGroupNameCommand}" ToolTip="Set selected variables for all entries with this group name"
                                        materialDesign:RippleAssist.Feedback="#DD000000">
                                    <materialDesign:PackIcon Kind="BallotRecountOutline" Height="22" Width="22" />
                                </Button>
                                <TextBlock Margin="0 7 0 0" Text="{Binding SelectedOverlayItemGroupName}" Width="140" TextAlignment="Left" TextWrapping="Wrap" FontWeight="Bold"/>
                            </StackPanel>
                            <TextBlock Grid.Row="4" TextAlignment="Left" Text="Sensor type" Margin="10 5 0 0">
                            </TextBlock>
                            <StackPanel Grid.Row="5" Margin="10 0 0 0" Orientation="Horizontal" VerticalAlignment="Center">
                                <Button Width="28" Height="28" Margin="5 0 10 0" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        IsEnabled="{Binding SetSensorTypeButtonEnabled}" Command="{Binding SetFormatForSensorTypeCommand}" ToolTip="Set selected variables for all entries with this sensor type"
                                        materialDesign:RippleAssist.Feedback="#DD000000">
                                    <materialDesign:PackIcon Kind="BallotRecountOutline" Height="22" Width="22" />
                                </Button>
                                <TextBlock Margin="0 7 0 0" Text="{Binding SelectedOverlayItemSensorType}" Width="140" TextAlignment="Left" TextWrapping="Wrap" FontWeight="Bold"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>