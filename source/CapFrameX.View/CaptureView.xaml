<UserControl x:Class="CapFrameX.View.CaptureView"
			 x:Name="CaptureViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
             xmlns:validation ="clr-namespace:CapFrameX.MVVM.Validation;assembly=CapFrameX.MVVM"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
			 xmlns:prism="http://prismlibrary.com/"	
             xmlns:local="clr-namespace:CapFrameX.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
			 Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{StaticResource MaterialDesignFont}"
             prism:ViewModelLocator.AutoWireViewModel="True">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.GridSplitter.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed"/>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="600"></RowDefinition>
        </Grid.RowDefinitions>
		<Expander HorizontalAlignment="Stretch" Grid.Row="0" ExpandDirection="Down" Margin="0">
			<Expander.Header>
				<TextBlock Text= "Infobox" HorizontalAlignment="Left"/>
			</Expander.Header>
			<ScrollViewer MaxHeight="200"  VerticalScrollBarVisibility="Visible" Margin="20 10 20 10" >
				<TextBlock Text="{Binding LoggerOutput}"/>
			</ScrollViewer>
		</Expander>
		<DockPanel Grid.Row="1">
			<Grid DockPanel.Dock="Top" HorizontalAlignment="Center">
				<Grid HorizontalAlignment="Center">
					<DockPanel>
						<Grid DockPanel.Dock="Top" >
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="330"/>
								<ColumnDefinition Width="330"/>
							</Grid.ColumnDefinitions>
							<Border Grid.Column="0" Margin="0 0 20 0" Background="Transparent" BorderThickness="0.2" BorderBrush="Black">
								<Grid Margin="0 20 0 20">
									<StackPanel Margin="0" Orientation="Vertical" Width="250">
										<StackPanel Orientation="Horizontal">
											<TextBlock Style="{StaticResource MaterialDesignTitleTextBlock}">Running processes</TextBlock>
											<Button Padding="0 0 25 4" Width="64" Height="24" Foreground="Black" BorderThickness="0" Background="Transparent" VerticalAlignment="Top"
													HorizontalAlignment="Center" Command="{Binding ResetCaptureProcessCommand}" ToolTip="Reset selected process"
													IsEnabled="{Binding IsAddToIgnoreListButtonActive}">
												<materialDesign:PackIcon Kind="FilterRemove" Width="22" Height="22"/>
											</Button>
										</StackPanel>
										<Border Margin="0 10 0 0" Background="#F5F5F5" BorderThickness="0.1" BorderBrush="Black">
											<ListView IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding ProcessesToCapture}" SelectedItem="{Binding SelectedProcessToCapture}"
													  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" Height="150" Width="250"
													  IsEnabled="{Binding IsAddToIgnoreListButtonActive}">
											</ListView>
										</Border>
										<Button Margin="0 10 0 0" HorizontalAlignment="Right" Width="120" Height="45" 
												Command="{Binding AddToIgonreListCommand}" IsEnabled="{Binding IsAddToIgnoreListButtonActive}">
											<TextBlock Text="Move to ignore list" TextWrapping="Wrap" TextAlignment="Center"/>
										</Button>
									</StackPanel>
								</Grid>
							</Border>
							<Border Grid.Column="1" Margin="20 0 0 0" Background="Transparent" BorderThickness="0.2" BorderBrush="Black">
								<Grid Margin="0 20 0 20">
									<StackPanel  Orientation="Vertical" Width="250">
										<TextBlock Style="{StaticResource MaterialDesignTitleTextBlock}">Process ignore list</TextBlock>
										<Border Margin="0 10 0 0" Background="#F5F5F5" BorderThickness="0.1" BorderBrush="Black">
											<ListView IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding ProcessesToIgnore}" SelectedItem="{Binding SelectedProcessToIgnore}"
										ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" Height="150" Width="250">
											</ListView>
										</Border>
										<Button Margin="0 10 0 0" HorizontalAlignment="Right" Width="120" Height="45"
												Command="{Binding AddToProcessListCommand}" IsEnabled="{Binding IsAddToIgnoreListButtonActive}">
											<TextBlock Text="Remove from ignore list" TextWrapping="Wrap" TextAlignment="Center"/>
										</Button>
									</StackPanel>
								</Grid>
							</Border>
						</Grid>
						<TextBlock DockPanel.Dock="Bottom" Grid.Column="0" Grid.ColumnSpan="2" TextAlignment="Center" Margin="0 20 0 0" Text="{Binding CaptureStateInfo}" HorizontalAlignment="Center" FontSize="18" Style="{StaticResource MaterialDesignCaptionTextBlock}" />
					</DockPanel>
				</Grid>
			</Grid>
			<Grid x:Name="HotkeyTextBox" DockPanel.Dock="Bottom" HorizontalAlignment="Center">
				<Grid.RowDefinitions>
					<RowDefinition Height="80"/>
					<RowDefinition Height="30"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*"/>
					<ColumnDefinition Width="1*"/>
					<ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
				</Grid.ColumnDefinitions>
                <TextBox Grid.Row="0" Grid.Column="0" Width="132" wpf:HintAssist.Hint="Capture hotkey" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
						 Margin="0" FontSize="14"
						 IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="CaptureHotkeyTextBox_PreviewKeyDown"
						 ToolTip="combinable with Ctrl/Shift/Alt">
                    <Binding  Path="CaptureHotkey"
							  ElementName="CaptureViewControl"
							  Mode="OneWay"
							  TargetNullValue="&lt; not set &gt;">
                        <Binding.ValidationRules>
                            <validation:HotkeyValidationRule
                          ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <TextBox Grid.Row="0" Grid.Column="1" Width="132" wpf:HintAssist.Hint="Capture time [s]" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
					 Margin="50 0 0 0" FontSize="14" Text="{Binding CaptureTimeString, UpdateSourceTrigger=PropertyChanged}"
                     PreviewMouseDown="TextBox_PreviewMouseDown" PreviewKeyDown="CaptureTimeTextBox_PreviewKeyDown" MouseLeave="TextBox_MouseLeave" ToolTip="0 = no limit"/>
                <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal">
                    <ComboBox Margin="50 40 0 0" Grid.Row="0" Grid.Column="2"
					  materialDesign:ComboBoxAssist.ClassicMode="True"
					  materialDesign:HintAssist.Hint="Sensor logging [ms]"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="200" Width="110"
					  MouseLeave="LoggingPeriodComboBox_MouseLeave" FontSize="14"
					  ItemsSource="{Binding Path=LoggingPeriodItemsSource}">
                        <ComboBox.Text>
                            <Binding Path="LoggingPeriod"
							 Mode="TwoWay"
							 UpdateSourceTrigger="PropertyChanged">
                            </Binding>
                        </ComboBox.Text>
                        <ComboBox.ToolTip>
                            Polling period [ms] for sensor logging
                        </ComboBox.ToolTip>
                    </ComboBox>
                    <ToggleButton  Margin="10 0 0 -50" Width="25" Height="25"
					  Style="{StaticResource MaterialDesignActionAccentToggleButton}"
					  IsChecked="{Binding UseSensorLogging, Mode=TwoWay}"
					  Content="{materialDesign:PackIcon Stop, Size=20}">
                        <materialDesign:ToggleButtonAssist.OnContent>
                            <materialDesign:PackIcon Kind="Play"/>
                        </materialDesign:ToggleButtonAssist.OnContent>
                        <ToggleButton.ToolTip>
                            <ToolTip MaxWidth="250">
                                <TextBlock Text="Logs various sensor data like CPU and GPU load/power for analysis"                               
										   TextWrapping="Wrap"/>
                            </ToolTip>
                        </ToggleButton.ToolTip>
                    </ToggleButton>
                </StackPanel>
                <ComboBox Grid.Row="0" Grid.Column="3" Width="132" Margin="50 0 0 0" materialDesign:HintAssist.Hint="Hotkey sound mode"
						materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="200" FontSize="14" 
						ItemsSource="{Binding SoundModes}" HorizontalAlignment="Right" VerticalAlignment="Bottom">
					<ComboBox.Text>
						<Binding Path="SelectedSoundMode"
								 Mode="TwoWay"
								 UpdateSourceTrigger="PropertyChanged">
						</Binding>
					</ComboBox.Text>
				</ComboBox>
                <Grid Grid.Row="1" Grid.Column="3" Visibility="{Binding ShowVolumeController, Converter={StaticResource FalseToCollapsedConverter}}" Margin="50 10 0 0" Width="140" HorizontalAlignment="Right">
                    <materialDesign:PackIcon Kind="VolumeMedium"/>
                    <Slider HorizontalAlignment="Center"
							Minimum="0" 
							Maximum="100" 
							ToolTip="Sound level control"
							Value="{Binding SliderSoundLevel}"
							Width="100" Thumb.DragCompleted="Slider_DragCompleted"/>
                    <TextBlock HorizontalAlignment="Right" Text="{Binding SliderSoundLevel}" Background="Transparent"/>
                </Grid>
            </Grid>
		</DockPanel>
	</Grid>
</UserControl>
