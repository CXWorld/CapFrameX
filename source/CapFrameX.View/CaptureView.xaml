<UserControl x:Class="CapFrameX.View.CaptureView"
			 x:Name="CaptureViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
             xmlns:validation ="clr-namespace:CapFrameX.MVVM.Validation;assembly=CapFrameX.MVVM"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
			 xmlns:prism="http://prismlibrary.com/"	
             xmlns:local="clr-namespace:CapFrameX.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed"/>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToVisibleConverter" TrueValue="Collapsed" FalseValue="Visible"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="600"></RowDefinition>
        </Grid.RowDefinitions>
        <Expander HorizontalAlignment="Stretch" Grid.Row="0" ExpandDirection="Down" Foreground="{DynamicResource MaterialDesignBody}">
            <Expander.Header>
                <TextBlock Text= "Infobox" HorizontalAlignment="Left"/>
            </Expander.Header>
            <ScrollViewer MaxHeight="200"  VerticalScrollBarVisibility="Visible" Margin="20 10 20 10" >
                <TextBlock Text="{Binding LoggerOutput}"/>
            </ScrollViewer>
        </Expander>
        <DockPanel Grid.Row="1">
            <Grid DockPanel.Dock="Top" HorizontalAlignment="Center">
                <Grid HorizontalAlignment="Center">
                    <DockPanel>
                        <Grid DockPanel.Dock="Top" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="330"/>
                                <ColumnDefinition Width="330"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" Margin="0 0 20 0" BorderThickness="0.2" BorderBrush="{DynamicResource MaterialDesignBody}">
                                <Grid Margin="0 20 0 20">
                                    <StackPanel Orientation="Vertical" Width="250">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}">Running processes</TextBlock>
                                            <Button Margin="20 0 0 0" Padding="0" Width="24" Height="24" BorderThickness="0"
													Command="{Binding ResetPresentMonCommand}" ToolTip="Reset and rescan processes"
													IsEnabled="{Binding AreButtonsActive}" materialDesign:RippleAssist.Feedback="#DD000000">
                                                <materialDesign:PackIcon Kind="Autorenew" Width="22" Height="22"/>
                                            </Button>
                                        </StackPanel>
                                        <Border Margin="0 10 0 0" BorderThickness="0.1" BorderBrush="{DynamicResource MaterialDesignBody}"
                                                Background="{DynamicResource MaterialDesignTextFieldBoxBackground}">
                                            <ListView IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding ProcessesToCapture}" SelectedItem="{Binding SelectedProcessToCapture}"
													  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" Height="150" Width="250"
													  IsEnabled="{Binding AreButtonsActive}">
                                            </ListView>
                                        </Border>
                                        <Button Margin="0 10 0 0" HorizontalAlignment="Right" Width="120" Height="45" 
												Command="{Binding AddToIgonreListCommand}" IsEnabled="{Binding AreButtonsActive}" Foreground="White">
                                            <TextBlock Text="Move to ignore list" TextWrapping="Wrap" TextAlignment="Center"/>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <Border Grid.Column="1" Margin="20 0 0 0" BorderThickness="0.2" BorderBrush="{DynamicResource MaterialDesignBody}">
                                <Grid Margin="0 25 0 20">
                                    <StackPanel  Orientation="Vertical" Width="250">
                                        <!--Style="{StaticResource MaterialDesignTitleTextBlock}"-->
                                        <TextBlock Margin="0 0 0 5" Foreground="{DynamicResource MaterialDesignBody}">Process ignore list</TextBlock>
                                        <Border Margin="0 10 0 0" BorderThickness="0.1" BorderBrush="{DynamicResource MaterialDesignBody}"
                                                Background="{DynamicResource MaterialDesignTextFieldBoxBackground}">
                                            <ListView IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding ProcessesToIgnore}" SelectedItem="{Binding SelectedProcessToIgnore}"
										              ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" Height="150" Width="250">
                                            </ListView>
                                        </Border>
                                        <Button Margin="0 10 0 0" HorizontalAlignment="Right" Width="120" Height="45"
												Command="{Binding AddToProcessListCommand}" IsEnabled="{Binding AreButtonsActive}" Foreground="White">
                                            <TextBlock Text="Remove from ignore list" TextWrapping="Wrap" TextAlignment="Center"/>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Grid>
                        <TextBlock DockPanel.Dock="Bottom" Grid.Column="0" Grid.ColumnSpan="2" TextAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"
                                   Margin="0 20 0 0" Text="{Binding CaptureStateInfo}" HorizontalAlignment="Center" FontSize="18" Style="{StaticResource MaterialDesignCaptionTextBlock}" />
                    </DockPanel>
                </Grid>
            </Grid>
            <Grid x:Name="HotkeyTextBox" Margin="0 30 0 0" DockPanel.Dock="Bottom" HorizontalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="45"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Row="0" Grid.Column="0" Width="132" wpf:HintAssist.Hint="Capture hotkey" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
						 Margin="0" FontSize="14" Foreground="{DynamicResource MaterialDesignBody}" wpf:HintAssist.HintOpacity=".8"
						 IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="CaptureHotkeyTextBox_PreviewKeyDown"
						 ToolTip="Hotkey combinable with up to two modifier keys (Ctrl, Shift or Alt)">
                    <Binding Path="CaptureHotkey"
							  ElementName="CaptureViewControl"
							  Mode="OneWay"
							  TargetNullValue="&lt; not set &gt;">
                        <Binding.ValidationRules>
                            <validation:HotkeyValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                
                <TextBox Grid.Row="0" Grid.Column="1" Width="132" wpf:HintAssist.Hint="Capture time [s]" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
					 Margin="50 0 0 0" FontSize="14" Text="{Binding CaptureTimeString, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding AreButtonsActive}"
                     PreviewMouseDown="TextBox_PreviewMouseDown" PreviewKeyDown="CaptureTimeTextBox_PreviewKeyDown" MouseLeave="TextBox_MouseLeave" ToolTip="0 = no limit"
                     PreviewTextInput="NumberValidationTextBox" Foreground="{DynamicResource MaterialDesignBody}" wpf:HintAssist.HintOpacity=".8"/>
                
                <ComboBox Grid.Row="0" Grid.Column="3" Width="132" Height="40" materialDesign:HintAssist.Hint="Hotkey sound" Style="{StaticResource MaterialDesignComboBox}"
						  MaxDropDownHeight="200" FontSize="14" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.HintOpacity=".8"
						  ItemsSource="{Binding SoundModes}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Foreground="{DynamicResource MaterialDesignBody}">
                    <ComboBox.Text>
                        <Binding Path="SelectedSoundMode"
								 Mode="TwoWay"
								 UpdateSourceTrigger="PropertyChanged">
                        </Binding>
                    </ComboBox.Text>
                </ComboBox>
                
                <Grid Grid.Row="1" Grid.Column="3" Visibility="{Binding ShowVolumeController, Converter={StaticResource FalseToCollapsedConverter}}" Margin="50 10 0 0" Width="140" HorizontalAlignment="Right">
                    <materialDesign:PackIcon Kind="VolumeMedium" Foreground="{DynamicResource MaterialDesignBody}"/>
                    <Slider HorizontalAlignment="Center"
							Minimum="0" 
							Maximum="100" 
							ToolTip="Sound level control"
							Value="{Binding SliderSoundLevel}"
							Width="100" Thumb.DragCompleted="Slider_DragCompleted" />
                    <TextBlock HorizontalAlignment="Right" Text="{Binding SliderSoundLevel}" Foreground="{DynamicResource MaterialDesignBody}"/>
                </Grid>
            </Grid>
        </DockPanel>
    </Grid>
</UserControl>
