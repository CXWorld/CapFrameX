<UserControl x:Class="CapFrameX.View.CaptureView"
			 x:Name="CaptureViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
             xmlns:validation ="clr-namespace:CapFrameX.MVVM.Validation;assembly=CapFrameX.MVVM"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
			 xmlns:prism="http://prismlibrary.com/"	
             xmlns:log="clr-namespace:CapFrameX.Data.Logging;assembly=CapFrameX.Data"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="{DynamicResource MaterialDesignBackground}"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed"/>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToVisibleConverter" TrueValue="Collapsed" FalseValue="Visible"/>
            <mvvm:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>

            <Style TargetType="ItemsControl" x:Key="LogViewerStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ScrollViewer CanContentScroll="True">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MaterialDesignNavigationRailTabItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="25" />
            </Style>

            <DataTemplate DataType="{x:Type log:LogEntry}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>

                    <TextBlock Text="{Binding MessageInfo}" Grid.Row="0" Grid.Column="0" Foreground="{DynamicResource MaterialDesignBody}"
                       FontWeight="Bold" FontSize="11"  Margin="5,3,5,0"/>

                    <TextBlock Text="{Binding Message}" Grid.Row="1" Grid.ColumnSpan="3" Foreground="{DynamicResource MaterialDesignBody}"
                       TextWrapping="Wrap" FontSize="11"  Margin="5,0,5,5"/>
                </Grid>
            </DataTemplate>

            <!--<DataTemplate DataType="{x:Type log:CollapsibleLogEntry}">
                <Grid IsSharedSizeScope="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="Date" Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="{Binding MessageInfo}" Grid.Column="0" Foreground="{DynamicResource MaterialDesignBody}"
                       FontWeight="Bold" FontSize="11"  Margin="5,3,5,0"/>

                    <TextBlock Text="{Binding Message}" Grid.Column="2" Foreground="{DynamicResource MaterialDesignBody}"
                       TextWrapping="Wrap" FontSize="11"  Margin="5,0,5,5"/>

                    <ToggleButton x:Name="Expander" Grid.Row="1" Grid.Column="0"
                          VerticalAlignment="Top" Content="+" HorizontalAlignment="Right"/>

                    <ItemsControl ItemsSource="{Binding Contents}" Style="{StaticResource LogViewerStyle}"
                          Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                          x:Name="Contents" Visibility="Collapsed"/>

                </Grid>
                <DataTemplate.Triggers>
                    <Trigger SourceName="Expander" Property="IsChecked" Value="True">
                        <Setter TargetName="Contents" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="Expander" Property="Content" Value="-"/>
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>-->
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid VerticalAlignment="Top" HorizontalAlignment="Center">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"></ColumnDefinition>
                <ColumnDefinition Width="4*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" Margin="20 40 0 0">
                <Grid DockPanel.Dock="Top" HorizontalAlignment="Center">
                    <Grid HorizontalAlignment="Center">
                        <DockPanel>
                            <Grid DockPanel.Dock="Top" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="260"/>
                                    <ColumnDefinition Width="260"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Margin="0 0 20 0" BorderThickness="0.2" BorderBrush="{DynamicResource MaterialDesignBody}">
                                    <Grid Margin="0 20 0 20">
                                        <StackPanel Orientation="Vertical" Width="190">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}">Running processes</TextBlock>
                                                <Button Margin="20 0 0 0" Padding="0" Width="24" Height="24" BorderThickness="0" Background="{DynamicResource MaterialDesignToolBackground}"
													Command="{Binding ResetPresentMonCommand}" ToolTip="Reset and rescan processes"
													IsEnabled="{Binding AreButtonsActive}" materialDesign:RippleAssist.Feedback="#DD000000">
                                                    <materialDesign:PackIcon Kind="Autorenew" Width="22" Height="22"/>
                                                </Button>
                                            </StackPanel>
                                            <Border Margin="0 10 0 0" BorderThickness="0.1" BorderBrush="{DynamicResource MaterialDesignBody}"
                                                Background="{DynamicResource MaterialDesignTextFieldBoxBackground}">
                                                <ListView IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding ProcessesToCapture}" SelectedItem="{Binding SelectedProcessToCapture}"
													  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" Height="150" Width="190"
													  IsEnabled="{Binding AreButtonsActive}">
                                                </ListView>
                                            </Border>
                                            <Button Margin="0 10 0 0" HorizontalAlignment="Right" BorderThickness="0" Width="120" Height="45" 
												Command="{Binding AddToIgonreListCommand}" IsEnabled="{Binding AreButtonsActive}" Foreground="White" Background="{DynamicResource MaterialDesignToolBackground}">
                                                <TextBlock Text="Move to ignore list" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <Border Grid.Column="1" Margin="20 0 0 0" BorderThickness="0.2" BorderBrush="{DynamicResource MaterialDesignBody}">
                                    <Grid Margin="0 25 0 20">
                                        <StackPanel  Orientation="Vertical" Width="190">
                                            <TextBlock Margin="0 0 0 5" Foreground="{DynamicResource MaterialDesignBody}">Process ignore list</TextBlock>
                                            <Border Margin="0 10 0 0" BorderThickness="0.1" BorderBrush="{DynamicResource MaterialDesignBody}"
                                                Background="{DynamicResource MaterialDesignTextFieldBoxBackground}">
                                                <ListView IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding ProcessesToIgnore}" SelectedItem="{Binding SelectedProcessToIgnore}"
										              ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" Height="150" Width="190">
                                                </ListView>
                                            </Border>
                                            <Button Margin="0 10 0 0" HorizontalAlignment="Right" BorderThickness="0" Width="120" Height="45"
												Command="{Binding AddToProcessListCommand}" IsEnabled="{Binding AreButtonsActive}" Foreground="White" Background="{DynamicResource MaterialDesignToolBackground}">
                                                <TextBlock Text="Remove from ignore list" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Grid>
                            <TextBlock DockPanel.Dock="Bottom" Grid.Column="0" Grid.ColumnSpan="2" TextAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"
                                   Margin="0 20 0 0" Text="{Binding CaptureStateInfo}" HorizontalAlignment="Center" FontSize="16" Style="{StaticResource MaterialDesignCaptionTextBlock}" />
                        </DockPanel>
                    </Grid>
                </Grid>
                <Grid x:Name="HotkeyTextBox" Margin="0 30 0 0" DockPanel.Dock="Bottom" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="45"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Row="0" Grid.Column="0" Width="110" wpf:HintAssist.Hint="Capture hotkey" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
						 Margin="0" FontSize="14" Foreground="{DynamicResource MaterialDesignBody}" wpf:HintAssist.HintOpacity=".8"
						 IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="CaptureHotkeyTextBox_PreviewKeyDown"
						 ToolTip="Hotkey combinable with up to two modifier keys (Ctrl, Shift or Alt)">
                        <Binding Path="CaptureHotkey"
							  ElementName="CaptureViewControl"
							  Mode="OneWay"
							  TargetNullValue="&lt; not set &gt;">
                            <Binding.ValidationRules>
                                <validation:HotkeyValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>

                    <TextBox Grid.Row="0" Grid.Column="1" Width="110" wpf:HintAssist.Hint="Capture time [s]" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
					 Margin="30 0 0 0" FontSize="14" Text="{Binding CaptureTimeString, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding AreButtonsActive}"
                     PreviewMouseDown="TextBox_PreviewMouseDown" PreviewKeyDown="TextBox_PreviewKeyDown" MouseLeave="TextBox_MouseLeave" ToolTip="0 = no limit"
                     PreviewTextInput="NumberValidationTextBox" Foreground="{DynamicResource MaterialDesignBody}" wpf:HintAssist.HintOpacity=".8"/>
                    <StackPanel Grid.Row="1" Grid.Column="1" Margin="30 0 0 0" Orientation="Horizontal" HorizontalAlignment="Left" ToolTipService.ShowDuration="25000" IsEnabled="{Binding AreButtonsActive}">
                        <TextBlock Text="Global time" VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"/>
                        <ToggleButton HorizontalAlignment="Right" Margin="5 0 -30 0" IsChecked="{Binding UseGlobalCaptureTime}"></ToggleButton>
                        <StackPanel.ToolTip >
                            <TextBlock Width="280" Text="Uses the same capture time for all processes.&#xA;Unchecked, when detecting a process this box will be filled with the last capture time used for that process.
                                       &#xA;&#xA;Times for specific processes are only saved when not using global time (toggle off)."
                                       TextWrapping="Wrap"></TextBlock>
                        </StackPanel.ToolTip>
                    </StackPanel>

                    <TextBox Grid.Row="0" Grid.Column="2" Width="110" wpf:HintAssist.Hint="Capture delay [s]" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
					 Margin="30 0 0 0" FontSize="14" Text="{Binding CaptureDelayString, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding AreButtonsActive}"
                     PreviewMouseDown="TextBox_PreviewMouseDown" PreviewKeyDown="TextBox_PreviewKeyDown" MouseLeave="TextBox_MouseLeave" ToolTip="0 = no delay"
                     PreviewTextInput="NumberValidationTextBox" Foreground="{DynamicResource MaterialDesignBody}" wpf:HintAssist.HintOpacity=".8"/>

                    <ComboBox Grid.Row="0" Grid.Column="3" Width="102" Height="40" materialDesign:HintAssist.Hint="Hotkey sound" Style="{StaticResource MaterialDesignComboBox}"                          
						  Margin="30 0 0 0" MaxDropDownHeight="200" FontSize="14" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.HintOpacity=".8"
						  ItemsSource="{Binding SoundModes}" HorizontalAlignment="Left" HorizontalContentAlignment="Left" VerticalAlignment="Bottom" Foreground="{DynamicResource MaterialDesignBody}">
                        <ComboBox.Text>
                            <Binding Path="SelectedSoundMode"
								 Mode="TwoWay"
								 UpdateSourceTrigger="PropertyChanged">
                            </Binding>
                        </ComboBox.Text>
                    </ComboBox>

                    <Grid Grid.Row="1" Grid.Column="3" Margin="20 10 -5 0" Width="110" Visibility="{Binding ShowVolumeController, Converter={StaticResource FalseToCollapsedConverter}}">
                        <materialDesign:PackIcon Kind="VolumeMedium" Foreground="{DynamicResource MaterialDesignBody}"/>
                        <Slider HorizontalAlignment="Center"
							Minimum="0" 
							Maximum="100" 
							ToolTip="Sound level control"
							Value="{Binding SliderSoundLevel}"
							Width="65" Thumb.DragCompleted="Slider_DragCompleted" />
                        <TextBlock HorizontalAlignment="Right" Text="{Binding SliderSoundLevel}" Foreground="{DynamicResource MaterialDesignBody}"/>
                    </Grid>
                </Grid>
            </DockPanel>
            <TabControl Grid.Column="1" Margin="20 14 20 20" Background="Transparent" BorderThickness="0.3" BorderBrush="{DynamicResource MaterialDesignBody}">
                <TabItem Width="120" Foreground="{DynamicResource MaterialDesignBody}">
                    <TabItem.Header>
                        <Label FontSize="12">Capture Logger</Label>
                    </TabItem.Header>
                    <StackPanel Grid.Column="1" Width="380" Height="460">
                        <Grid Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" Height="415" VerticalAlignment="Top">
                            <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Capture service logger output..." FontSize="14" Margin="10 10 0 0" 
                       Foreground="{DynamicResource MaterialDesignBody}" Visibility="{Binding IsLoggerOutputEmpty, Converter={StaticResource FalseToCollapsedConverter}}"></TextBlock>
                            <ItemsControl ItemsSource="{Binding LoggerOutput}" Style="{StaticResource LogViewerStyle}">
                                <ItemsControl.Template>
                                    <ControlTemplate>
                                        <ScrollViewer ScrollChanged="ScrollViewer_ScrollChanged" CanContentScroll="True">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel IsItemsHost="True"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Height="50">
                            <Button HorizontalAlignment="Left" Margin="0 0 10 0" Width="25" Height="25" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                            Command="{Binding ClearLogCommand}" materialDesign:RippleAssist.Feedback="#DD000000">
                                <materialDesign:PackIcon Kind="Update"  Height="18" Width="18" />
                                <Button.ToolTip>
                                    <ToolTip>
                                        <TextBlock Text="Clear logger output">
                                        </TextBlock>
                                    </ToolTip>
                                </Button.ToolTip>
                            </Button>
                            <StackPanel Margin="25 0 0 0" Orientation="Horizontal">
                                <TextBlock Text="Message filter" VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"/>
                                <materialDesign:PopupBox StaysOpen="True" Foreground="{DynamicResource MaterialDesignBody}">
                                    <materialDesign:Card  Margin="0 0 0 -10">
                                        <StackPanel>
                                            <Grid Margin="8 8 8 8">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="30" />
                                                    <RowDefinition Height="30" />
                                                    <RowDefinition Height="30" />
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="90"/>
                                                    <ColumnDefinition Width="30"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Basic Info"></TextBlock>
                                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Advanced Info"></TextBlock>
                                                <TextBlock Grid.Row="2" Grid.Column="0" Text="Errors"></TextBlock>

                                                <CheckBox Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" IsChecked="{Binding ShowBasicInfo}"></CheckBox>
                                                <CheckBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" IsChecked="{Binding ShowAdvancedInfo}"></CheckBox>
                                                <CheckBox Grid.Row="2" Grid.Column="1" VerticalAlignment="Top" IsChecked="{Binding ShowErrors}"></CheckBox>
                                            </Grid>
                                        </StackPanel>
                                    </materialDesign:Card>
                                </materialDesign:PopupBox>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </TabItem>
                <TabItem Width="200" Foreground="{DynamicResource MaterialDesignBody}">
                    <TabItem.Header>
                        <Label FontSize="12">Run history and aggregation</Label>
                    </TabItem.Header>
                    <StackPanel Grid.Column="1" Width="380" Height="460">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"></RowDefinition>
                                <RowDefinition Height="140"></RowDefinition>
                                <RowDefinition Height="80"></RowDefinition>
                                <RowDefinition Height="140"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <!--Global history toogle-->
                            <StackPanel Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Vertical">
                                <TextBlock Text="Run history" Margin="5"/>
                                <ToggleButton IsChecked="{Binding UseRunHistory}" Style="{StaticResource MaterialDesignSwitchToggleButton}" 
								  ToolTipService.ShowDuration="25000">
                                    <ToggleButton.ToolTip>
                                        <ToolTip MaxWidth="250">
                                            <TextBlock Text="Saves a set number of runs into a history which can be displayed in the overlay"                               
										   TextWrapping="Wrap"/>
                                        </ToolTip>
                                    </ToggleButton.ToolTip>
                                </ToggleButton>
                            </StackPanel>
                            <!--Run controls-->
                            <Grid Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Center" IsEnabled="{Binding UseRunHistory}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"></RowDefinition>
                                    <RowDefinition Height="1*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="225"/>
                                    <ColumnDefinition Width="225"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox Grid.Row="0" Grid.Column="0" materialDesign:HintAssist.Hint="Number of runs" VerticalAlignment="Bottom" materialDesign:HintAssist.HintOpacity=".8"
					              materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120" Height="40" materialDesign:ComboBoxAssist.ClassicMode="True"
					              ItemsSource="{Binding Path=NumberOfRunsItemsSource}" ToolTipService.ShowDuration="25000">
                                    <ComboBox.ToolTip>
                                        <ToolTip StaysOpen="True" MaxWidth="275">
                                            <TextBlock Text="The number of runs written into the history.
											When not using aggregation, any additional run will replace the oldest one." 
										   TextWrapping="Wrap"/>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                    <ComboBox.Text>
                                        <Binding Path="SelectedNumberOfRuns"
							                     Mode="TwoWay"
							                     UpdateSourceTrigger="PropertyChanged">
                                        </Binding>
                                    </ComboBox.Text>
                                </ComboBox>
                                <!--Reset run history hotkey-->
                                <TextBox Grid.Row="0" Grid.Column="1" Width="120" Height="45" Margin="0 20 0 0" materialDesign:HintAssist.Hint="Reset run history" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="14"
					             IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="ResetHistoryHotkeyTextBox_PreviewKeyDown" 
					             ToolTip="Hotkey combinable with up to two modifier keys (Ctrl, Shift or Alt)" materialDesign:HintAssist.HintOpacity=".8">
                                    <Binding Path="ResetHistoryHotkey"
						             ElementName="CaptureViewControl"
						             Mode="OneWay"
						             TargetNullValue="&lt; not set &gt;">
                                        <Binding.ValidationRules>
                                            <validation:HotkeyValidationRule ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox>
                                <!--Metrics shown on overlay-->
                                <ComboBox  Grid.Row="1" Grid.Column="0" Width="120" Height="40" materialDesign:HintAssist.Hint="Second metric" materialDesign:HintAssist.HintOpacity=".8"
					              materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="330" materialDesign:ComboBoxAssist.ClassicMode="True"
					              ItemsSource="{Binding SecondMetricItems}" SelectedItem="{Binding SelectedSecondMetric}"
                                  ToolTip="Second metric shown in history entries">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <ComboBox Grid.Row="1" Grid.Column="1" Width="120" Height="40" materialDesign:HintAssist.Hint="Third metric" materialDesign:HintAssist.HintOpacity=".8"
					              materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="360" materialDesign:ComboBoxAssist.ClassicMode="True"
					              ItemsSource="{Binding ThirdMetricItems}" SelectedItem="{Binding SelectedThirdMetric}"
                                  ToolTip="Third metric shown in history entries">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </Grid>
                            <!--Aggregation of run history toogle-->
                            <StackPanel Margin="0 -20 0 0" Grid.Row="3" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Top">
                                <TextBlock Text="Aggregation of run history" Margin="5"/>
                                <ToggleButton IsChecked="{Binding UseAggregation}" Style="{StaticResource MaterialDesignSwitchToggleButton}" IsEnabled="{Binding AggregationButtonEnabled}" 
                                  ToolTipService.ShowDuration="25000">
                                    <ToggleButton.ToolTip>
                                        <ToolTip MaxWidth="350">
                                            <TextBlock 
                             Text="Once the run history is full, combines its frametime data to a single record file and shows it below the run history.
                                &#10;&#10;This is NOT the same as calculating average parameters from multiple single record files. It simulates running the same scene multiple times in one single benchmark. 
                                Performance parameters are calculated using all of the frametime data." 
                             TextWrapping="Wrap"/>
                                        </ToolTip>
                                    </ToggleButton.ToolTip>
                                </ToggleButton>
                            </StackPanel>
                            <StackPanel Margin="-30 40 0 0" Grid.Row="3" Grid.ColumnSpan="2" HorizontalAlignment="Center"
                                        IsEnabled="{Binding UseAggregation}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="50"/>
                                        <RowDefinition Height="60"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="225"/>
                                        <ColumnDefinition Width="225"/>
                                    </Grid.ColumnDefinitions>
                                    <!--Outlier handling-->
                                    <ComboBox Grid.Row="0" Grid.Column="0" materialDesign:HintAssist.Hint="Outlier handling" materialDesign:ComboBoxAssist.ClassicMode="True"
					                  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120" Height="40" materialDesign:HintAssist.HintOpacity=".8"
					                  ItemsSource="{Binding OutlierHandlingItems}" SelectedItem="{Binding SelectedOutlierHandling}" 
                                      ToolTipService.ShowDuration="25000">
                                        <ComboBox.ToolTip>
                                            <ToolTip MaxWidth="350">
                                                <TextBlock
                                                Text="If the selected metric of a run differs more than X% from the median of all runs, the run will be marked as an outlier.
                                                        &#10;&#10;Mark &amp; use&#10;All runs will be aggregated once the history is full.
                                   
                                                    &#10;&#10;Mark &amp; replace&#10;Marked runs have to be replaced by additional runs.
                                                    &#10;Runs will be aggregated once the history contains no more outliers."
                                            TextWrapping="Wrap"/>
                                            </ToolTip>
                                        </ComboBox.ToolTip>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <!--History items save option-->
                                    <CheckBox Grid.Row="0" Grid.Column="1"  Width="120" IsChecked="{Binding SaveAggregationOnly}" ToolTipService.ShowDuration="25000">
                                        <CheckBox.ToolTip>
                                            <ToolTip StaysOpen="True" MaxWidth="275">
                                                <TextBlock 
                                                Text="If checked, the independent history items will not be saved in addition to the aggregated result." 
                                                TextWrapping="Wrap"/>
                                            </ToolTip>
                                        </CheckBox.ToolTip>
                                        <TextBlock Padding="5 0 0 0" TextWrapping="WrapWithOverflow">
  					                            Save aggregated result only
                                        </TextBlock>
                                    </CheckBox>
                                    <!--Outlier metric-->
                                    <ComboBox Grid.Row="1" Grid.Column="0"  materialDesign:HintAssist.Hint="Outlier metric" materialDesign:ComboBoxAssist.ClassicMode="True"
					                  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120" Height="40" materialDesign:HintAssist.HintOpacity=".8"
					                  ItemsSource="{Binding RelatedMetricItemsSource}" SelectedItem="{Binding SelectedRelatedMetric}" 
                                      ToolTipService.ShowDuration="25000">
                                        <ComboBox.ToolTip>
                                            <ToolTip MaxWidth="350">
                                                <TextBlock
                                                    Text="Metric used to determine outliers" 
                                                    TextWrapping="Wrap"/>
                                            </ToolTip>
                                        </ComboBox.ToolTip>
                                    </ComboBox>
                                    <!--Outlier percentage-->
                                    <ComboBox Grid.Row="1" Grid.Column="1" materialDesign:HintAssist.Hint="Outlier percentage" materialDesign:ComboBoxAssist.ClassicMode="True"
					                  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="200" Width="120" Height="40" materialDesign:HintAssist.HintOpacity=".8"
					                  ItemsSource="{Binding OutlierPercentageItemsSource}" SelectedItem="{Binding SelectedOutlierPercentage}" 
                                      ToolTipService.ShowDuration="25000">
                                        <ComboBox.ToolTip>
                                            <ToolTip MaxWidth="350">
                                                <TextBlock
                                                    Text="The percentage the FPS of a run can differ from the median of all runs before being counted as an outlier" 
                                                    TextWrapping="Wrap"/>
                                            </ToolTip>
                                        </ComboBox.ToolTip>
                                    </ComboBox>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
</UserControl>
